{"version":3,"sources":["webpack://ReactDnd/webpack/universalModuleDefinition","webpack://ReactDnd/webpack/bootstrap","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/invariant/browser.js","webpack://ReactDnd/external \"React\"","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/shallowequal/index.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/interfaces.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/types.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/local/setClientOffset.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/utils/js_utils.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/beginDrag.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/publishDragSource.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/utils/matchesType.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/hover.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/drop.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/endDrag.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/utils/equality.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/reducers/dragOffset.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/registry.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/reducers/dragOperation.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/reducers/refCount.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/utils/dirtiness.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/reducers/dirtyHandlerIds.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/reducers/stateId.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/reducers/index.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/utils/coords.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/DragDropMonitorImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/utils/getNextUniqueId.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/contracts.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/HandlerRegistryImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/DragDropManagerImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/actions/dragDrop/index.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/dnd-core/lib/factories.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/DndContext.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://ReactDnd/(webpack)/buildin/global.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/DndProvider.js","webpack://ReactDnd/external \"Redux\"","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/asap/browser-asap.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/asap/browser-raw.js","webpack://ReactDnd/external \"ReactIs\"","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/DragPreviewImage.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/internal/useCollector.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/internal/useMonitorOutput.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/registration.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/internal/useDragDropManager.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/DragSourceMonitorImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/utils/cloneWithRef.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/wrapConnectorHooks.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/utils/isRef.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/SourceConnector.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/useDrag.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/internal/drag.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/TargetConnector.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/common/DropTargetMonitorImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/useDrop.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/internal/drop.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/hooks/useDragLayer.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/utils/js_utils.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/utils.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/disposables.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/decorateHandler.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/utils/isValidType.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/createSourceFactory.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/DragSource.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/createTargetFactory.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/DropTarget.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/DragLayer.js","webpack://ReactDnd/./dist/react-dnd/8.0.3/node_modules/react-dnd/lib/decorators/DragDropContext.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","condition","format","a","b","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","React","objA","objB","compare","compareContext","ret","keysA","keys","keysB","length","bHasOwnProperty","idx","valueA","valueB","HandlerRole","BEGIN_DRAG","HOVER","DROP","END_DRAG","setClientOffset","clientOffset","sourceClientOffset","type","payload","isObject","input","ResetCoordinatesAction","createBeginDrag","manager","sourceIds","options","publishSource","getSourceClientOffset","monitor","getMonitor","registry","getRegistry","dispatch","isDragging","getSource","verifyInvariants","sourceId","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","item","beginDrag","verifyItemIsObject","pinSource","itemType","getSourceType","isSourcePublic","createPublishDragSource","matchesType","targetType","draggedItemType","Array","isArray","some","createHover","targetIdsArg","verifyTargetIdsIsArray","targetIds","slice","didDrop","targetId","lastIndexOf","target","getTarget","checkInvariants","getTargetType","splice","removeNonMatchingTargetIds","getItemType","hover","hoverAllTargets","createDrop","getTargetIds","filter","canDropOnTarget","reverse","getDroppableTargets","forEach","index","dropResult","drop","verifyDropResultType","getDropResult","determineDropResult","action","createEndDrag","verifyIsDragging","getSourceId","endDrag","unpinSource","strictEquality","initialState","initialSourceClientOffset","initialClientOffset","dragOffset","state","offsetA","offsetB","x","y","REMOVE_TARGET","dragOperation","indexOf","items","refCount","NONE","ALL","dirtyHandlerIds","prevTargetIds","result","itemsA","itemsB","map","Map","insertItem","set","has","count","push","xor","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","stateId","reduce","obj","path","defaultValue","split","subtract","__IS_NONE__","__IS_ALL__","store","listener","handlerIds","prevStateId","getState","subscribe","currentStateId","dirtyIds","areDirty","previousState","nextState","source","canDrag","canDrop","Boolean","shallow","getDifferenceFromInitialOffset","nextUniqueId","validateType","allowArray","getNextHandlerId","role","id","toString","SOURCE","TARGET","parseRoleFromHandlerId","handlerId","mapContainsValue","searchValue","entries","isDone","done","next","types","dragSources","dropTargets","pinnedSourceId","pinnedSource","validateSourceContract","addHandler","addSource","validateTargetContract","addTarget","handler","includePinned","isSourceId","isTargetId","removeSource","delete","removeTarget","createBackend","context","debugMode","isSetUp","handleRefCountChange","shouldSetUp","backend","setup","teardown","reduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","instanceId","makeStoreInstance","actions","publishDragSource","boundActions","actionCreator","apply","createDragDropManager","DndContext","dragDropManager","createDndContext","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arguments","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","descriptor","g","Function","DndProvider","children","props","global","getGlobalContext","ctx","instanceSymbol","createSingletonDndContext","Provider","for","Redux","rawAsap","freeTasks","pendingErrors","requestErrorThrow","makeRequestCallFromTimer","shift","asap","task","rawTask","pop","RawTask","onerror","queue","requestFlush","flush","currentIndex","scan","newLength","toggle","observer","node","scope","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","callback","timeoutHandle","setTimeout","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","document","createTextNode","observe","characterData","data","ReactIs","DragPreviewImage","connect","src","Image","img","onload","useCollector","collect","onUpdate","collected","setCollected","updateCollected","nextValue","useMonitorOutput","onCollect","getHandlerId","subscribeToStateChange","registerTarget","registerSource","useDragDropManager","isCallingCanDrag","isCallingIsDragging","internalMonitor","isDraggingSource","isOverTarget","subscribeToOffsetChange","getItem","getInitialClientOffset","getInitialSourceClientOffset","getClientOffset","setRef","ref","current","wrapHookToRecognizeElement","hook","elementOrNode","element","throwIfCompositeComponentElement","newRef","previousRef","cloneWithRef","wrapConnectorHooks","hooks","wrappedHooks","endsWith","wrappedHook","isRef","dragSource","dragSourceOptions","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","reconnect","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","useDrag","spec","specRef","connector","getBackend","useDragSourceMonitor","begin","beginResult","globalMonitor","end","unregister","receiveHandlerId","useDragHandler","previewOptions","dropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","useDrop","accept","useDropTargetMonitor","useDropHandler","useDragLayer","isFunction","noop","isPlainObject","isObjectLike","proto","getDecoratedComponent","instanceRef","currentRef","decoratedRef","isRefable","C","Component","$$typeof","isRefForwardingComponent","checkDecoratorArguments","functionName","signature","isDisposed","dispose","isDisposable","empty","CompositeDisposable","disposables","shouldDispose","len","currentDisposables","SerialDisposable","old","decorateHandler","DecoratedComponent","createHandler","createMonitor","createConnector","registerHandler","containerDisplayName","getType","arePropsEqual","Decorated","DragDropContainer","super","handleChange","getCurrentState","setState","disposable","receiveProps","nextProps","currentType","prevProps","receiveType","handlerMonitor","handlerConnector","unsubscribe","setDisposable","Consumer","receiveDragDropManager","requestAnimationFrame","assign","isValidType","every","ALLOWED_SPEC_METHODS","REQUIRED_SPEC_METHODS","DragSource","createSource","join","createSourceFactory","DropTarget","createTarget","createTargetFactory","DragLayer","DragLayerContainer","isCurrentlyMounted","unsubscribeFromOffsetChange","unsubscribeFromStateChange","DragDropContext","backendFactory","backendContext","childContext","DragDropContextContainer","getManager","console","warn"],"mappings":"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","file":"ReactDnd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDnd\"] = factory();\n\telse\n\t\troot[\"ReactDnd\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","module.exports = React;","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","export var HandlerRole;\n(function (HandlerRole) {\n    HandlerRole[\"SOURCE\"] = \"SOURCE\";\n    HandlerRole[\"TARGET\"] = \"TARGET\";\n})(HandlerRole || (HandlerRole = {}));\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS';\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG';\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE';\nexport const HOVER = 'dnd-core/HOVER';\nexport const DROP = 'dnd-core/DROP';\nexport const END_DRAG = 'dnd-core/END_DRAG';\n","import { INIT_COORDS } from '../types';\nexport function setClientOffset(clientOffset, sourceClientOffset) {\n    return {\n        type: INIT_COORDS,\n        payload: {\n            sourceClientOffset: sourceClientOffset || null,\n            clientOffset: clientOffset || null,\n        },\n    };\n}\n","// cheap lodash replacements\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get(obj, path, defaultValue) {\n    return path\n        .split('.')\n        .reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj);\n}\n/**\n * drop-in replacement for _.without\n */\nexport function without(items, item) {\n    return items.filter(i => i !== item);\n}\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input) {\n    return typeof input === 'string';\n}\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input) {\n    return typeof input === 'object';\n}\n/**\n * repalcement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor(itemsA, itemsB) {\n    const map = new Map();\n    const insertItem = (item) => map.set(item, map.has(item) ? map.get(item) + 1 : 1);\n    itemsA.forEach(insertItem);\n    itemsB.forEach(insertItem);\n    const result = [];\n    map.forEach((count, key) => {\n        if (count === 1) {\n            result.push(key);\n        }\n    });\n    return result;\n}\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection(itemsA, itemsB) {\n    return itemsA.filter(t => itemsB.indexOf(t) > -1);\n}\n","import invariant from 'invariant';\nimport { setClientOffset } from './local/setClientOffset';\nimport { isObject } from '../../utils/js_utils';\nimport { BEGIN_DRAG, INIT_COORDS } from './types';\nconst ResetCoordinatesAction = {\n    type: INIT_COORDS,\n    payload: {\n        clientOffset: null,\n        sourceClientOffset: null,\n    },\n};\nexport default function createBeginDrag(manager) {\n    return function beginDrag(sourceIds = [], options = {\n        publishSource: true,\n    }) {\n        const { publishSource = true, clientOffset, getSourceClientOffset, } = options;\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        // Initialize the coordinates using the client offset\n        manager.dispatch(setClientOffset(clientOffset));\n        verifyInvariants(sourceIds, monitor, registry);\n        // Get the draggable source\n        const sourceId = getDraggableSource(sourceIds, monitor);\n        if (sourceId === null) {\n            manager.dispatch(ResetCoordinatesAction);\n            return;\n        }\n        // Get the source client offset\n        let sourceClientOffset = null;\n        if (clientOffset) {\n            verifyGetSourceClientOffsetIsFunction(getSourceClientOffset);\n            sourceClientOffset = getSourceClientOffset(sourceId);\n        }\n        // Initialize the full coordinates\n        manager.dispatch(setClientOffset(clientOffset, sourceClientOffset));\n        const source = registry.getSource(sourceId);\n        const item = source.beginDrag(monitor, sourceId);\n        verifyItemIsObject(item);\n        registry.pinSource(sourceId);\n        const itemType = registry.getSourceType(sourceId);\n        return {\n            type: BEGIN_DRAG,\n            payload: {\n                itemType,\n                item,\n                sourceId,\n                clientOffset: clientOffset || null,\n                sourceClientOffset: sourceClientOffset || null,\n                isSourcePublic: !!publishSource,\n            },\n        };\n    };\n}\nfunction verifyInvariants(sourceIds, monitor, registry) {\n    invariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n    for (const s of sourceIds) {\n        invariant(registry.getSource(s), 'Expected sourceIds to be registered.');\n    }\n}\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset) {\n    invariant(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n}\nfunction verifyItemIsObject(item) {\n    invariant(isObject(item), 'Item must be an object.');\n}\nfunction getDraggableSource(sourceIds, monitor) {\n    let sourceId = null;\n    for (let i = sourceIds.length - 1; i >= 0; i--) {\n        if (monitor.canDragSource(sourceIds[i])) {\n            sourceId = sourceIds[i];\n            break;\n        }\n    }\n    return sourceId;\n}\n","import { PUBLISH_DRAG_SOURCE } from './types';\nexport default function createPublishDragSource(manager) {\n    return function publishDragSource() {\n        const monitor = manager.getMonitor();\n        if (monitor.isDragging()) {\n            return { type: PUBLISH_DRAG_SOURCE };\n        }\n    };\n}\n","export default function matchesType(targetType, draggedItemType) {\n    if (draggedItemType === null) {\n        return targetType === null;\n    }\n    return Array.isArray(targetType)\n        ? targetType.some(t => t === draggedItemType)\n        : targetType === draggedItemType;\n}\n","import invariant from 'invariant';\nimport matchesType from '../../utils/matchesType';\nimport { HOVER } from './types';\nexport default function createHover(manager) {\n    return function hover(targetIdsArg, { clientOffset } = {}) {\n        verifyTargetIdsIsArray(targetIdsArg);\n        const targetIds = targetIdsArg.slice(0);\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        checkInvariants(targetIds, monitor, registry);\n        const draggedItemType = monitor.getItemType();\n        removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n        hoverAllTargets(targetIds, monitor, registry);\n        return {\n            type: HOVER,\n            payload: {\n                targetIds,\n                clientOffset: clientOffset || null,\n            },\n        };\n    };\n}\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n    invariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\nfunction checkInvariants(targetIds, monitor, registry) {\n    invariant(monitor.isDragging(), 'Cannot call hover while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call hover after drop.');\n    for (let i = 0; i < targetIds.length; i++) {\n        const targetId = targetIds[i];\n        invariant(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n        const target = registry.getTarget(targetId);\n        invariant(target, 'Expected targetIds to be registered.');\n    }\n}\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n    // Remove those targetIds that don't match the targetType.  This\n    // fixes shallow isOver which would only be non-shallow because of\n    // non-matching targets.\n    for (let i = targetIds.length - 1; i >= 0; i--) {\n        const targetId = targetIds[i];\n        const targetType = registry.getTargetType(targetId);\n        if (!matchesType(targetType, draggedItemType)) {\n            targetIds.splice(i, 1);\n        }\n    }\n}\nfunction hoverAllTargets(targetIds, monitor, registry) {\n    // Finally call hover on all matching targets.\n    for (const targetId of targetIds) {\n        const target = registry.getTarget(targetId);\n        target.hover(monitor, targetId);\n    }\n}\n","import invariant from 'invariant';\nimport { DROP } from './types';\nimport { isObject } from '../../utils/js_utils';\nexport default function createDrop(manager) {\n    return function drop(options = {}) {\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        verifyInvariants(monitor);\n        const targetIds = getDroppableTargets(monitor);\n        // Multiple actions are dispatched here, which is why this doesn't return an action\n        targetIds.forEach((targetId, index) => {\n            const dropResult = determineDropResult(targetId, index, registry, monitor);\n            const action = {\n                type: DROP,\n                payload: {\n                    dropResult: {\n                        ...options,\n                        ...dropResult,\n                    },\n                },\n            };\n            manager.dispatch(action);\n        });\n    };\n}\nfunction verifyInvariants(monitor) {\n    invariant(monitor.isDragging(), 'Cannot call drop while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call drop twice during one drag operation.');\n}\nfunction determineDropResult(targetId, index, registry, monitor) {\n    const target = registry.getTarget(targetId);\n    let dropResult = target ? target.drop(monitor, targetId) : undefined;\n    verifyDropResultType(dropResult);\n    if (typeof dropResult === 'undefined') {\n        dropResult = index === 0 ? {} : monitor.getDropResult();\n    }\n    return dropResult;\n}\nfunction verifyDropResultType(dropResult) {\n    invariant(typeof dropResult === 'undefined' || isObject(dropResult), 'Drop result must either be an object or undefined.');\n}\nfunction getDroppableTargets(monitor) {\n    const targetIds = monitor\n        .getTargetIds()\n        .filter(monitor.canDropOnTarget, monitor);\n    targetIds.reverse();\n    return targetIds;\n}\n","import invariant from 'invariant';\nimport { END_DRAG } from './types';\nexport default function createEndDrag(manager) {\n    return function endDrag() {\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        verifyIsDragging(monitor);\n        const sourceId = monitor.getSourceId();\n        const source = registry.getSource(sourceId, true);\n        source.endDrag(monitor, sourceId);\n        registry.unpinSource();\n        return { type: END_DRAG };\n    };\n}\nfunction verifyIsDragging(monitor) {\n    invariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.');\n}\n","export const strictEquality = (a, b) => a === b;\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(offsetA, offsetB) {\n    if (!offsetA && !offsetB) {\n        return true;\n    }\n    else if (!offsetA || !offsetB) {\n        return false;\n    }\n    else {\n        return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n    }\n}\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual(a, b, isEqual = strictEquality) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n        if (!isEqual(a[i], b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { INIT_COORDS, BEGIN_DRAG, HOVER, END_DRAG, DROP, } from '../actions/dragDrop';\nimport { areCoordsEqual } from '../utils/equality';\nconst initialState = {\n    initialSourceClientOffset: null,\n    initialClientOffset: null,\n    clientOffset: null,\n};\nexport default function dragOffset(state = initialState, action) {\n    const { payload } = action;\n    switch (action.type) {\n        case INIT_COORDS:\n        case BEGIN_DRAG:\n            return {\n                initialSourceClientOffset: payload.sourceClientOffset,\n                initialClientOffset: payload.clientOffset,\n                clientOffset: payload.clientOffset,\n            };\n        case HOVER:\n            if (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n                return state;\n            }\n            return {\n                ...state,\n                clientOffset: payload.clientOffset,\n            };\n        case END_DRAG:\n        case DROP:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","export const ADD_SOURCE = 'dnd-core/ADD_SOURCE';\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET';\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE';\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET';\nexport function addSource(sourceId) {\n    return {\n        type: ADD_SOURCE,\n        payload: {\n            sourceId,\n        },\n    };\n}\nexport function addTarget(targetId) {\n    return {\n        type: ADD_TARGET,\n        payload: {\n            targetId,\n        },\n    };\n}\nexport function removeSource(sourceId) {\n    return {\n        type: REMOVE_SOURCE,\n        payload: {\n            sourceId,\n        },\n    };\n}\nexport function removeTarget(targetId) {\n    return {\n        type: REMOVE_TARGET,\n        payload: {\n            targetId,\n        },\n    };\n}\n","import { BEGIN_DRAG, PUBLISH_DRAG_SOURCE, HOVER, END_DRAG, DROP, } from '../actions/dragDrop';\nimport { REMOVE_TARGET } from '../actions/registry';\nimport { without } from '../utils/js_utils';\nconst initialState = {\n    itemType: null,\n    item: null,\n    sourceId: null,\n    targetIds: [],\n    dropResult: null,\n    didDrop: false,\n    isSourcePublic: null,\n};\nexport default function dragOperation(state = initialState, action) {\n    const { payload } = action;\n    switch (action.type) {\n        case BEGIN_DRAG:\n            return {\n                ...state,\n                itemType: payload.itemType,\n                item: payload.item,\n                sourceId: payload.sourceId,\n                isSourcePublic: payload.isSourcePublic,\n                dropResult: null,\n                didDrop: false,\n            };\n        case PUBLISH_DRAG_SOURCE:\n            return {\n                ...state,\n                isSourcePublic: true,\n            };\n        case HOVER:\n            return {\n                ...state,\n                targetIds: payload.targetIds,\n            };\n        case REMOVE_TARGET:\n            if (state.targetIds.indexOf(payload.targetId) === -1) {\n                return state;\n            }\n            return {\n                ...state,\n                targetIds: without(state.targetIds, payload.targetId),\n            };\n        case DROP:\n            return {\n                ...state,\n                dropResult: payload.dropResult,\n                didDrop: true,\n                targetIds: [],\n            };\n        case END_DRAG:\n            return {\n                ...state,\n                itemType: null,\n                item: null,\n                sourceId: null,\n                dropResult: null,\n                didDrop: false,\n                isSourcePublic: null,\n                targetIds: [],\n            };\n        default:\n            return state;\n    }\n}\n","import { ADD_SOURCE, ADD_TARGET, REMOVE_SOURCE, REMOVE_TARGET, } from '../actions/registry';\nexport default function refCount(state = 0, action) {\n    switch (action.type) {\n        case ADD_SOURCE:\n        case ADD_TARGET:\n            return state + 1;\n        case REMOVE_SOURCE:\n        case REMOVE_TARGET:\n            return state - 1;\n        default:\n            return state;\n    }\n}\n","import { intersection } from './js_utils';\nexport const NONE = [];\nexport const ALL = [];\nNONE.__IS_NONE__ = true;\nALL.__IS_ALL__ = true;\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(dirtyIds, handlerIds) {\n    if (dirtyIds === NONE) {\n        return false;\n    }\n    if (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n        return true;\n    }\n    const commonIds = intersection(handlerIds, dirtyIds);\n    return commonIds.length > 0;\n}\n","import { BEGIN_DRAG, PUBLISH_DRAG_SOURCE, HOVER, END_DRAG, DROP, } from '../actions/dragDrop';\nimport { ADD_SOURCE, ADD_TARGET, REMOVE_SOURCE, REMOVE_TARGET, } from '../actions/registry';\nimport { areArraysEqual } from '../utils/equality';\nimport { NONE, ALL } from '../utils/dirtiness';\nimport { xor } from '../utils/js_utils';\nexport default function dirtyHandlerIds(state = NONE, action) {\n    switch (action.type) {\n        case HOVER:\n            break;\n        case ADD_SOURCE:\n        case ADD_TARGET:\n        case REMOVE_TARGET:\n        case REMOVE_SOURCE:\n            return NONE;\n        case BEGIN_DRAG:\n        case PUBLISH_DRAG_SOURCE:\n        case END_DRAG:\n        case DROP:\n        default:\n            return ALL;\n    }\n    const { targetIds = [], prevTargetIds = [] } = action.payload;\n    const result = xor(targetIds, prevTargetIds);\n    const didChange = result.length > 0 || !areArraysEqual(targetIds, prevTargetIds);\n    if (!didChange) {\n        return NONE;\n    }\n    // Check the target ids at the innermost position. If they are valid, add them\n    // to the result\n    const prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1];\n    const innermostTargetId = targetIds[targetIds.length - 1];\n    if (prevInnermostTargetId !== innermostTargetId) {\n        if (prevInnermostTargetId) {\n            result.push(prevInnermostTargetId);\n        }\n        if (innermostTargetId) {\n            result.push(innermostTargetId);\n        }\n    }\n    return result;\n}\n","export default function stateId(state = 0) {\n    return state + 1;\n}\n","import dragOffset from './dragOffset';\nimport dragOperation from './dragOperation';\nimport refCount from './refCount';\nimport dirtyHandlerIds from './dirtyHandlerIds';\nimport stateId from './stateId';\nimport { get } from '../utils/js_utils';\nexport default function reduce(state = {}, action) {\n    return {\n        dirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n            type: action.type,\n            payload: {\n                ...action.payload,\n                prevTargetIds: get(state, 'dragOperation.targetIds', []),\n            },\n        }),\n        dragOffset: dragOffset(state.dragOffset, action),\n        refCount: refCount(state.refCount, action),\n        dragOperation: dragOperation(state.dragOperation, action),\n        stateId: stateId(state.stateId),\n    };\n}\n","/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a, b) {\n    return {\n        x: a.x + b.x,\n        y: a.y + b.y,\n    };\n}\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a, b) {\n    return {\n        x: a.x - b.x,\n        y: a.y - b.y,\n    };\n}\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state) {\n    const { clientOffset, initialClientOffset, initialSourceClientOffset } = state;\n    if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n        return null;\n    }\n    return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\n}\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state) {\n    const { clientOffset, initialClientOffset } = state;\n    if (!clientOffset || !initialClientOffset) {\n        return null;\n    }\n    return subtract(clientOffset, initialClientOffset);\n}\n","import invariant from 'invariant';\nimport matchesType from './utils/matchesType';\nimport { getSourceClientOffset, getDifferenceFromInitialOffset, } from './utils/coords';\nimport { areDirty } from './utils/dirtiness';\nexport default class DragDropMonitorImpl {\n    constructor(store, registry) {\n        this.store = store;\n        this.registry = registry;\n    }\n    subscribeToStateChange(listener, options = { handlerIds: undefined }) {\n        const { handlerIds } = options;\n        invariant(typeof listener === 'function', 'listener must be a function.');\n        invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n        let prevStateId = this.store.getState().stateId;\n        const handleChange = () => {\n            const state = this.store.getState();\n            const currentStateId = state.stateId;\n            try {\n                const canSkipListener = currentStateId === prevStateId ||\n                    (currentStateId === prevStateId + 1 &&\n                        !areDirty(state.dirtyHandlerIds, handlerIds));\n                if (!canSkipListener) {\n                    listener();\n                }\n            }\n            finally {\n                prevStateId = currentStateId;\n            }\n        };\n        return this.store.subscribe(handleChange);\n    }\n    subscribeToOffsetChange(listener) {\n        invariant(typeof listener === 'function', 'listener must be a function.');\n        let previousState = this.store.getState().dragOffset;\n        const handleChange = () => {\n            const nextState = this.store.getState().dragOffset;\n            if (nextState === previousState) {\n                return;\n            }\n            previousState = nextState;\n            listener();\n        };\n        return this.store.subscribe(handleChange);\n    }\n    canDragSource(sourceId) {\n        if (!sourceId) {\n            return false;\n        }\n        const source = this.registry.getSource(sourceId);\n        invariant(source, 'Expected to find a valid source.');\n        if (this.isDragging()) {\n            return false;\n        }\n        return source.canDrag(this, sourceId);\n    }\n    canDropOnTarget(targetId) {\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        const target = this.registry.getTarget(targetId);\n        invariant(target, 'Expected to find a valid target.');\n        if (!this.isDragging() || this.didDrop()) {\n            return false;\n        }\n        const targetType = this.registry.getTargetType(targetId);\n        const draggedItemType = this.getItemType();\n        return (matchesType(targetType, draggedItemType) && target.canDrop(this, targetId));\n    }\n    isDragging() {\n        return Boolean(this.getItemType());\n    }\n    isDraggingSource(sourceId) {\n        // undefined on initial render\n        if (!sourceId) {\n            return false;\n        }\n        const source = this.registry.getSource(sourceId, true);\n        invariant(source, 'Expected to find a valid source.');\n        if (!this.isDragging() || !this.isSourcePublic()) {\n            return false;\n        }\n        const sourceType = this.registry.getSourceType(sourceId);\n        const draggedItemType = this.getItemType();\n        if (sourceType !== draggedItemType) {\n            return false;\n        }\n        return source.isDragging(this, sourceId);\n    }\n    isOverTarget(targetId, options = { shallow: false }) {\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        const { shallow } = options;\n        if (!this.isDragging()) {\n            return false;\n        }\n        const targetType = this.registry.getTargetType(targetId);\n        const draggedItemType = this.getItemType();\n        if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n            return false;\n        }\n        const targetIds = this.getTargetIds();\n        if (!targetIds.length) {\n            return false;\n        }\n        const index = targetIds.indexOf(targetId);\n        if (shallow) {\n            return index === targetIds.length - 1;\n        }\n        else {\n            return index > -1;\n        }\n    }\n    getItemType() {\n        return this.store.getState().dragOperation.itemType;\n    }\n    getItem() {\n        return this.store.getState().dragOperation.item;\n    }\n    getSourceId() {\n        return this.store.getState().dragOperation.sourceId;\n    }\n    getTargetIds() {\n        return this.store.getState().dragOperation.targetIds;\n    }\n    getDropResult() {\n        return this.store.getState().dragOperation.dropResult;\n    }\n    didDrop() {\n        return this.store.getState().dragOperation.didDrop;\n    }\n    isSourcePublic() {\n        return this.store.getState().dragOperation.isSourcePublic;\n    }\n    getInitialClientOffset() {\n        return this.store.getState().dragOffset.initialClientOffset;\n    }\n    getInitialSourceClientOffset() {\n        return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n    getClientOffset() {\n        return this.store.getState().dragOffset.clientOffset;\n    }\n    getSourceClientOffset() {\n        return getSourceClientOffset(this.store.getState().dragOffset);\n    }\n    getDifferenceFromInitialOffset() {\n        return getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n}\n","let nextUniqueId = 0;\nexport default function getNextUniqueId() {\n    return nextUniqueId++;\n}\n","import invariant from 'invariant';\nexport function validateSourceContract(source) {\n    invariant(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n    invariant(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n    invariant(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\nexport function validateTargetContract(target) {\n    invariant(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n    invariant(typeof target.hover === 'function', 'Expected hover to be a function.');\n    invariant(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\nexport function validateType(type, allowArray) {\n    if (allowArray && Array.isArray(type)) {\n        type.forEach(t => validateType(t, false));\n        return;\n    }\n    invariant(typeof type === 'string' || typeof type === 'symbol', allowArray\n        ? 'Type can only be a string, a symbol, or an array of either.'\n        : 'Type can only be a string or a symbol.');\n}\n","import asap from 'asap';\nimport invariant from 'invariant';\nimport { addSource, addTarget, removeSource, removeTarget, } from './actions/registry';\nimport getNextUniqueId from './utils/getNextUniqueId';\nimport { HandlerRole, } from './interfaces';\nimport { validateSourceContract, validateTargetContract, validateType, } from './contracts';\nfunction getNextHandlerId(role) {\n    const id = getNextUniqueId().toString();\n    switch (role) {\n        case HandlerRole.SOURCE:\n            return `S${id}`;\n        case HandlerRole.TARGET:\n            return `T${id}`;\n        default:\n            throw new Error(`Unknown Handler Role: ${role}`);\n    }\n}\nfunction parseRoleFromHandlerId(handlerId) {\n    switch (handlerId[0]) {\n        case 'S':\n            return HandlerRole.SOURCE;\n        case 'T':\n            return HandlerRole.TARGET;\n        default:\n            invariant(false, `Cannot parse handler ID: ${handlerId}`);\n    }\n}\nfunction mapContainsValue(map, searchValue) {\n    const entries = map.entries();\n    let isDone = false;\n    do {\n        const { done, value: [, value], } = entries.next();\n        if (value === searchValue) {\n            return true;\n        }\n        isDone = done;\n    } while (!isDone);\n    return false;\n}\nexport default class HandlerRegistryImpl {\n    constructor(store) {\n        this.store = store;\n        this.types = new Map();\n        this.dragSources = new Map();\n        this.dropTargets = new Map();\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    }\n    addSource(type, source) {\n        validateType(type);\n        validateSourceContract(source);\n        const sourceId = this.addHandler(HandlerRole.SOURCE, type, source);\n        this.store.dispatch(addSource(sourceId));\n        return sourceId;\n    }\n    addTarget(type, target) {\n        validateType(type, true);\n        validateTargetContract(target);\n        const targetId = this.addHandler(HandlerRole.TARGET, type, target);\n        this.store.dispatch(addTarget(targetId));\n        return targetId;\n    }\n    containsHandler(handler) {\n        return (mapContainsValue(this.dragSources, handler) ||\n            mapContainsValue(this.dropTargets, handler));\n    }\n    getSource(sourceId, includePinned = false) {\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        const isPinned = includePinned && sourceId === this.pinnedSourceId;\n        const source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n        return source;\n    }\n    getTarget(targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.dropTargets.get(targetId);\n    }\n    getSourceType(sourceId) {\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        return this.types.get(sourceId);\n    }\n    getTargetType(targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.types.get(targetId);\n    }\n    isSourceId(handlerId) {\n        const role = parseRoleFromHandlerId(handlerId);\n        return role === HandlerRole.SOURCE;\n    }\n    isTargetId(handlerId) {\n        const role = parseRoleFromHandlerId(handlerId);\n        return role === HandlerRole.TARGET;\n    }\n    removeSource(sourceId) {\n        invariant(this.getSource(sourceId), 'Expected an existing source.');\n        this.store.dispatch(removeSource(sourceId));\n        asap(() => {\n            this.dragSources.delete(sourceId);\n            this.types.delete(sourceId);\n        });\n    }\n    removeTarget(targetId) {\n        invariant(this.getTarget(targetId), 'Expected an existing target.');\n        this.store.dispatch(removeTarget(targetId));\n        this.dropTargets.delete(targetId);\n        this.types.delete(targetId);\n    }\n    pinSource(sourceId) {\n        const source = this.getSource(sourceId);\n        invariant(source, 'Expected an existing source.');\n        this.pinnedSourceId = sourceId;\n        this.pinnedSource = source;\n    }\n    unpinSource() {\n        invariant(this.pinnedSource, 'No source is pinned at the time.');\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    }\n    addHandler(role, type, handler) {\n        const id = getNextHandlerId(role);\n        this.types.set(id, type);\n        if (role === HandlerRole.SOURCE) {\n            this.dragSources.set(id, handler);\n        }\n        else if (role === HandlerRole.TARGET) {\n            this.dropTargets.set(id, handler);\n        }\n        return id;\n    }\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport dragDropActions from './actions/dragDrop';\nimport DragDropMonitorImpl from './DragDropMonitorImpl';\nimport HandlerRegistryImpl from './HandlerRegistryImpl';\nfunction makeStoreInstance(debugMode) {\n    // TODO: if we ever make a react-native version of this,\n    // we'll need to consider how to pull off dev-tooling\n    const reduxDevTools = typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION__;\n    return createStore(reducer, debugMode &&\n        reduxDevTools &&\n        reduxDevTools({\n            name: 'dnd-core',\n            instanceId: 'dnd-core',\n        }));\n}\nexport default class DragDropManagerImpl {\n    constructor(createBackend, context = {}, debugMode = false) {\n        this.context = context;\n        this.isSetUp = false;\n        this.handleRefCountChange = () => {\n            const shouldSetUp = this.store.getState().refCount > 0;\n            if (shouldSetUp && !this.isSetUp) {\n                this.backend.setup();\n                this.isSetUp = true;\n            }\n            else if (!shouldSetUp && this.isSetUp) {\n                this.backend.teardown();\n                this.isSetUp = false;\n            }\n        };\n        const store = makeStoreInstance(debugMode);\n        this.store = store;\n        this.monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store));\n        this.backend = createBackend(this);\n        store.subscribe(this.handleRefCountChange);\n    }\n    getContext() {\n        return this.context;\n    }\n    getMonitor() {\n        return this.monitor;\n    }\n    getBackend() {\n        return this.backend;\n    }\n    getRegistry() {\n        return this.monitor.registry;\n    }\n    getActions() {\n        const manager = this;\n        const { dispatch } = this.store;\n        function bindActionCreator(actionCreator) {\n            return (...args) => {\n                const action = actionCreator.apply(manager, args);\n                if (typeof action !== 'undefined') {\n                    dispatch(action);\n                }\n            };\n        }\n        const actions = dragDropActions(this);\n        return Object.keys(actions).reduce((boundActions, key) => {\n            const action = actions[key];\n            boundActions[key] = bindActionCreator(action);\n            return boundActions;\n        }, {});\n    }\n    dispatch(action) {\n        this.store.dispatch(action);\n    }\n}\n","import createBeginDrag from './beginDrag';\nimport createPublishDragSource from './publishDragSource';\nimport createHover from './hover';\nimport createDrop from './drop';\nimport createEndDrag from './endDrag';\nexport * from './types';\nexport default function createDragDropActions(manager) {\n    return {\n        beginDrag: createBeginDrag(manager),\n        publishDragSource: createPublishDragSource(manager),\n        hover: createHover(manager),\n        drop: createDrop(manager),\n        endDrag: createEndDrag(manager),\n    };\n}\n","import DragDropManagerImpl from './DragDropManagerImpl';\nexport function createDragDropManager(backend, context, debugMode) {\n    return new DragDropManagerImpl(backend, context, debugMode);\n}\n","import * as React from 'react';\nimport { createDragDropManager, } from 'dnd-core';\n/**\n * Create the React Context\n */\nexport const DndContext = React.createContext({\n    dragDropManager: undefined,\n});\n/**\n * Creates the context object we're providing\n * @param backend\n * @param context\n */\nexport function createDndContext(backend, context, debugMode) {\n    return {\n        dragDropManager: createDragDropManager(backend, context, debugMode),\n    };\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import * as React from 'react';\nimport { memo } from 'react';\nimport { DndContext, createDndContext } from './DndContext';\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider = memo(({ children, ...props }) => {\n    const context = 'manager' in props\n        ? { dragDropManager: props.manager }\n        : createSingletonDndContext(props.backend, props.context, props.debugMode);\n    return React.createElement(DndContext.Provider, { value: context }, children);\n});\nconst instanceSymbol = Symbol.for('__REACT_DND_CONTEXT_INSTANCE__');\nfunction createSingletonDndContext(backend, context = getGlobalContext(), debugMode) {\n    const ctx = context;\n    if (!ctx[instanceSymbol]) {\n        ctx[instanceSymbol] = createDndContext(backend, context, debugMode);\n    }\n    return ctx[instanceSymbol];\n}\nfunction getGlobalContext() {\n    return typeof global !== 'undefined' ? global : window;\n}\n","module.exports = Redux;","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","module.exports = ReactIs;","import * as React from 'react';\n/*\n * A utility for rendering a drag preview image\n */\nexport const DragPreviewImage = React.memo(({ connect, src }) => {\n    if (typeof Image !== 'undefined') {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => connect(img);\n    }\n    return null;\n});\nDragPreviewImage.displayName = 'DragPreviewImage';\n","import shallowEqual from 'shallowequal';\nimport { useState, useCallback } from 'react';\n/**\n *\n * @param monitor The monitor to colelct state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector(monitor, collect, onUpdate) {\n    const [collected, setCollected] = useState(() => collect(monitor));\n    const updateCollected = useCallback(() => {\n        const nextValue = collect(monitor);\n        if (!shallowEqual(collected, nextValue)) {\n            setCollected(nextValue);\n            if (onUpdate) {\n                onUpdate();\n            }\n        }\n    }, [collected, monitor, onUpdate]);\n    return [collected, updateCollected];\n}\n","import { useEffect } from 'react';\nimport { useCollector } from './useCollector';\nexport function useMonitorOutput(monitor, collect, onCollect) {\n    const [collected, updateCollected] = useCollector(monitor, collect, onCollect);\n    useEffect(function subscribeToMonitorStateChange() {\n        const handlerId = monitor.getHandlerId();\n        if (handlerId == null) {\n            return undefined;\n        }\n        return monitor.subscribeToStateChange(updateCollected, {\n            handlerIds: [handlerId],\n        });\n    }, [monitor, updateCollected]);\n    return collected;\n}\n","export function registerTarget(type, target, manager) {\n    const registry = manager.getRegistry();\n    const targetId = registry.addTarget(type, target);\n    return [targetId, () => registry.removeTarget(targetId)];\n}\nexport function registerSource(type, source, manager) {\n    const registry = manager.getRegistry();\n    const sourceId = registry.addSource(type, source);\n    return [sourceId, () => registry.removeSource(sourceId)];\n}\n","import { useContext } from 'react';\nimport invariant from 'invariant';\nimport { DndContext } from '../../common/DndContext';\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager() {\n    const { dragDropManager } = useContext(DndContext);\n    invariant(dragDropManager != null, 'Expected drag drop context');\n    return dragDropManager;\n}\n","import invariant from 'invariant';\nlet isCallingCanDrag = false;\nlet isCallingIsDragging = false;\nexport class DragSourceMonitorImpl {\n    constructor(manager) {\n        this.sourceId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n    receiveHandlerId(sourceId) {\n        this.sourceId = sourceId;\n    }\n    getHandlerId() {\n        return this.sourceId;\n    }\n    canDrag() {\n        invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingCanDrag = true;\n            return this.internalMonitor.canDragSource(this.sourceId);\n        }\n        finally {\n            isCallingCanDrag = false;\n        }\n    }\n    isDragging() {\n        if (!this.sourceId) {\n            return false;\n        }\n        invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingIsDragging = true;\n            return this.internalMonitor.isDraggingSource(this.sourceId);\n        }\n        finally {\n            isCallingIsDragging = false;\n        }\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    isDraggingSource(sourceId) {\n        return this.internalMonitor.isDraggingSource(sourceId);\n    }\n    isOverTarget(targetId, options) {\n        return this.internalMonitor.isOverTarget(targetId, options);\n    }\n    getTargetIds() {\n        return this.internalMonitor.getTargetIds();\n    }\n    isSourcePublic() {\n        return this.internalMonitor.isSourcePublic();\n    }\n    getSourceId() {\n        return this.internalMonitor.getSourceId();\n    }\n    subscribeToOffsetChange(listener) {\n        return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n    canDragSource(sourceId) {\n        return this.internalMonitor.canDragSource(sourceId);\n    }\n    canDropOnTarget(targetId) {\n        return this.internalMonitor.canDropOnTarget(targetId);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n}\n","import { cloneElement } from 'react';\nimport invariant from 'invariant';\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    }\n    else {\n        ref.current = node;\n    }\n}\nexport function cloneWithRef(element, newRef) {\n    const previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' +\n        'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n        'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return cloneElement(element, {\n            ref: newRef,\n        });\n    }\n    return cloneElement(element, {\n        ref: (node) => {\n            setRef(newRef, node);\n            if (previousRef) {\n                setRef(previousRef, node);\n            }\n        },\n    });\n}\n","import { isValidElement } from 'react';\nimport { cloneWithRef } from '../utils/cloneWithRef';\nfunction throwIfCompositeComponentElement(element) {\n    // Custom components can no longer be wrapped directly in React DnD 2.0\n    // so that we don't need to depend on findDOMNode() from react-dom.\n    if (typeof element.type === 'string') {\n        return;\n    }\n    const displayName = element.type.displayName || element.type.name || 'the component';\n    throw new Error('Only native element nodes can now be passed to React DnD connectors.' +\n        `You can either wrap ${displayName} into a <div>, or turn it into a ` +\n        'drag source or a drop target itself.');\n}\nfunction wrapHookToRecognizeElement(hook) {\n    return (elementOrNode = null, options = null) => {\n        // When passed a node, call the hook straight away.\n        if (!isValidElement(elementOrNode)) {\n            const node = elementOrNode;\n            hook(node, options);\n            // return the node so it can be chained (e.g. when within callback refs\n            // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n            return node;\n        }\n        // If passed a ReactElement, clone it and attach this function as a ref.\n        // This helps us achieve a neat API where user doesn't even know that refs\n        // are being used under the hood.\n        const element = elementOrNode;\n        throwIfCompositeComponentElement(element);\n        // When no options are passed, use the hook directly\n        const ref = options ? (node) => hook(node, options) : hook;\n        return cloneWithRef(element, ref);\n    };\n}\nexport default function wrapConnectorHooks(hooks) {\n    const wrappedHooks = {};\n    Object.keys(hooks).forEach(key => {\n        const hook = hooks[key];\n        // ref objects should be passed straight through without wrapping\n        if (key.endsWith('Ref')) {\n            wrappedHooks[key] = hooks[key];\n        }\n        else {\n            const wrappedHook = wrapHookToRecognizeElement(hook);\n            wrappedHooks[key] = () => wrappedHook;\n        }\n    });\n    return wrappedHooks;\n}\n","export function isRef(obj) {\n    return (obj !== null && typeof obj === 'object' && obj.hasOwnProperty('current'));\n}\n","import wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nimport shallowEqual from 'shallowequal';\nexport class SourceConnector {\n    constructor(backend) {\n        this.backend = backend;\n        this.hooks = wrapConnectorHooks({\n            dragSource: (node, options) => {\n                this.dragSourceOptions = options || null;\n                if (isRef(node)) {\n                    this.dragSourceRef = node;\n                }\n                else {\n                    this.dragSourceNode = node;\n                }\n                this.reconnectDragSource();\n            },\n            dragPreview: (node, options) => {\n                this.dragPreviewOptions = options || null;\n                if (isRef(node)) {\n                    this.dragPreviewRef = node;\n                }\n                else {\n                    this.dragPreviewNode = node;\n                }\n                this.reconnectDragPreview();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dragSourceRef = null;\n        this.dragSourceOptionsInternal = null;\n        // The drag preview may either be attached via ref or connect function\n        this.dragPreviewRef = null;\n        this.dragPreviewOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDragSource = null;\n        this.lastConnectedDragSourceOptions = null;\n        this.lastConnectedDragPreview = null;\n        this.lastConnectedDragPreviewOptions = null;\n    }\n    receiveHandlerId(newHandlerId) {\n        if (this.handlerId === newHandlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get connectTarget() {\n        return this.dragSource;\n    }\n    get dragSourceOptions() {\n        return this.dragSourceOptionsInternal;\n    }\n    set dragSourceOptions(options) {\n        this.dragSourceOptionsInternal = options;\n    }\n    get dragPreviewOptions() {\n        return this.dragPreviewOptionsInternal;\n    }\n    set dragPreviewOptions(options) {\n        this.dragPreviewOptionsInternal = options;\n    }\n    reconnect() {\n        this.reconnectDragSource();\n        this.reconnectDragPreview();\n    }\n    reconnectDragSource() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() ||\n            this.didConnectedDragSourceChange() ||\n            this.didDragSourceOptionsChange();\n        if (didChange) {\n            this.disconnectDragSource();\n        }\n        const dragSource = this.dragSource;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dragSource) {\n            this.lastConnectedDragSource = dragSource;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragSource = dragSource;\n            this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n            this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n        }\n    }\n    reconnectDragPreview() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() ||\n            this.didConnectedDragPreviewChange() ||\n            this.didDragPreviewOptionsChange();\n        if (didChange) {\n            this.disconnectDragPreview();\n        }\n        const dragPreview = this.dragPreview;\n        if (!this.handlerId || !dragPreview) {\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragPreview = dragPreview;\n            this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n            this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n        }\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didConnectedDragSourceChange() {\n        return this.lastConnectedDragSource !== this.dragSource;\n    }\n    didConnectedDragPreviewChange() {\n        return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n    didDragSourceOptionsChange() {\n        return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n    didDragPreviewOptionsChange() {\n        return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n    disconnectDragSource() {\n        if (this.dragSourceUnsubscribe) {\n            this.dragSourceUnsubscribe();\n            this.dragSourceUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    }\n    disconnectDragPreview() {\n        if (this.dragPreviewUnsubscribe) {\n            this.dragPreviewUnsubscribe();\n            this.dragPreviewUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    }\n    get dragSource() {\n        return (this.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current));\n    }\n    get dragPreview() {\n        return (this.dragPreviewNode ||\n            (this.dragPreviewRef && this.dragPreviewRef.current));\n    }\n}\n","import { useEffect, useRef, useMemo } from 'react';\nimport invariant from 'invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useDragSourceMonitor, useDragHandler } from './internal/drag';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\nexport function useDrag(spec) {\n    const specRef = useRef(spec);\n    specRef.current = spec;\n    // TODO: wire options into createSourceConnector\n    invariant(spec.item != null, 'item must be defined');\n    invariant(spec.item.type != null, 'item type must be defined');\n    const [monitor, connector] = useDragSourceMonitor();\n    useDragHandler(specRef, monitor, connector);\n    const result = useMonitorOutput(monitor, specRef.current.collect || (() => ({})), () => connector.reconnect());\n    const connectDragSource = useMemo(() => connector.hooks.dragSource(), [\n        connector,\n    ]);\n    const connectDragPreview = useMemo(() => connector.hooks.dragPreview(), [\n        connector,\n    ]);\n    useEffect(() => {\n        connector.dragSourceOptions = specRef.current.options || null;\n        connector.reconnect();\n    }, [connector]);\n    useEffect(() => {\n        connector.dragPreviewOptions = specRef.current.previewOptions || null;\n        connector.reconnect();\n    }, [connector]);\n    return [result, connectDragSource, connectDragPreview];\n}\n","import { useEffect, useMemo } from 'react';\nimport invariant from 'invariant';\nimport { registerSource } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { DragSourceMonitorImpl } from '../../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../../common/SourceConnector';\nexport function useDragSourceMonitor() {\n    const manager = useDragDropManager();\n    const monitor = useMemo(() => new DragSourceMonitorImpl(manager), [manager]);\n    const connector = useMemo(() => new SourceConnector(manager.getBackend()), [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexport function useDragHandler(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const handler = useMemo(() => {\n        return {\n            beginDrag() {\n                const { begin, item } = spec.current;\n                if (begin) {\n                    const beginResult = begin(monitor);\n                    invariant(beginResult == null || typeof beginResult === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n                    return beginResult || item || {};\n                }\n                return item || {};\n            },\n            canDrag() {\n                if (typeof spec.current.canDrag === 'boolean') {\n                    return spec.current.canDrag;\n                }\n                else if (typeof spec.current.canDrag === 'function') {\n                    return spec.current.canDrag(monitor);\n                }\n                else {\n                    return true;\n                }\n            },\n            isDragging(globalMonitor, target) {\n                const { isDragging } = spec.current;\n                return isDragging\n                    ? isDragging(monitor)\n                    : target === globalMonitor.getSourceId();\n            },\n            endDrag() {\n                const { end } = spec.current;\n                if (end) {\n                    end(monitor.getItem(), monitor);\n                }\n                connector.reconnect();\n            },\n        };\n    }, []);\n    useEffect(function registerHandler() {\n        const [handlerId, unregister] = registerSource(spec.current.item.type, handler, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, []);\n}\n","import shallowEqual from 'shallowequal';\nimport wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\nexport class TargetConnector {\n    constructor(backend) {\n        this.backend = backend;\n        this.hooks = wrapConnectorHooks({\n            dropTarget: (node, options) => {\n                this.dropTargetOptions = options;\n                if (isRef(node)) {\n                    this.dropTargetRef = node;\n                }\n                else {\n                    this.dropTargetNode = node;\n                }\n                this.reconnect();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n    }\n    get connectTarget() {\n        return this.dropTarget;\n    }\n    reconnect() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() ||\n            this.didDropTargetChange() ||\n            this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        const dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    }\n    receiveHandlerId(newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get dropTargetOptions() {\n        return this.dropTargetOptionsInternal;\n    }\n    set dropTargetOptions(options) {\n        this.dropTargetOptionsInternal = options;\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didDropTargetChange() {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    }\n    didOptionsChange() {\n        return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    }\n    disconnectDropTarget() {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    }\n    get dropTarget() {\n        return (this.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current));\n    }\n}\n","import invariant from 'invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n    constructor(manager) {\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n    receiveHandlerId(targetId) {\n        this.targetId = targetId;\n    }\n    getHandlerId() {\n        return this.targetId;\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    canDrop() {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        }\n        finally {\n            isCallingCanDrop = false;\n        }\n    }\n    isOver(options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n}\n","import { useEffect, useRef, useMemo } from 'react';\nimport invariant from 'invariant';\nimport { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useDropHandler, useDropTargetMonitor } from './internal/drop';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification\n */\nexport function useDrop(spec) {\n    const specRef = useRef(spec);\n    specRef.current = spec;\n    invariant(spec.accept != null, 'accept must be defined');\n    const [monitor, connector] = useDropTargetMonitor();\n    useDropHandler(specRef, monitor, connector);\n    const result = useMonitorOutput(monitor, specRef.current.collect || (() => ({})), () => connector.reconnect());\n    const connectDropTarget = useMemo(() => connector.hooks.dropTarget(), [\n        connector,\n    ]);\n    useEffect(() => {\n        connector.dropTargetOptions = spec.options || null;\n        connector.reconnect();\n    }, [spec.options]);\n    return [result, connectDropTarget];\n}\n","import { useEffect, useMemo } from 'react';\nimport { registerTarget } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { TargetConnector } from '../../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../../common/DropTargetMonitorImpl';\nexport function useDropTargetMonitor() {\n    const manager = useDragDropManager();\n    const monitor = useMemo(() => new DropTargetMonitorImpl(manager), [manager]);\n    const connector = useMemo(() => new TargetConnector(manager.getBackend()), [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexport function useDropHandler(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const handler = useMemo(() => {\n        return {\n            canDrop() {\n                const { canDrop } = spec.current;\n                return canDrop ? canDrop(monitor.getItem(), monitor) : true;\n            },\n            hover() {\n                const { hover } = spec.current;\n                if (hover) {\n                    hover(monitor.getItem(), monitor);\n                }\n            },\n            drop() {\n                const { drop } = spec.current;\n                if (drop) {\n                    return drop(monitor.getItem(), monitor);\n                }\n            },\n        };\n    }, [monitor]);\n    useEffect(function registerHandler() {\n        const [handlerId, unregister] = registerTarget(spec.current.accept, handler, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, [monitor, connector]);\n}\n","import { useEffect } from 'react';\nimport { useDragDropManager } from './internal/useDragDropManager';\nimport { useCollector } from './internal/useCollector';\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer(collect) {\n    const dragDropManager = useDragDropManager();\n    const monitor = dragDropManager.getMonitor();\n    const [collected, updateCollected] = useCollector(monitor, collect);\n    useEffect(() => monitor.subscribeToOffsetChange(updateCollected));\n    useEffect(() => monitor.subscribeToStateChange(updateCollected));\n    return collected;\n}\n","// cheap lodash replacements\nexport function isFunction(input) {\n    return typeof input === 'function';\n}\nexport function noop() {\n    // noop\n}\nfunction isObjectLike(input) {\n    return typeof input === 'object' && input !== null;\n}\nexport function isPlainObject(input) {\n    if (!isObjectLike(input)) {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","export function getDecoratedComponent(instanceRef) {\n    const currentRef = instanceRef.current;\n    if (currentRef == null) {\n        return null;\n    }\n    else if (currentRef.decoratedRef) {\n        // go through the private field in decorateHandler to avoid the invariant hit\n        return currentRef.decoratedRef.current;\n    }\n    else {\n        return currentRef;\n    }\n}\nexport function isClassComponent(Component) {\n    return (Component &&\n        Component.prototype &&\n        typeof Component.prototype.render === 'function');\n}\nexport function isRefForwardingComponent(C) {\n    return (C && C.$$typeof && C.$$typeof.toString() === 'Symbol(react.forward_ref)');\n}\nexport function isRefable(C) {\n    return isClassComponent(C) || isRefForwardingComponent(C);\n}\nexport function checkDecoratorArguments(functionName, signature, ...args) {\n    if (process.env.NODE_ENV !== 'production') {\n        for (const arg of args) {\n            if (arg && arg.prototype && arg.prototype.render) {\n                // eslint-disable-next-line no-console\n                console.error('You seem to be applying the arguments in the wrong order. ' +\n                    `It should be ${functionName}(${signature})(Component), not the other way around. ` +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#you-seem-to-be-applying-the-arguments-in-the-wrong-order');\n                return;\n            }\n        }\n    }\n}\n","import { isFunction, noop } from '../utils/js_utils';\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\nexport class Disposable {\n    constructor(action) {\n        this.isDisposed = false;\n        this.action = isFunction(action) ? action : noop;\n    }\n    /**\n     * Validates whether the given object is a disposable\n     * @param {Object} Object to test whether it has a dispose method\n     * @returns {Boolean} true if a disposable object, else false.\n     */\n    static isDisposable(d) {\n        return d && isFunction(d.dispose);\n    }\n    static _fixup(result) {\n        return Disposable.isDisposable(result) ? result : Disposable.empty;\n    }\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n    static create(action) {\n        return new Disposable(action);\n    }\n    /** Performs the task of cleaning up resources. */\n    dispose() {\n        if (!this.isDisposed) {\n            this.action();\n            this.isDisposed = true;\n        }\n    }\n}\n/**\n * Gets the disposable that does nothing when disposed.\n */\nDisposable.empty = { dispose: noop };\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\nexport class CompositeDisposable {\n    constructor(...disposables) {\n        this.isDisposed = false;\n        this.disposables = disposables;\n    }\n    /**\n     * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n     * @param {Any} item Disposable to add.\n     */\n    add(item) {\n        if (this.isDisposed) {\n            item.dispose();\n        }\n        else {\n            this.disposables.push(item);\n        }\n    }\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n    remove(item) {\n        let shouldDispose = false;\n        if (!this.isDisposed) {\n            const idx = this.disposables.indexOf(item);\n            if (idx !== -1) {\n                shouldDispose = true;\n                this.disposables.splice(idx, 1);\n                item.dispose();\n            }\n        }\n        return shouldDispose;\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n    clear() {\n        if (!this.isDisposed) {\n            const len = this.disposables.length;\n            const currentDisposables = new Array(len);\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i] = this.disposables[i];\n            }\n            this.disposables = [];\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i].dispose();\n            }\n        }\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n    dispose() {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            const len = this.disposables.length;\n            const currentDisposables = new Array(len);\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i] = this.disposables[i];\n            }\n            this.disposables = [];\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i].dispose();\n            }\n        }\n    }\n}\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\nexport class SerialDisposable {\n    constructor() {\n        this.isDisposed = false;\n    }\n    /**\n     * Gets the underlying disposable.\n     * @returns {Any} the underlying disposable.\n     */\n    getDisposable() {\n        return this.current;\n    }\n    setDisposable(value) {\n        const shouldDispose = this.isDisposed;\n        if (!shouldDispose) {\n            const old = this.current;\n            this.current = value;\n            if (old) {\n                old.dispose();\n            }\n        }\n        if (shouldDispose && value) {\n            value.dispose();\n        }\n    }\n    /** Performs the task of cleaning up resources. */\n    dispose() {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            const old = this.current;\n            this.current = undefined;\n            if (old) {\n                old.dispose();\n            }\n        }\n    }\n}\n","import * as React from 'react';\nimport shallowEqual from 'shallowequal';\nimport invariant from 'invariant';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { DndContext } from '../index';\nimport { isPlainObject } from '../utils/js_utils';\nimport { Disposable, CompositeDisposable, SerialDisposable, } from './disposables';\nimport { isRefable } from './utils';\nexport default function decorateHandler({ DecoratedComponent, createHandler, createMonitor, createConnector, registerHandler, containerDisplayName, getType, collect, options, }) {\n    const { arePropsEqual = shallowEqual } = options;\n    const Decorated = DecoratedComponent;\n    const displayName = DecoratedComponent.displayName || DecoratedComponent.name || 'Component';\n    class DragDropContainer extends React.Component {\n        constructor(props) {\n            super(props);\n            this.decoratedRef = React.createRef();\n            this.handleChange = () => {\n                const nextState = this.getCurrentState();\n                if (!shallowEqual(nextState, this.state)) {\n                    this.setState(nextState);\n                }\n            };\n            this.disposable = new SerialDisposable();\n            this.receiveProps(props);\n            this.dispose();\n        }\n        getHandlerId() {\n            return this.handlerId;\n        }\n        getDecoratedComponentInstance() {\n            invariant(this.decoratedRef.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n            return this.decoratedRef.current;\n        }\n        shouldComponentUpdate(nextProps, nextState) {\n            return (!arePropsEqual(nextProps, this.props) ||\n                !shallowEqual(nextState, this.state));\n        }\n        componentDidMount() {\n            this.disposable = new SerialDisposable();\n            this.currentType = undefined;\n            this.receiveProps(this.props);\n            this.handleChange();\n        }\n        componentDidUpdate(prevProps) {\n            if (!arePropsEqual(this.props, prevProps)) {\n                this.receiveProps(this.props);\n                this.handleChange();\n            }\n        }\n        componentWillUnmount() {\n            this.dispose();\n        }\n        receiveProps(props) {\n            if (!this.handler) {\n                return;\n            }\n            this.handler.receiveProps(props);\n            this.receiveType(getType(props));\n        }\n        receiveType(type) {\n            if (!this.handlerMonitor || !this.manager || !this.handlerConnector) {\n                return;\n            }\n            if (type === this.currentType) {\n                return;\n            }\n            this.currentType = type;\n            const [handlerId, unregister] = registerHandler(type, this.handler, this.manager);\n            this.handlerId = handlerId;\n            this.handlerMonitor.receiveHandlerId(handlerId);\n            this.handlerConnector.receiveHandlerId(handlerId);\n            const globalMonitor = this.manager.getMonitor();\n            const unsubscribe = globalMonitor.subscribeToStateChange(this.handleChange, { handlerIds: [handlerId] });\n            this.disposable.setDisposable(new CompositeDisposable(new Disposable(unsubscribe), new Disposable(unregister)));\n        }\n        dispose() {\n            this.disposable.dispose();\n            if (this.handlerConnector) {\n                this.handlerConnector.receiveHandlerId(null);\n            }\n        }\n        getCurrentState() {\n            if (!this.handlerConnector) {\n                return {};\n            }\n            const nextState = collect(this.handlerConnector.hooks, this.handlerMonitor, this.props);\n            if (process.env.NODE_ENV !== 'production') {\n                invariant(isPlainObject(nextState), 'Expected `collect` specified as the second argument to ' +\n                    '%s for %s to return a plain object of props to inject. ' +\n                    'Instead, received %s.', containerDisplayName, displayName, nextState);\n            }\n            return nextState;\n        }\n        render() {\n            return (React.createElement(DndContext.Consumer, null, ({ dragDropManager }) => {\n                this.receiveDragDropManager(dragDropManager);\n                if (typeof requestAnimationFrame !== 'undefined') {\n                    requestAnimationFrame(() => this.handlerConnector.reconnect());\n                }\n                return (React.createElement(Decorated, Object.assign({}, this.props, this.getCurrentState(), { \n                    // NOTE: if Decorated is a Function Component, decoratedRef will not be populated unless it's a refforwarding component.\n                    ref: isRefable(Decorated) ? this.decoratedRef : null })));\n            }));\n        }\n        receiveDragDropManager(dragDropManager) {\n            if (this.manager !== undefined) {\n                return;\n            }\n            invariant(dragDropManager !== undefined, 'Could not find the drag and drop manager in the context of %s. ' +\n                'Make sure to wrap the top-level component of your app with DragDropContext. ' +\n                'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n            if (dragDropManager === undefined) {\n                return;\n            }\n            this.manager = dragDropManager;\n            this.handlerMonitor = createMonitor(dragDropManager);\n            this.handlerConnector = createConnector(dragDropManager.getBackend());\n            this.handler = createHandler(this.handlerMonitor, this.decoratedRef);\n        }\n    }\n    DragDropContainer.DecoratedComponent = DecoratedComponent;\n    DragDropContainer.displayName = `${containerDisplayName}(${displayName})`;\n    return hoistStatics(DragDropContainer, DecoratedComponent);\n}\n","export function isValidType(type, allowArray) {\n    return (typeof type === 'string' ||\n        typeof type === 'symbol' ||\n        (!!allowArray &&\n            Array.isArray(type) &&\n            type.every(t => isValidType(t, false))));\n}\n","import invariant from 'invariant';\nimport { isPlainObject } from '../utils/js_utils';\nimport { getDecoratedComponent } from './utils';\nconst ALLOWED_SPEC_METHODS = ['canDrag', 'beginDrag', 'isDragging', 'endDrag'];\nconst REQUIRED_SPEC_METHODS = ['beginDrag'];\nclass SourceImpl {\n    constructor(spec, monitor, ref) {\n        this.spec = spec;\n        this.monitor = monitor;\n        this.ref = ref;\n        this.props = null;\n        this.beginDrag = () => {\n            if (!this.props) {\n                return;\n            }\n            const item = this.spec.beginDrag(this.props, this.monitor, this.ref.current);\n            if (process.env.NODE_ENV !== 'production') {\n                invariant(isPlainObject(item), 'beginDrag() must return a plain object that represents the dragged item. ' +\n                    'Instead received %s. ' +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', item);\n            }\n            return item;\n        };\n    }\n    receiveProps(props) {\n        this.props = props;\n    }\n    canDrag() {\n        if (!this.props) {\n            return false;\n        }\n        if (!this.spec.canDrag) {\n            return true;\n        }\n        return this.spec.canDrag(this.props, this.monitor);\n    }\n    isDragging(globalMonitor, sourceId) {\n        if (!this.props) {\n            return false;\n        }\n        if (!this.spec.isDragging) {\n            return sourceId === globalMonitor.getSourceId();\n        }\n        return this.spec.isDragging(this.props, this.monitor);\n    }\n    endDrag() {\n        if (!this.props) {\n            return;\n        }\n        if (!this.spec.endDrag) {\n            return;\n        }\n        this.spec.endDrag(this.props, this.monitor, getDecoratedComponent(this.ref));\n    }\n}\nexport default function createSourceFactory(spec) {\n    Object.keys(spec).forEach(key => {\n        invariant(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drag source specification to only have ' +\n            'some of the following keys: %s. ' +\n            'Instead received a specification with an unexpected \"%s\" key. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', ALLOWED_SPEC_METHODS.join(', '), key);\n        invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' +\n            'Instead received a specification with %s: %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n    });\n    REQUIRED_SPEC_METHODS.forEach(key => {\n        invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' +\n            'Instead received a specification with %s: %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n    });\n    return function createSource(monitor, ref) {\n        return new SourceImpl(spec, monitor, ref);\n    };\n}\n","import invariant from 'invariant';\nimport { isPlainObject } from '../utils/js_utils';\nimport { checkDecoratorArguments } from './utils';\nimport decorateHandler from './decorateHandler';\nimport { registerSource } from '../common/registration';\nimport { DragSourceMonitorImpl } from '../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../common/SourceConnector';\nimport { isValidType } from '../utils/isValidType';\nimport createSourceFactory from './createSourceFactory';\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\nexport function DragSource(type, spec, collect, options = {}) {\n    checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n    let getType = type;\n    if (typeof type !== 'function') {\n        invariant(isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' +\n            'a string, or a function that returns a string given the current props. ' +\n            'Instead, received %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n        getType = () => type;\n    }\n    invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' +\n        'a plain object. Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n    const createSource = createSourceFactory(spec);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' +\n        'a function that returns a plain object of props to inject. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' +\n        'a plain object when specified. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n    return function decorateSource(DecoratedComponent) {\n        return decorateHandler({\n            containerDisplayName: 'DragSource',\n            createHandler: createSource,\n            registerHandler: registerSource,\n            createConnector: (backend) => new SourceConnector(backend),\n            createMonitor: (manager) => new DragSourceMonitorImpl(manager),\n            DecoratedComponent,\n            getType,\n            collect,\n            options,\n        });\n    };\n}\n","import invariant from 'invariant';\nimport { isPlainObject } from '../utils/js_utils';\nimport { getDecoratedComponent } from './utils';\nconst ALLOWED_SPEC_METHODS = ['canDrop', 'hover', 'drop'];\nclass TargetImpl {\n    constructor(spec, monitor, ref) {\n        this.spec = spec;\n        this.monitor = monitor;\n        this.ref = ref;\n        this.props = null;\n    }\n    receiveProps(props) {\n        this.props = props;\n    }\n    receiveMonitor(monitor) {\n        this.monitor = monitor;\n    }\n    canDrop() {\n        if (!this.spec.canDrop) {\n            return true;\n        }\n        return this.spec.canDrop(this.props, this.monitor);\n    }\n    hover() {\n        if (!this.spec.hover) {\n            return;\n        }\n        this.spec.hover(this.props, this.monitor, getDecoratedComponent(this.ref));\n    }\n    drop() {\n        if (!this.spec.drop) {\n            return undefined;\n        }\n        const dropResult = this.spec.drop(this.props, this.monitor, this.ref.current);\n        if (process.env.NODE_ENV !== 'production') {\n            invariant(typeof dropResult === 'undefined' || isPlainObject(dropResult), 'drop() must either return undefined, or an object that represents the drop result. ' +\n                'Instead received %s. ' +\n                'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', dropResult);\n        }\n        return dropResult;\n    }\n}\nexport default function createTargetFactory(spec) {\n    Object.keys(spec).forEach(key => {\n        invariant(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drop target specification to only have ' +\n            'some of the following keys: %s. ' +\n            'Instead received a specification with an unexpected \"%s\" key. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', ALLOWED_SPEC_METHODS.join(', '), key);\n        invariant(typeof spec[key] === 'function', 'Expected %s in the drop target specification to be a function. ' +\n            'Instead received a specification with %s: %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', key, key, spec[key]);\n    });\n    return function createTarget(monitor, ref) {\n        return new TargetImpl(spec, monitor, ref);\n    };\n}\n","import invariant from 'invariant';\nimport { isPlainObject } from '../utils/js_utils';\nimport { registerTarget } from '../common/registration';\nimport { isValidType } from '../utils/isValidType';\nimport { TargetConnector } from '../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../common/DropTargetMonitorImpl';\nimport { checkDecoratorArguments } from './utils';\nimport decorateHandler from './decorateHandler';\nimport createTargetFactory from './createTargetFactory';\nexport function DropTarget(type, spec, collect, options = {}) {\n    checkDecoratorArguments('DropTarget', 'type, spec, collect[, options]', type, spec, collect, options);\n    let getType = type;\n    if (typeof type !== 'function') {\n        invariant(isValidType(type, true), 'Expected \"type\" provided as the first argument to DropTarget to be ' +\n            'a string, an array of strings, or a function that returns either given ' +\n            'the current props. Instead, received %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', type);\n        getType = () => type;\n    }\n    invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DropTarget to be ' +\n        'a plain object. Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', spec);\n    const createTarget = createTargetFactory(spec);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DropTarget to be ' +\n        'a function that returns a plain object of props to inject. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DropTarget to be ' +\n        'a plain object when specified. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n    return function decorateTarget(DecoratedComponent) {\n        return decorateHandler({\n            containerDisplayName: 'DropTarget',\n            createHandler: createTarget,\n            registerHandler: registerTarget,\n            createMonitor: (manager) => new DropTargetMonitorImpl(manager),\n            createConnector: (backend) => new TargetConnector(backend),\n            DecoratedComponent,\n            getType,\n            collect,\n            options,\n        });\n    };\n}\n","import * as React from 'react';\nimport shallowEqual from 'shallowequal';\nimport hoistStatics from 'hoist-non-react-statics';\nimport invariant from 'invariant';\nimport { DndContext } from '../index';\nimport { isPlainObject } from '../utils/js_utils';\nimport { isRefable, checkDecoratorArguments } from './utils';\nexport function DragLayer(collect, options = {}) {\n    checkDecoratorArguments('DragLayer', 'collect[, options]', collect, options);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ', 'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the second argument to DragLayer to be a plain object when specified. ' +\n        'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', options);\n    return function decorateLayer(DecoratedComponent) {\n        const Decorated = DecoratedComponent;\n        const { arePropsEqual = shallowEqual } = options;\n        const displayName = Decorated.displayName || Decorated.name || 'Component';\n        class DragLayerContainer extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.isCurrentlyMounted = false;\n                this.ref = React.createRef();\n                this.handleChange = () => {\n                    if (!this.isCurrentlyMounted) {\n                        return;\n                    }\n                    const nextState = this.getCurrentState();\n                    if (!shallowEqual(nextState, this.state)) {\n                        this.setState(nextState);\n                    }\n                };\n            }\n            getDecoratedComponentInstance() {\n                invariant(this.ref.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n                return this.ref.current;\n            }\n            shouldComponentUpdate(nextProps, nextState) {\n                return (!arePropsEqual(nextProps, this.props) ||\n                    !shallowEqual(nextState, this.state));\n            }\n            componentDidMount() {\n                this.isCurrentlyMounted = true;\n                this.handleChange();\n            }\n            componentWillUnmount() {\n                this.isCurrentlyMounted = false;\n                if (this.unsubscribeFromOffsetChange) {\n                    this.unsubscribeFromOffsetChange();\n                    this.unsubscribeFromOffsetChange = undefined;\n                }\n                if (this.unsubscribeFromStateChange) {\n                    this.unsubscribeFromStateChange();\n                    this.unsubscribeFromStateChange = undefined;\n                }\n            }\n            render() {\n                return (React.createElement(DndContext.Consumer, null, ({ dragDropManager }) => {\n                    if (dragDropManager === undefined) {\n                        return null;\n                    }\n                    this.receiveDragDropManager(dragDropManager);\n                    // Let componentDidMount fire to initialize the collected state\n                    if (!this.isCurrentlyMounted) {\n                        return null;\n                    }\n                    return (React.createElement(Decorated, Object.assign({}, this.props, this.state, { ref: isRefable(Decorated) ? this.ref : null })));\n                }));\n            }\n            receiveDragDropManager(dragDropManager) {\n                if (this.manager !== undefined) {\n                    return;\n                }\n                this.manager = dragDropManager;\n                invariant(typeof dragDropManager === 'object', 'Could not find the drag and drop manager in the context of %s. ' +\n                    'Make sure to wrap the top-level component of your app with DragDropContext. ' +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n                const monitor = this.manager.getMonitor();\n                this.unsubscribeFromOffsetChange = monitor.subscribeToOffsetChange(this.handleChange);\n                this.unsubscribeFromStateChange = monitor.subscribeToStateChange(this.handleChange);\n            }\n            getCurrentState() {\n                if (!this.manager) {\n                    return {};\n                }\n                const monitor = this.manager.getMonitor();\n                return collect(monitor, this.props);\n            }\n        }\n        DragLayerContainer.displayName = `DragLayer(${displayName})`;\n        DragLayerContainer.DecoratedComponent = DecoratedComponent;\n        return hoistStatics(DragLayerContainer, DecoratedComponent);\n    };\n}\n","import * as React from 'react';\nimport invariant from 'invariant';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { DndContext, createDndContext } from '../common/DndContext';\nimport { checkDecoratorArguments, isRefable } from './utils';\n/**\n * @deprecated Use DnDProvider in your JSX tree instead. This will be removed in a future major version.\n *\n * Wrap the root component of your application with DragDropContext decorator to set up React DnD.\n * This lets you specify the backend, and sets up the shared DnD state behind the scenes.\n * @param backendFactory The DnD backend factory\n * @param backendContext The backend context\n */\nexport function DragDropContext(backendFactory, backendContext, debugMode) {\n    checkDecoratorArguments('DragDropContext', 'backend', backendFactory);\n    const childContext = createDndContext(backendFactory, backendContext, debugMode);\n    return function decorateContext(DecoratedComponent) {\n        const Decorated = DecoratedComponent;\n        const displayName = Decorated.displayName || Decorated.name || 'Component';\n        class DragDropContextContainer extends React.Component {\n            constructor(props, context) {\n                super(props, context);\n                this.ref = React.createRef();\n                this.getManager = () => childContext.dragDropManager;\n                // eslint-disable-next-line no-console\n                console.warn(`DragDropContext has been deprecated and will be removed in a future version. Please use DndProvider instead.`);\n            }\n            getDecoratedComponentInstance() {\n                invariant(this.ref.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n                return this.ref.current;\n            }\n            render() {\n                return (React.createElement(DndContext.Provider, { value: childContext },\n                    React.createElement(Decorated, Object.assign({}, this.props, { ref: isRefable(Decorated) ? this.ref : null }))));\n            }\n        }\n        DragDropContextContainer.DecoratedComponent = DecoratedComponent;\n        DragDropContextContainer.displayName = `DragDropContext(${displayName})`;\n        return hoistStatics(DragDropContextContainer, DecoratedComponent);\n    };\n}\n"],"sourceRoot":""}