{"version":3,"sources":["webpack://ReactDnd/webpack/universalModuleDefinition","webpack://ReactDnd/webpack/bootstrap","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/invariant/browser.js","webpack://ReactDnd/external \"React\"","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/shallowequal/index.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://ReactDnd/external \"Redux\"","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/asap/browser-asap.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/asap/browser-raw.js","webpack://ReactDnd/(webpack)/buildin/global.js","webpack://ReactDnd/external \"ReactIs\"","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/interfaces.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/types.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/local/setClientOffset.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/utils/js_utils.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/beginDrag.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/publishDragSource.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/utils/matchesType.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/hover.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/drop.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/endDrag.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/utils/equality.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/reducers/dragOffset.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/registry.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/reducers/dragOperation.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/reducers/refCount.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/utils/dirtiness.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/reducers/dirtyHandlerIds.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/reducers/stateId.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/reducers/index.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/utils/coords.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/DragDropMonitorImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/utils/getNextUniqueId.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/contracts.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/HandlerRegistryImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/DragDropManagerImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/actions/dragDrop/index.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/dnd-core/lib/factories.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/DndContext.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/DndProvider.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/DragPreviewImage.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/internal/useCollector.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/internal/useMonitorOutput.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/registration.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/internal/useDragDropManager.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/DragSourceMonitorImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/utils/cloneWithRef.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/wrapConnectorHooks.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/utils/isRef.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/SourceConnector.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/useDrag.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/internal/drag.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/TargetConnector.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/common/DropTargetMonitorImpl.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/useDrop.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/internal/drop.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/hooks/useDragLayer.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/utils/discount_lodash.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/utils.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/disposables.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/decorateHandler.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/utils/isValidType.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/createSourceFactory.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/DragSource.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/createTargetFactory.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/DropTarget.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/DragLayer.js","webpack://ReactDnd/./dist/react-dnd/8.0.0/node_modules/react-dnd/lib/decorators/DragDropContext.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","condition","format","a","b","e","f","error","undefined","Error","args","argIndex","replace","framesToPop","React","objA","objB","compare","compareContext","ret","keysA","keys","keysB","length","bHasOwnProperty","idx","valueA","valueB","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","caller","callee","arguments","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","concat","targetStatics","sourceStatics","descriptor","Redux","rawAsap","freeTasks","pendingErrors","requestErrorThrow","makeRequestCallFromTimer","shift","asap","task","rawTask","pop","RawTask","onerror","push","queue","requestFlush","index","flush","currentIndex","scan","newLength","toggle","observer","node","scope","global","self","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","callback","timeoutHandle","setTimeout","handleTimer","intervalHandle","setInterval","clearTimeout","clearInterval","document","createTextNode","observe","characterData","data","g","Function","window","ReactIs","HandlerRole","BEGIN_DRAG","HOVER","DROP","END_DRAG","setClientOffset","clientOffset","sourceClientOffset","payload","isObject","input","ResetCoordinatesAction","createBeginDrag","manager","sourceIds","options","publishSource","getSourceClientOffset","monitor","getMonitor","registry","getRegistry","dispatch","isDragging","getSource","verifyInvariants","sourceId","canDragSource","getDraggableSource","verifyGetSourceClientOffsetIsFunction","item","beginDrag","verifyItemIsObject","pinSource","itemType","getSourceType","isSourcePublic","createPublishDragSource","matchesType","targetType","draggedItemType","Array","isArray","some","createHover","targetIdsArg","verifyTargetIdsIsArray","targetIds","slice","didDrop","targetId","lastIndexOf","target","getTarget","checkInvariants","getTargetType","splice","removeNonMatchingTargetIds","getItemType","hover","hoverAllTargets","createDrop","getTargetIds","filter","canDropOnTarget","reverse","getDroppableTargets","forEach","dropResult","drop","verifyDropResultType","getDropResult","determineDropResult","action","createEndDrag","verifyIsDragging","getSourceId","endDrag","unpinSource","strictEquality","initialState","initialSourceClientOffset","initialClientOffset","dragOffset","state","offsetA","offsetB","x","y","REMOVE_TARGET","dragOperation","indexOf","items","refCount","NONE","ALL","dirtyHandlerIds","prevTargetIds","result","itemsA","itemsB","map","Map","insertItem","set","has","count","xor","isEqual","areArraysEqual","prevInnermostTargetId","innermostTargetId","stateId","reduce","obj","path","defaultValue","split","subtract","__IS_NONE__","__IS_ALL__","store","listener","handlerIds","prevStateId","getState","subscribe","currentStateId","dirtyIds","areDirty","previousState","nextState","source","canDrag","canDrop","Boolean","shallow","getDifferenceFromInitialOffset","nextUniqueId","validateType","allowArray","getNextHandlerId","role","id","toString","SOURCE","TARGET","parseRoleFromHandlerId","handlerId","mapContainsValue","searchValue","entries","isDone","done","next","types","dragSources","dropTargets","pinnedSourceId","pinnedSource","validateSourceContract","addHandler","addSource","validateTargetContract","addTarget","handler","includePinned","isSourceId","isTargetId","removeSource","delete","removeTarget","createBackend","context","debugMode","isSetUp","handleRefCountChange","shouldSetUp","backend","setup","teardown","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","instanceId","makeStoreInstance","actions","publishDragSource","boundActions","actionCreator","apply","createDragDropManager","DndContext","dragDropManager","createDndContext","DndProvider","children","props","contextValue","Provider","DragPreviewImage","connect","src","Image","img","onload","useCollector","collect","onUpdate","collected","setCollected","updateCollected","nextValue","useMonitorOutput","onCollect","getHandlerId","subscribeToStateChange","registerTarget","registerSource","useDragDropManager","isCallingCanDrag","isCallingIsDragging","internalMonitor","isDraggingSource","isOverTarget","subscribeToOffsetChange","getItem","getInitialClientOffset","getInitialSourceClientOffset","getClientOffset","setRef","ref","current","wrapHookToRecognizeElement","hook","elementOrNode","element","throwIfCompositeComponentElement","newRef","previousRef","cloneWithRef","wrapConnectorHooks","hooks","wrappedHooks","endsWith","wrappedHook","isRef","dragSource","dragSourceOptions","dragSourceRef","dragSourceNode","reconnectDragSource","dragPreview","dragPreviewOptions","dragPreviewRef","dragPreviewNode","reconnectDragPreview","dragSourceOptionsInternal","dragPreviewOptionsInternal","lastConnectedHandlerId","lastConnectedDragSource","lastConnectedDragSourceOptions","lastConnectedDragPreview","lastConnectedDragPreviewOptions","newHandlerId","reconnect","didChange","didHandlerIdChange","didConnectedDragSourceChange","didDragSourceOptionsChange","disconnectDragSource","dragSourceUnsubscribe","connectDragSource","didConnectedDragPreviewChange","didDragPreviewOptionsChange","disconnectDragPreview","dragPreviewUnsubscribe","connectDragPreview","useDrag","spec","specRef","connector","getBackend","useDragSourceMonitor","begin","beginResult","globalMonitor","end","unregister","receiveHandlerId","useDragHandler","previewOptions","dropTarget","dropTargetOptions","dropTargetRef","dropTargetNode","dropTargetOptionsInternal","lastConnectedDropTarget","lastConnectedDropTargetOptions","didDropTargetChange","didOptionsChange","disconnectDropTarget","unsubscribeDropTarget","connectDropTarget","isCallingCanDrop","useDrop","accept","useDropTargetMonitor","useDropHandler","useDragLayer","isFunction","noop","isPlainObject","isObjectLike","proto","getDecoratedComponent","instanceRef","currentRef","decoratedRef","isRefable","C","Component","$$typeof","isRefForwardingComponent","checkDecoratorArguments","functionName","signature","isDisposed","dispose","isDisposable","empty","CompositeDisposable","disposables","shouldDispose","len","currentDisposables","SerialDisposable","old","decorateHandler","DecoratedComponent","createHandler","createMonitor","createConnector","registerHandler","containerDisplayName","getType","arePropsEqual","Decorated","DragDropContainer","super","handleChange","getCurrentState","setState","disposable","receiveProps","nextProps","currentType","prevProps","receiveType","handlerMonitor","handlerConnector","unsubscribe","setDisposable","Consumer","receiveDragDropManager","requestAnimationFrame","assign","isValidType","every","ALLOWED_SPEC_METHODS","REQUIRED_SPEC_METHODS","DragSource","createSource","join","createSourceFactory","DropTarget","createTarget","createTargetFactory","DragLayer","DragLayerContainer","isCurrentlyMounted","unsubscribeFromOffsetChange","unsubscribeFromStateChange","DragDropContext","backendFactory","backendContext","childContext","DragDropContextContainer","getManager"],"mappings":"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","file":"ReactDnd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDnd\"] = factory();\n\telse\n\t\troot[\"ReactDnd\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","module.exports = React;","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","module.exports = Redux;","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = ReactIs;","export var HandlerRole;\n(function (HandlerRole) {\n    HandlerRole[\"SOURCE\"] = \"SOURCE\";\n    HandlerRole[\"TARGET\"] = \"TARGET\";\n})(HandlerRole || (HandlerRole = {}));\n","export const INIT_COORDS = 'dnd-core/INIT_COORDS';\nexport const BEGIN_DRAG = 'dnd-core/BEGIN_DRAG';\nexport const PUBLISH_DRAG_SOURCE = 'dnd-core/PUBLISH_DRAG_SOURCE';\nexport const HOVER = 'dnd-core/HOVER';\nexport const DROP = 'dnd-core/DROP';\nexport const END_DRAG = 'dnd-core/END_DRAG';\n","import { INIT_COORDS } from '../types';\nexport function setClientOffset(clientOffset, sourceClientOffset) {\n    return {\n        type: INIT_COORDS,\n        payload: {\n            sourceClientOffset: sourceClientOffset || null,\n            clientOffset: clientOffset || null,\n        },\n    };\n}\n","// cheap lodash replacements\n/**\n * drop-in replacement for _.get\n * @param obj\n * @param path\n * @param defaultValue\n */\nexport function get(obj, path, defaultValue) {\n    return path\n        .split('.')\n        .reduce((a, c) => (a && a[c] ? a[c] : defaultValue || null), obj);\n}\n/**\n * drop-in replacement for _.without\n */\nexport function without(items, item) {\n    return items.filter(i => i !== item);\n}\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isString(input) {\n    return typeof input === 'string';\n}\n/**\n * drop-in replacement for _.isString\n * @param input\n */\nexport function isObject(input) {\n    return typeof input === 'object';\n}\n/**\n * repalcement for _.xor\n * @param itemsA\n * @param itemsB\n */\nexport function xor(itemsA, itemsB) {\n    const map = new Map();\n    const insertItem = (item) => map.set(item, map.has(item) ? map.get(item) + 1 : 1);\n    itemsA.forEach(insertItem);\n    itemsB.forEach(insertItem);\n    const result = [];\n    map.forEach((count, key) => {\n        if (count === 1) {\n            result.push(key);\n        }\n    });\n    return result;\n}\n/**\n * replacement for _.intersection\n * @param itemsA\n * @param itemsB\n */\nexport function intersection(itemsA, itemsB) {\n    return itemsA.filter(t => itemsB.indexOf(t) > -1);\n}\n","import invariant from 'invariant';\nimport { setClientOffset } from './local/setClientOffset';\nimport { isObject } from '../../utils/js_utils';\nimport { BEGIN_DRAG, INIT_COORDS } from './types';\nconst ResetCoordinatesAction = {\n    type: INIT_COORDS,\n    payload: {\n        clientOffset: null,\n        sourceClientOffset: null,\n    },\n};\nexport default function createBeginDrag(manager) {\n    return function beginDrag(sourceIds = [], options = {\n        publishSource: true,\n    }) {\n        const { publishSource = true, clientOffset, getSourceClientOffset, } = options;\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        // Initialize the coordinates using the client offset\n        manager.dispatch(setClientOffset(clientOffset));\n        verifyInvariants(sourceIds, monitor, registry);\n        // Get the draggable source\n        const sourceId = getDraggableSource(sourceIds, monitor);\n        if (sourceId === null) {\n            manager.dispatch(ResetCoordinatesAction);\n            return;\n        }\n        // Get the source client offset\n        let sourceClientOffset = null;\n        if (clientOffset) {\n            verifyGetSourceClientOffsetIsFunction(getSourceClientOffset);\n            sourceClientOffset = getSourceClientOffset(sourceId);\n        }\n        // Initialize the full coordinates\n        manager.dispatch(setClientOffset(clientOffset, sourceClientOffset));\n        const source = registry.getSource(sourceId);\n        const item = source.beginDrag(monitor, sourceId);\n        verifyItemIsObject(item);\n        registry.pinSource(sourceId);\n        const itemType = registry.getSourceType(sourceId);\n        return {\n            type: BEGIN_DRAG,\n            payload: {\n                itemType,\n                item,\n                sourceId,\n                clientOffset: clientOffset || null,\n                sourceClientOffset: sourceClientOffset || null,\n                isSourcePublic: !!publishSource,\n            },\n        };\n    };\n}\nfunction verifyInvariants(sourceIds, monitor, registry) {\n    invariant(!monitor.isDragging(), 'Cannot call beginDrag while dragging.');\n    for (const s of sourceIds) {\n        invariant(registry.getSource(s), 'Expected sourceIds to be registered.');\n    }\n}\nfunction verifyGetSourceClientOffsetIsFunction(getSourceClientOffset) {\n    invariant(typeof getSourceClientOffset === 'function', 'When clientOffset is provided, getSourceClientOffset must be a function.');\n}\nfunction verifyItemIsObject(item) {\n    invariant(isObject(item), 'Item must be an object.');\n}\nfunction getDraggableSource(sourceIds, monitor) {\n    let sourceId = null;\n    for (let i = sourceIds.length - 1; i >= 0; i--) {\n        if (monitor.canDragSource(sourceIds[i])) {\n            sourceId = sourceIds[i];\n            break;\n        }\n    }\n    return sourceId;\n}\n","import { PUBLISH_DRAG_SOURCE } from './types';\nexport default function createPublishDragSource(manager) {\n    return function publishDragSource() {\n        const monitor = manager.getMonitor();\n        if (monitor.isDragging()) {\n            return { type: PUBLISH_DRAG_SOURCE };\n        }\n    };\n}\n","export default function matchesType(targetType, draggedItemType) {\n    if (draggedItemType === null) {\n        return targetType === null;\n    }\n    return Array.isArray(targetType)\n        ? targetType.some(t => t === draggedItemType)\n        : targetType === draggedItemType;\n}\n","import invariant from 'invariant';\nimport matchesType from '../../utils/matchesType';\nimport { HOVER } from './types';\nexport default function createHover(manager) {\n    return function hover(targetIdsArg, { clientOffset } = {}) {\n        verifyTargetIdsIsArray(targetIdsArg);\n        const targetIds = targetIdsArg.slice(0);\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        checkInvariants(targetIds, monitor, registry);\n        const draggedItemType = monitor.getItemType();\n        removeNonMatchingTargetIds(targetIds, registry, draggedItemType);\n        hoverAllTargets(targetIds, monitor, registry);\n        return {\n            type: HOVER,\n            payload: {\n                targetIds,\n                clientOffset: clientOffset || null,\n            },\n        };\n    };\n}\nfunction verifyTargetIdsIsArray(targetIdsArg) {\n    invariant(Array.isArray(targetIdsArg), 'Expected targetIds to be an array.');\n}\nfunction checkInvariants(targetIds, monitor, registry) {\n    invariant(monitor.isDragging(), 'Cannot call hover while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call hover after drop.');\n    for (let i = 0; i < targetIds.length; i++) {\n        const targetId = targetIds[i];\n        invariant(targetIds.lastIndexOf(targetId) === i, 'Expected targetIds to be unique in the passed array.');\n        const target = registry.getTarget(targetId);\n        invariant(target, 'Expected targetIds to be registered.');\n    }\n}\nfunction removeNonMatchingTargetIds(targetIds, registry, draggedItemType) {\n    // Remove those targetIds that don't match the targetType.  This\n    // fixes shallow isOver which would only be non-shallow because of\n    // non-matching targets.\n    for (let i = targetIds.length - 1; i >= 0; i--) {\n        const targetId = targetIds[i];\n        const targetType = registry.getTargetType(targetId);\n        if (!matchesType(targetType, draggedItemType)) {\n            targetIds.splice(i, 1);\n        }\n    }\n}\nfunction hoverAllTargets(targetIds, monitor, registry) {\n    // Finally call hover on all matching targets.\n    for (const targetId of targetIds) {\n        const target = registry.getTarget(targetId);\n        target.hover(monitor, targetId);\n    }\n}\n","import invariant from 'invariant';\nimport { DROP } from './types';\nimport { isObject } from '../../utils/js_utils';\nexport default function createDrop(manager) {\n    return function drop(options = {}) {\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        verifyInvariants(monitor);\n        const targetIds = getDroppableTargets(monitor);\n        // Multiple actions are dispatched here, which is why this doesn't return an action\n        targetIds.forEach((targetId, index) => {\n            const dropResult = determineDropResult(targetId, index, registry, monitor);\n            const action = {\n                type: DROP,\n                payload: {\n                    dropResult: {\n                        ...options,\n                        ...dropResult,\n                    },\n                },\n            };\n            manager.dispatch(action);\n        });\n    };\n}\nfunction verifyInvariants(monitor) {\n    invariant(monitor.isDragging(), 'Cannot call drop while not dragging.');\n    invariant(!monitor.didDrop(), 'Cannot call drop twice during one drag operation.');\n}\nfunction determineDropResult(targetId, index, registry, monitor) {\n    const target = registry.getTarget(targetId);\n    let dropResult = target ? target.drop(monitor, targetId) : undefined;\n    verifyDropResultType(dropResult);\n    if (typeof dropResult === 'undefined') {\n        dropResult = index === 0 ? {} : monitor.getDropResult();\n    }\n    return dropResult;\n}\nfunction verifyDropResultType(dropResult) {\n    invariant(typeof dropResult === 'undefined' || isObject(dropResult), 'Drop result must either be an object or undefined.');\n}\nfunction getDroppableTargets(monitor) {\n    const targetIds = monitor\n        .getTargetIds()\n        .filter(monitor.canDropOnTarget, monitor);\n    targetIds.reverse();\n    return targetIds;\n}\n","import invariant from 'invariant';\nimport { END_DRAG } from './types';\nexport default function createEndDrag(manager) {\n    return function endDrag() {\n        const monitor = manager.getMonitor();\n        const registry = manager.getRegistry();\n        verifyIsDragging(monitor);\n        const sourceId = monitor.getSourceId();\n        const source = registry.getSource(sourceId, true);\n        source.endDrag(monitor, sourceId);\n        registry.unpinSource();\n        return { type: END_DRAG };\n    };\n}\nfunction verifyIsDragging(monitor) {\n    invariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.');\n}\n","export const strictEquality = (a, b) => a === b;\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(offsetA, offsetB) {\n    if (!offsetA && !offsetB) {\n        return true;\n    }\n    else if (!offsetA || !offsetB) {\n        return false;\n    }\n    else {\n        return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n    }\n}\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual(a, b, isEqual = strictEquality) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n        if (!isEqual(a[i], b[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n","import { INIT_COORDS, BEGIN_DRAG, HOVER, END_DRAG, DROP, } from '../actions/dragDrop';\nimport { areCoordsEqual } from '../utils/equality';\nconst initialState = {\n    initialSourceClientOffset: null,\n    initialClientOffset: null,\n    clientOffset: null,\n};\nexport default function dragOffset(state = initialState, action) {\n    const { payload } = action;\n    switch (action.type) {\n        case INIT_COORDS:\n        case BEGIN_DRAG:\n            return {\n                initialSourceClientOffset: payload.sourceClientOffset,\n                initialClientOffset: payload.clientOffset,\n                clientOffset: payload.clientOffset,\n            };\n        case HOVER:\n            if (areCoordsEqual(state.clientOffset, payload.clientOffset)) {\n                return state;\n            }\n            return {\n                ...state,\n                clientOffset: payload.clientOffset,\n            };\n        case END_DRAG:\n        case DROP:\n            return initialState;\n        default:\n            return state;\n    }\n}\n","export const ADD_SOURCE = 'dnd-core/ADD_SOURCE';\nexport const ADD_TARGET = 'dnd-core/ADD_TARGET';\nexport const REMOVE_SOURCE = 'dnd-core/REMOVE_SOURCE';\nexport const REMOVE_TARGET = 'dnd-core/REMOVE_TARGET';\nexport function addSource(sourceId) {\n    return {\n        type: ADD_SOURCE,\n        payload: {\n            sourceId,\n        },\n    };\n}\nexport function addTarget(targetId) {\n    return {\n        type: ADD_TARGET,\n        payload: {\n            targetId,\n        },\n    };\n}\nexport function removeSource(sourceId) {\n    return {\n        type: REMOVE_SOURCE,\n        payload: {\n            sourceId,\n        },\n    };\n}\nexport function removeTarget(targetId) {\n    return {\n        type: REMOVE_TARGET,\n        payload: {\n            targetId,\n        },\n    };\n}\n","import { BEGIN_DRAG, PUBLISH_DRAG_SOURCE, HOVER, END_DRAG, DROP, } from '../actions/dragDrop';\nimport { REMOVE_TARGET } from '../actions/registry';\nimport { without } from '../utils/js_utils';\nconst initialState = {\n    itemType: null,\n    item: null,\n    sourceId: null,\n    targetIds: [],\n    dropResult: null,\n    didDrop: false,\n    isSourcePublic: null,\n};\nexport default function dragOperation(state = initialState, action) {\n    const { payload } = action;\n    switch (action.type) {\n        case BEGIN_DRAG:\n            return {\n                ...state,\n                itemType: payload.itemType,\n                item: payload.item,\n                sourceId: payload.sourceId,\n                isSourcePublic: payload.isSourcePublic,\n                dropResult: null,\n                didDrop: false,\n            };\n        case PUBLISH_DRAG_SOURCE:\n            return {\n                ...state,\n                isSourcePublic: true,\n            };\n        case HOVER:\n            return {\n                ...state,\n                targetIds: payload.targetIds,\n            };\n        case REMOVE_TARGET:\n            if (state.targetIds.indexOf(payload.targetId) === -1) {\n                return state;\n            }\n            return {\n                ...state,\n                targetIds: without(state.targetIds, payload.targetId),\n            };\n        case DROP:\n            return {\n                ...state,\n                dropResult: payload.dropResult,\n                didDrop: true,\n                targetIds: [],\n            };\n        case END_DRAG:\n            return {\n                ...state,\n                itemType: null,\n                item: null,\n                sourceId: null,\n                dropResult: null,\n                didDrop: false,\n                isSourcePublic: null,\n                targetIds: [],\n            };\n        default:\n            return state;\n    }\n}\n","import { ADD_SOURCE, ADD_TARGET, REMOVE_SOURCE, REMOVE_TARGET, } from '../actions/registry';\nexport default function refCount(state = 0, action) {\n    switch (action.type) {\n        case ADD_SOURCE:\n        case ADD_TARGET:\n            return state + 1;\n        case REMOVE_SOURCE:\n        case REMOVE_TARGET:\n            return state - 1;\n        default:\n            return state;\n    }\n}\n","import { intersection } from './js_utils';\nexport const NONE = [];\nexport const ALL = [];\nNONE.__IS_NONE__ = true;\nALL.__IS_ALL__ = true;\n/**\n * Determines if the given handler IDs are dirty or not.\n *\n * @param dirtyIds The set of dirty handler ids\n * @param handlerIds The set of handler ids to check\n */\nexport function areDirty(dirtyIds, handlerIds) {\n    if (dirtyIds === NONE) {\n        return false;\n    }\n    if (dirtyIds === ALL || typeof handlerIds === 'undefined') {\n        return true;\n    }\n    const commonIds = intersection(handlerIds, dirtyIds);\n    return commonIds.length > 0;\n}\n","import { BEGIN_DRAG, PUBLISH_DRAG_SOURCE, HOVER, END_DRAG, DROP, } from '../actions/dragDrop';\nimport { ADD_SOURCE, ADD_TARGET, REMOVE_SOURCE, REMOVE_TARGET, } from '../actions/registry';\nimport { areArraysEqual } from '../utils/equality';\nimport { NONE, ALL } from '../utils/dirtiness';\nimport { xor } from '../utils/js_utils';\nexport default function dirtyHandlerIds(state = NONE, action) {\n    switch (action.type) {\n        case HOVER:\n            break;\n        case ADD_SOURCE:\n        case ADD_TARGET:\n        case REMOVE_TARGET:\n        case REMOVE_SOURCE:\n            return NONE;\n        case BEGIN_DRAG:\n        case PUBLISH_DRAG_SOURCE:\n        case END_DRAG:\n        case DROP:\n        default:\n            return ALL;\n    }\n    const { targetIds = [], prevTargetIds = [] } = action.payload;\n    const result = xor(targetIds, prevTargetIds);\n    const didChange = result.length > 0 || !areArraysEqual(targetIds, prevTargetIds);\n    if (!didChange) {\n        return NONE;\n    }\n    // Check the target ids at the innermost position. If they are valid, add them\n    // to the result\n    const prevInnermostTargetId = prevTargetIds[prevTargetIds.length - 1];\n    const innermostTargetId = targetIds[targetIds.length - 1];\n    if (prevInnermostTargetId !== innermostTargetId) {\n        if (prevInnermostTargetId) {\n            result.push(prevInnermostTargetId);\n        }\n        if (innermostTargetId) {\n            result.push(innermostTargetId);\n        }\n    }\n    return result;\n}\n","export default function stateId(state = 0) {\n    return state + 1;\n}\n","import dragOffset from './dragOffset';\nimport dragOperation from './dragOperation';\nimport refCount from './refCount';\nimport dirtyHandlerIds from './dirtyHandlerIds';\nimport stateId from './stateId';\nimport { get } from '../utils/js_utils';\nexport default function reduce(state = {}, action) {\n    return {\n        dirtyHandlerIds: dirtyHandlerIds(state.dirtyHandlerIds, {\n            type: action.type,\n            payload: {\n                ...action.payload,\n                prevTargetIds: get(state, 'dragOperation.targetIds', []),\n            },\n        }),\n        dragOffset: dragOffset(state.dragOffset, action),\n        refCount: refCount(state.refCount, action),\n        dragOperation: dragOperation(state.dragOperation, action),\n        stateId: stateId(state.stateId),\n    };\n}\n","/**\n * Coordinate addition\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function add(a, b) {\n    return {\n        x: a.x + b.x,\n        y: a.y + b.y,\n    };\n}\n/**\n * Coordinate subtraction\n * @param a The first coordinate\n * @param b The second coordinate\n */\nexport function subtract(a, b) {\n    return {\n        x: a.x - b.x,\n        y: a.y - b.y,\n    };\n}\n/**\n * Returns the cartesian distance of the drag source component's position, based on its position\n * at the time when the current drag operation has started, and the movement difference.\n *\n * Returns null if no item is being dragged.\n *\n * @param state The offset state to compute from\n */\nexport function getSourceClientOffset(state) {\n    const { clientOffset, initialClientOffset, initialSourceClientOffset } = state;\n    if (!clientOffset || !initialClientOffset || !initialSourceClientOffset) {\n        return null;\n    }\n    return subtract(add(clientOffset, initialSourceClientOffset), initialClientOffset);\n}\n/**\n * Determines the x,y offset between the client offset and the initial client offset\n *\n * @param state The offset state to compute from\n */\nexport function getDifferenceFromInitialOffset(state) {\n    const { clientOffset, initialClientOffset } = state;\n    if (!clientOffset || !initialClientOffset) {\n        return null;\n    }\n    return subtract(clientOffset, initialClientOffset);\n}\n","import invariant from 'invariant';\nimport matchesType from './utils/matchesType';\nimport { getSourceClientOffset, getDifferenceFromInitialOffset, } from './utils/coords';\nimport { areDirty } from './utils/dirtiness';\nexport default class DragDropMonitorImpl {\n    constructor(store, registry) {\n        this.store = store;\n        this.registry = registry;\n    }\n    subscribeToStateChange(listener, options = { handlerIds: undefined }) {\n        const { handlerIds } = options;\n        invariant(typeof listener === 'function', 'listener must be a function.');\n        invariant(typeof handlerIds === 'undefined' || Array.isArray(handlerIds), 'handlerIds, when specified, must be an array of strings.');\n        let prevStateId = this.store.getState().stateId;\n        const handleChange = () => {\n            const state = this.store.getState();\n            const currentStateId = state.stateId;\n            try {\n                const canSkipListener = currentStateId === prevStateId ||\n                    (currentStateId === prevStateId + 1 &&\n                        !areDirty(state.dirtyHandlerIds, handlerIds));\n                if (!canSkipListener) {\n                    listener();\n                }\n            }\n            finally {\n                prevStateId = currentStateId;\n            }\n        };\n        return this.store.subscribe(handleChange);\n    }\n    subscribeToOffsetChange(listener) {\n        invariant(typeof listener === 'function', 'listener must be a function.');\n        let previousState = this.store.getState().dragOffset;\n        const handleChange = () => {\n            const nextState = this.store.getState().dragOffset;\n            if (nextState === previousState) {\n                return;\n            }\n            previousState = nextState;\n            listener();\n        };\n        return this.store.subscribe(handleChange);\n    }\n    canDragSource(sourceId) {\n        if (!sourceId) {\n            return false;\n        }\n        const source = this.registry.getSource(sourceId);\n        invariant(source, 'Expected to find a valid source.');\n        if (this.isDragging()) {\n            return false;\n        }\n        return source.canDrag(this, sourceId);\n    }\n    canDropOnTarget(targetId) {\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        const target = this.registry.getTarget(targetId);\n        invariant(target, 'Expected to find a valid target.');\n        if (!this.isDragging() || this.didDrop()) {\n            return false;\n        }\n        const targetType = this.registry.getTargetType(targetId);\n        const draggedItemType = this.getItemType();\n        return (matchesType(targetType, draggedItemType) && target.canDrop(this, targetId));\n    }\n    isDragging() {\n        return Boolean(this.getItemType());\n    }\n    isDraggingSource(sourceId) {\n        // undefined on initial render\n        if (!sourceId) {\n            return false;\n        }\n        const source = this.registry.getSource(sourceId, true);\n        invariant(source, 'Expected to find a valid source.');\n        if (!this.isDragging() || !this.isSourcePublic()) {\n            return false;\n        }\n        const sourceType = this.registry.getSourceType(sourceId);\n        const draggedItemType = this.getItemType();\n        if (sourceType !== draggedItemType) {\n            return false;\n        }\n        return source.isDragging(this, sourceId);\n    }\n    isOverTarget(targetId, options = { shallow: false }) {\n        // undefined on initial render\n        if (!targetId) {\n            return false;\n        }\n        const { shallow } = options;\n        if (!this.isDragging()) {\n            return false;\n        }\n        const targetType = this.registry.getTargetType(targetId);\n        const draggedItemType = this.getItemType();\n        if (draggedItemType && !matchesType(targetType, draggedItemType)) {\n            return false;\n        }\n        const targetIds = this.getTargetIds();\n        if (!targetIds.length) {\n            return false;\n        }\n        const index = targetIds.indexOf(targetId);\n        if (shallow) {\n            return index === targetIds.length - 1;\n        }\n        else {\n            return index > -1;\n        }\n    }\n    getItemType() {\n        return this.store.getState().dragOperation.itemType;\n    }\n    getItem() {\n        return this.store.getState().dragOperation.item;\n    }\n    getSourceId() {\n        return this.store.getState().dragOperation.sourceId;\n    }\n    getTargetIds() {\n        return this.store.getState().dragOperation.targetIds;\n    }\n    getDropResult() {\n        return this.store.getState().dragOperation.dropResult;\n    }\n    didDrop() {\n        return this.store.getState().dragOperation.didDrop;\n    }\n    isSourcePublic() {\n        return this.store.getState().dragOperation.isSourcePublic;\n    }\n    getInitialClientOffset() {\n        return this.store.getState().dragOffset.initialClientOffset;\n    }\n    getInitialSourceClientOffset() {\n        return this.store.getState().dragOffset.initialSourceClientOffset;\n    }\n    getClientOffset() {\n        return this.store.getState().dragOffset.clientOffset;\n    }\n    getSourceClientOffset() {\n        return getSourceClientOffset(this.store.getState().dragOffset);\n    }\n    getDifferenceFromInitialOffset() {\n        return getDifferenceFromInitialOffset(this.store.getState().dragOffset);\n    }\n}\n","let nextUniqueId = 0;\nexport default function getNextUniqueId() {\n    return nextUniqueId++;\n}\n","import invariant from 'invariant';\nexport function validateSourceContract(source) {\n    invariant(typeof source.canDrag === 'function', 'Expected canDrag to be a function.');\n    invariant(typeof source.beginDrag === 'function', 'Expected beginDrag to be a function.');\n    invariant(typeof source.endDrag === 'function', 'Expected endDrag to be a function.');\n}\nexport function validateTargetContract(target) {\n    invariant(typeof target.canDrop === 'function', 'Expected canDrop to be a function.');\n    invariant(typeof target.hover === 'function', 'Expected hover to be a function.');\n    invariant(typeof target.drop === 'function', 'Expected beginDrag to be a function.');\n}\nexport function validateType(type, allowArray) {\n    if (allowArray && Array.isArray(type)) {\n        type.forEach(t => validateType(t, false));\n        return;\n    }\n    invariant(typeof type === 'string' || typeof type === 'symbol', allowArray\n        ? 'Type can only be a string, a symbol, or an array of either.'\n        : 'Type can only be a string or a symbol.');\n}\n","import asap from 'asap';\nimport invariant from 'invariant';\nimport { addSource, addTarget, removeSource, removeTarget, } from './actions/registry';\nimport getNextUniqueId from './utils/getNextUniqueId';\nimport { HandlerRole, } from './interfaces';\nimport { validateSourceContract, validateTargetContract, validateType, } from './contracts';\nfunction getNextHandlerId(role) {\n    const id = getNextUniqueId().toString();\n    switch (role) {\n        case HandlerRole.SOURCE:\n            return `S${id}`;\n        case HandlerRole.TARGET:\n            return `T${id}`;\n        default:\n            throw new Error(`Unknown Handler Role: ${role}`);\n    }\n}\nfunction parseRoleFromHandlerId(handlerId) {\n    switch (handlerId[0]) {\n        case 'S':\n            return HandlerRole.SOURCE;\n        case 'T':\n            return HandlerRole.TARGET;\n        default:\n            invariant(false, `Cannot parse handler ID: ${handlerId}`);\n    }\n}\nfunction mapContainsValue(map, searchValue) {\n    const entries = map.entries();\n    let isDone = false;\n    do {\n        const { done, value: [, value], } = entries.next();\n        if (value === searchValue) {\n            return true;\n        }\n        isDone = done;\n    } while (!isDone);\n    return false;\n}\nexport default class HandlerRegistryImpl {\n    constructor(store) {\n        this.store = store;\n        this.types = new Map();\n        this.dragSources = new Map();\n        this.dropTargets = new Map();\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    }\n    addSource(type, source) {\n        validateType(type);\n        validateSourceContract(source);\n        const sourceId = this.addHandler(HandlerRole.SOURCE, type, source);\n        this.store.dispatch(addSource(sourceId));\n        return sourceId;\n    }\n    addTarget(type, target) {\n        validateType(type, true);\n        validateTargetContract(target);\n        const targetId = this.addHandler(HandlerRole.TARGET, type, target);\n        this.store.dispatch(addTarget(targetId));\n        return targetId;\n    }\n    containsHandler(handler) {\n        return (mapContainsValue(this.dragSources, handler) ||\n            mapContainsValue(this.dropTargets, handler));\n    }\n    getSource(sourceId, includePinned = false) {\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        const isPinned = includePinned && sourceId === this.pinnedSourceId;\n        const source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId);\n        return source;\n    }\n    getTarget(targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.dropTargets.get(targetId);\n    }\n    getSourceType(sourceId) {\n        invariant(this.isSourceId(sourceId), 'Expected a valid source ID.');\n        return this.types.get(sourceId);\n    }\n    getTargetType(targetId) {\n        invariant(this.isTargetId(targetId), 'Expected a valid target ID.');\n        return this.types.get(targetId);\n    }\n    isSourceId(handlerId) {\n        const role = parseRoleFromHandlerId(handlerId);\n        return role === HandlerRole.SOURCE;\n    }\n    isTargetId(handlerId) {\n        const role = parseRoleFromHandlerId(handlerId);\n        return role === HandlerRole.TARGET;\n    }\n    removeSource(sourceId) {\n        invariant(this.getSource(sourceId), 'Expected an existing source.');\n        this.store.dispatch(removeSource(sourceId));\n        asap(() => {\n            this.dragSources.delete(sourceId);\n            this.types.delete(sourceId);\n        });\n    }\n    removeTarget(targetId) {\n        invariant(this.getTarget(targetId), 'Expected an existing target.');\n        this.store.dispatch(removeTarget(targetId));\n        this.dropTargets.delete(targetId);\n        this.types.delete(targetId);\n    }\n    pinSource(sourceId) {\n        const source = this.getSource(sourceId);\n        invariant(source, 'Expected an existing source.');\n        this.pinnedSourceId = sourceId;\n        this.pinnedSource = source;\n    }\n    unpinSource() {\n        invariant(this.pinnedSource, 'No source is pinned at the time.');\n        this.pinnedSourceId = null;\n        this.pinnedSource = null;\n    }\n    addHandler(role, type, handler) {\n        const id = getNextHandlerId(role);\n        this.types.set(id, type);\n        if (role === HandlerRole.SOURCE) {\n            this.dragSources.set(id, handler);\n        }\n        else if (role === HandlerRole.TARGET) {\n            this.dropTargets.set(id, handler);\n        }\n        return id;\n    }\n}\n","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport dragDropActions from './actions/dragDrop';\nimport DragDropMonitorImpl from './DragDropMonitorImpl';\nimport HandlerRegistryImpl from './HandlerRegistryImpl';\nfunction makeStoreInstance(debugMode) {\n    // TODO: if we ever make a react-native version of this,\n    // we'll need to consider how to pull off dev-tooling\n    const reduxDevTools = typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION__;\n    return createStore(reducer, debugMode &&\n        reduxDevTools &&\n        reduxDevTools({\n            name: 'dnd-core',\n            instanceId: 'dnd-core',\n        }));\n}\nexport default class DragDropManagerImpl {\n    constructor(createBackend, context = {}, debugMode = false) {\n        this.context = context;\n        this.isSetUp = false;\n        this.handleRefCountChange = () => {\n            const shouldSetUp = this.store.getState().refCount > 0;\n            if (shouldSetUp && !this.isSetUp) {\n                this.backend.setup();\n                this.isSetUp = true;\n            }\n            else if (!shouldSetUp && this.isSetUp) {\n                this.backend.teardown();\n                this.isSetUp = false;\n            }\n        };\n        const store = makeStoreInstance(debugMode);\n        this.store = store;\n        this.monitor = new DragDropMonitorImpl(store, new HandlerRegistryImpl(store));\n        this.backend = createBackend(this);\n        store.subscribe(this.handleRefCountChange);\n    }\n    getContext() {\n        return this.context;\n    }\n    getMonitor() {\n        return this.monitor;\n    }\n    getBackend() {\n        return this.backend;\n    }\n    getRegistry() {\n        return this.monitor.registry;\n    }\n    getActions() {\n        const manager = this;\n        const { dispatch } = this.store;\n        function bindActionCreator(actionCreator) {\n            return (...args) => {\n                const action = actionCreator.apply(manager, args);\n                if (typeof action !== 'undefined') {\n                    dispatch(action);\n                }\n            };\n        }\n        const actions = dragDropActions(this);\n        return Object.keys(actions).reduce((boundActions, key) => {\n            const action = actions[key];\n            boundActions[key] = bindActionCreator(action);\n            return boundActions;\n        }, {});\n    }\n    dispatch(action) {\n        this.store.dispatch(action);\n    }\n}\n","import createBeginDrag from './beginDrag';\nimport createPublishDragSource from './publishDragSource';\nimport createHover from './hover';\nimport createDrop from './drop';\nimport createEndDrag from './endDrag';\nexport * from './types';\nexport default function createDragDropActions(manager) {\n    return {\n        beginDrag: createBeginDrag(manager),\n        publishDragSource: createPublishDragSource(manager),\n        hover: createHover(manager),\n        drop: createDrop(manager),\n        endDrag: createEndDrag(manager),\n    };\n}\n","import DragDropManagerImpl from './DragDropManagerImpl';\nexport function createDragDropManager(backend, context, debugMode) {\n    return new DragDropManagerImpl(backend, context, debugMode);\n}\n","import * as React from 'react';\nimport { createDragDropManager, } from 'dnd-core';\n/**\n * Create the React Context\n */\nexport const DndContext = React.createContext({\n    dragDropManager: undefined,\n});\n/**\n * Creates the context object we're providing\n * @param backend\n * @param context\n */\nexport function createDndContext(backend, context, debugMode) {\n    return {\n        dragDropManager: createDragDropManager(backend, context, debugMode),\n    };\n}\n","import * as React from 'react';\nimport { DndContext, createDndContext } from './DndContext';\n/**\n * A React component that provides the React-DnD context\n */\nexport const DndProvider = ({ children, ...props }) => {\n    const contextValue = 'manager' in props\n        ? { dragDropManager: props.manager }\n        : createDndContext(props.backend, props.context, props.debugMode);\n    return (React.createElement(DndContext.Provider, { value: contextValue }, children));\n};\n","import * as React from 'react';\n/*\n * A utility for rendering a drag preview image\n */\nexport const DragPreviewImage = React.memo(({ connect, src }) => {\n    if (typeof Image !== 'undefined') {\n        const img = new Image();\n        img.src = src;\n        img.onload = () => connect(img);\n    }\n    return null;\n});\nDragPreviewImage.displayName = 'DragPreviewImage';\n","// @ts-ignore\nimport shallowEqual from 'shallowequal';\nimport { useState, useCallback } from 'react';\n/**\n *\n * @param monitor The monitor to colelct state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector(monitor, collect, onUpdate) {\n    const [collected, setCollected] = useState(() => collect(monitor));\n    const updateCollected = useCallback(() => {\n        const nextValue = collect(monitor);\n        if (!shallowEqual(collected, nextValue)) {\n            setCollected(nextValue);\n            if (onUpdate) {\n                onUpdate();\n            }\n        }\n    }, [collected, monitor, onUpdate]);\n    return [collected, updateCollected];\n}\n","import { useEffect } from 'react';\nimport { useCollector } from './useCollector';\nexport function useMonitorOutput(monitor, collect, onCollect) {\n    const [collected, updateCollected] = useCollector(monitor, collect, onCollect);\n    useEffect(function subscribeToMonitorStateChange() {\n        const handlerId = monitor.getHandlerId();\n        if (handlerId == null) {\n            return undefined;\n        }\n        return monitor.subscribeToStateChange(updateCollected, {\n            handlerIds: [handlerId],\n        });\n    }, [monitor, updateCollected]);\n    return collected;\n}\n","export function registerTarget(type, target, manager) {\n    const registry = manager.getRegistry();\n    const targetId = registry.addTarget(type, target);\n    return [targetId, () => registry.removeTarget(targetId)];\n}\nexport function registerSource(type, source, manager) {\n    const registry = manager.getRegistry();\n    const sourceId = registry.addSource(type, source);\n    return [sourceId, () => registry.removeSource(sourceId)];\n}\n","import { useContext } from 'react';\nimport { DndContext } from '../../common/DndContext';\n// @ts-ignore\nimport invariant from 'invariant';\n/**\n * A hook to retrieve the DragDropManager from Context\n */\nexport function useDragDropManager() {\n    const { dragDropManager } = useContext(DndContext);\n    invariant(dragDropManager != null, 'Expected drag drop context');\n    return dragDropManager;\n}\n","// @ts-ignore\nimport invariant from 'invariant';\nlet isCallingCanDrag = false;\nlet isCallingIsDragging = false;\nexport class DragSourceMonitorImpl {\n    constructor(manager) {\n        this.sourceId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n    receiveHandlerId(sourceId) {\n        this.sourceId = sourceId;\n    }\n    getHandlerId() {\n        return this.sourceId;\n    }\n    canDrag() {\n        invariant(!isCallingCanDrag, 'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingCanDrag = true;\n            return this.internalMonitor.canDragSource(this.sourceId);\n        }\n        finally {\n            isCallingCanDrag = false;\n        }\n    }\n    isDragging() {\n        if (!this.sourceId) {\n            return false;\n        }\n        invariant(!isCallingIsDragging, 'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor');\n        try {\n            isCallingIsDragging = true;\n            return this.internalMonitor.isDraggingSource(this.sourceId);\n        }\n        finally {\n            isCallingIsDragging = false;\n        }\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    isDraggingSource(sourceId) {\n        return this.internalMonitor.isDraggingSource(sourceId);\n    }\n    isOverTarget(targetId, options) {\n        return this.internalMonitor.isOverTarget(targetId, options);\n    }\n    getTargetIds() {\n        return this.internalMonitor.getTargetIds();\n    }\n    isSourcePublic() {\n        return this.internalMonitor.isSourcePublic();\n    }\n    getSourceId() {\n        return this.internalMonitor.getSourceId();\n    }\n    subscribeToOffsetChange(listener) {\n        return this.internalMonitor.subscribeToOffsetChange(listener);\n    }\n    canDragSource(sourceId) {\n        return this.internalMonitor.canDragSource(sourceId);\n    }\n    canDropOnTarget(targetId) {\n        return this.internalMonitor.canDropOnTarget(targetId);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n}\n","import { cloneElement } from 'react';\n// @ts-ignore\nimport invariant from 'invariant';\nfunction setRef(ref, node) {\n    if (typeof ref === 'function') {\n        ref(node);\n    }\n    else {\n        ref.current = node;\n    }\n}\nexport function cloneWithRef(element, newRef) {\n    const previousRef = element.ref;\n    invariant(typeof previousRef !== 'string', 'Cannot connect React DnD to an element with an existing string ref. ' +\n        'Please convert it to use a callback ref instead, or wrap it into a <span> or <div>. ' +\n        'Read more: https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute');\n    if (!previousRef) {\n        // When there is no ref on the element, use the new ref directly\n        return cloneElement(element, {\n            ref: newRef,\n        });\n    }\n    return cloneElement(element, {\n        ref: (node) => {\n            setRef(newRef, node);\n            if (previousRef) {\n                setRef(previousRef, node);\n            }\n        },\n    });\n}\n","import { isValidElement } from 'react';\nimport { cloneWithRef } from '../utils/cloneWithRef';\nfunction throwIfCompositeComponentElement(element) {\n    // Custom components can no longer be wrapped directly in React DnD 2.0\n    // so that we don't need to depend on findDOMNode() from react-dom.\n    if (typeof element.type === 'string') {\n        return;\n    }\n    const displayName = element.type.displayName || element.type.name || 'the component';\n    throw new Error('Only native element nodes can now be passed to React DnD connectors.' +\n        `You can either wrap ${displayName} into a <div>, or turn it into a ` +\n        'drag source or a drop target itself.');\n}\nfunction wrapHookToRecognizeElement(hook) {\n    return (elementOrNode = null, options = null) => {\n        // When passed a node, call the hook straight away.\n        if (!isValidElement(elementOrNode)) {\n            const node = elementOrNode;\n            hook(node, options);\n            // return the node so it can be chained (e.g. when within callback refs\n            // <div ref={node => connectDragSource(connectDropTarget(node))}/>\n            return node;\n        }\n        // If passed a ReactElement, clone it and attach this function as a ref.\n        // This helps us achieve a neat API where user doesn't even know that refs\n        // are being used under the hood.\n        const element = elementOrNode;\n        throwIfCompositeComponentElement(element);\n        // When no options are passed, use the hook directly\n        const ref = options ? (node) => hook(node, options) : hook;\n        return cloneWithRef(element, ref);\n    };\n}\nexport default function wrapConnectorHooks(hooks) {\n    const wrappedHooks = {};\n    Object.keys(hooks).forEach(key => {\n        const hook = hooks[key];\n        // ref objects should be passed straight through without wrapping\n        if (key.endsWith('Ref')) {\n            wrappedHooks[key] = hooks[key];\n        }\n        else {\n            const wrappedHook = wrapHookToRecognizeElement(hook);\n            wrappedHooks[key] = () => wrappedHook;\n        }\n    });\n    return wrappedHooks;\n}\n","export function isRef(obj) {\n    return (obj !== null && typeof obj === 'object' && obj.hasOwnProperty('current'));\n}\n","import wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\n// @ts-ignore\nimport shallowEqual from 'shallowequal';\nexport class SourceConnector {\n    constructor(backend) {\n        this.backend = backend;\n        this.hooks = wrapConnectorHooks({\n            dragSource: (node, options) => {\n                this.dragSourceOptions = options || null;\n                if (isRef(node)) {\n                    this.dragSourceRef = node;\n                }\n                else {\n                    this.dragSourceNode = node;\n                }\n                this.reconnectDragSource();\n            },\n            dragPreview: (node, options) => {\n                this.dragPreviewOptions = options || null;\n                if (isRef(node)) {\n                    this.dragPreviewRef = node;\n                }\n                else {\n                    this.dragPreviewNode = node;\n                }\n                this.reconnectDragPreview();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dragSourceRef = null;\n        this.dragSourceOptionsInternal = null;\n        // The drag preview may either be attached via ref or connect function\n        this.dragPreviewRef = null;\n        this.dragPreviewOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDragSource = null;\n        this.lastConnectedDragSourceOptions = null;\n        this.lastConnectedDragPreview = null;\n        this.lastConnectedDragPreviewOptions = null;\n    }\n    receiveHandlerId(newHandlerId) {\n        if (this.handlerId === newHandlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get connectTarget() {\n        return this.dragSource;\n    }\n    get dragSourceOptions() {\n        return this.dragSourceOptionsInternal;\n    }\n    set dragSourceOptions(options) {\n        this.dragSourceOptionsInternal = options;\n    }\n    get dragPreviewOptions() {\n        return this.dragPreviewOptionsInternal;\n    }\n    set dragPreviewOptions(options) {\n        this.dragPreviewOptionsInternal = options;\n    }\n    reconnect() {\n        this.reconnectDragSource();\n        this.reconnectDragPreview();\n    }\n    reconnectDragSource() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() ||\n            this.didConnectedDragSourceChange() ||\n            this.didDragSourceOptionsChange();\n        if (didChange) {\n            this.disconnectDragSource();\n        }\n        const dragSource = this.dragSource;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dragSource) {\n            this.lastConnectedDragSource = dragSource;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragSource = dragSource;\n            this.lastConnectedDragSourceOptions = this.dragSourceOptions;\n            this.dragSourceUnsubscribe = this.backend.connectDragSource(this.handlerId, dragSource, this.dragSourceOptions);\n        }\n    }\n    reconnectDragPreview() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() ||\n            this.didConnectedDragPreviewChange() ||\n            this.didDragPreviewOptionsChange();\n        if (didChange) {\n            this.disconnectDragPreview();\n        }\n        const dragPreview = this.dragPreview;\n        if (!this.handlerId || !dragPreview) {\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDragPreview = dragPreview;\n            this.lastConnectedDragPreviewOptions = this.dragPreviewOptions;\n            this.dragPreviewUnsubscribe = this.backend.connectDragPreview(this.handlerId, dragPreview, this.dragPreviewOptions);\n        }\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didConnectedDragSourceChange() {\n        return this.lastConnectedDragSource !== this.dragSource;\n    }\n    didConnectedDragPreviewChange() {\n        return this.lastConnectedDragPreview !== this.dragPreview;\n    }\n    didDragSourceOptionsChange() {\n        return !shallowEqual(this.lastConnectedDragSourceOptions, this.dragSourceOptions);\n    }\n    didDragPreviewOptionsChange() {\n        return !shallowEqual(this.lastConnectedDragPreviewOptions, this.dragPreviewOptions);\n    }\n    disconnectDragSource() {\n        if (this.dragSourceUnsubscribe) {\n            this.dragSourceUnsubscribe();\n            this.dragSourceUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    }\n    disconnectDragPreview() {\n        if (this.dragPreviewUnsubscribe) {\n            this.dragPreviewUnsubscribe();\n            this.dragPreviewUnsubscribe = undefined;\n            this.dragPreviewNode = null;\n            this.dragPreviewRef = null;\n        }\n    }\n    get dragSource() {\n        return (this.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current));\n    }\n    get dragPreview() {\n        return (this.dragPreviewNode ||\n            (this.dragPreviewRef && this.dragPreviewRef.current));\n    }\n}\n","import { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useDragSourceMonitor, useDragHandler } from './internal/drag';\nimport { useEffect, useRef, useMemo } from 'react';\n// @ts-ignore\nimport invariant from 'invariant';\n/**\n * useDragSource hook\n * @param sourceSpec The drag source specification *\n */\nexport function useDrag(spec) {\n    const specRef = useRef(spec);\n    specRef.current = spec;\n    // TODO: wire options into createSourceConnector\n    invariant(spec.item != null, 'item must be defined');\n    invariant(spec.item.type != null, 'item type must be defined');\n    const [monitor, connector] = useDragSourceMonitor();\n    useDragHandler(specRef, monitor, connector);\n    const result = useMonitorOutput(monitor, specRef.current.collect || (() => ({})), () => connector.reconnect());\n    const connectDragSource = useMemo(() => connector.hooks.dragSource(), [\n        connector,\n    ]);\n    const connectDragPreview = useMemo(() => connector.hooks.dragPreview(), [\n        connector,\n    ]);\n    useEffect(() => {\n        connector.dragSourceOptions = specRef.current.options || null;\n        connector.reconnect();\n    }, [connector]);\n    useEffect(() => {\n        connector.dragPreviewOptions = specRef.current.previewOptions || null;\n        connector.reconnect();\n    }, [connector]);\n    return [result, connectDragSource, connectDragPreview];\n}\n","import { useEffect, useMemo } from 'react';\nimport { registerSource } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { DragSourceMonitorImpl } from '../../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../../common/SourceConnector';\n// @ts-ignore\nimport invariant from 'invariant';\nexport function useDragSourceMonitor() {\n    const manager = useDragDropManager();\n    const monitor = useMemo(() => new DragSourceMonitorImpl(manager), [manager]);\n    const connector = useMemo(() => new SourceConnector(manager.getBackend()), [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexport function useDragHandler(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const handler = useMemo(() => {\n        return {\n            beginDrag() {\n                const { begin, item } = spec.current;\n                if (begin) {\n                    const beginResult = begin(monitor);\n                    invariant(beginResult == null || typeof beginResult === 'object', 'dragSpec.begin() must either return an object, undefined, or null');\n                    return beginResult || item || {};\n                }\n                return item || {};\n            },\n            canDrag() {\n                if (typeof spec.current.canDrag === 'boolean') {\n                    return spec.current.canDrag;\n                }\n                else if (typeof spec.current.canDrag === 'function') {\n                    return spec.current.canDrag(monitor);\n                }\n                else {\n                    return true;\n                }\n            },\n            isDragging(globalMonitor, target) {\n                const { isDragging } = spec.current;\n                return isDragging\n                    ? isDragging(monitor)\n                    : target === globalMonitor.getSourceId();\n            },\n            endDrag() {\n                const { end } = spec.current;\n                if (end) {\n                    end(monitor.getItem(), monitor);\n                }\n                connector.reconnect();\n            },\n        };\n    }, []);\n    useEffect(function registerHandler() {\n        const [handlerId, unregister] = registerSource(spec.current.item.type, handler, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, []);\n}\n","import wrapConnectorHooks from './wrapConnectorHooks';\nimport { isRef } from '../utils/isRef';\n// @ts-ignore\nimport shallowEqual from 'shallowequal';\nexport class TargetConnector {\n    constructor(backend) {\n        this.backend = backend;\n        this.hooks = wrapConnectorHooks({\n            dropTarget: (node, options) => {\n                this.dropTargetOptions = options;\n                if (isRef(node)) {\n                    this.dropTargetRef = node;\n                }\n                else {\n                    this.dropTargetNode = node;\n                }\n                this.reconnect();\n            },\n        });\n        this.handlerId = null;\n        // The drop target may either be attached via ref or connect function\n        this.dropTargetRef = null;\n        this.dropTargetOptionsInternal = null;\n        this.lastConnectedHandlerId = null;\n        this.lastConnectedDropTarget = null;\n        this.lastConnectedDropTargetOptions = null;\n    }\n    get connectTarget() {\n        return this.dropTarget;\n    }\n    reconnect() {\n        // if nothing has changed then don't resubscribe\n        const didChange = this.didHandlerIdChange() ||\n            this.didDropTargetChange() ||\n            this.didOptionsChange();\n        if (didChange) {\n            this.disconnectDropTarget();\n        }\n        const dropTarget = this.dropTarget;\n        if (!this.handlerId) {\n            return;\n        }\n        if (!dropTarget) {\n            this.lastConnectedDropTarget = dropTarget;\n            return;\n        }\n        if (didChange) {\n            this.lastConnectedHandlerId = this.handlerId;\n            this.lastConnectedDropTarget = dropTarget;\n            this.lastConnectedDropTargetOptions = this.dropTargetOptions;\n            this.unsubscribeDropTarget = this.backend.connectDropTarget(this.handlerId, dropTarget, this.dropTargetOptions);\n        }\n    }\n    receiveHandlerId(newHandlerId) {\n        if (newHandlerId === this.handlerId) {\n            return;\n        }\n        this.handlerId = newHandlerId;\n        this.reconnect();\n    }\n    get dropTargetOptions() {\n        return this.dropTargetOptionsInternal;\n    }\n    set dropTargetOptions(options) {\n        this.dropTargetOptionsInternal = options;\n    }\n    didHandlerIdChange() {\n        return this.lastConnectedHandlerId !== this.handlerId;\n    }\n    didDropTargetChange() {\n        return this.lastConnectedDropTarget !== this.dropTarget;\n    }\n    didOptionsChange() {\n        return !shallowEqual(this.lastConnectedDropTargetOptions, this.dropTargetOptions);\n    }\n    disconnectDropTarget() {\n        if (this.unsubscribeDropTarget) {\n            this.unsubscribeDropTarget();\n            this.unsubscribeDropTarget = undefined;\n        }\n    }\n    get dropTarget() {\n        return (this.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current));\n    }\n}\n","// @ts-ignore\nimport invariant from 'invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n    constructor(manager) {\n        this.targetId = null;\n        this.internalMonitor = manager.getMonitor();\n    }\n    receiveHandlerId(targetId) {\n        this.targetId = targetId;\n    }\n    getHandlerId() {\n        return this.targetId;\n    }\n    subscribeToStateChange(listener, options) {\n        return this.internalMonitor.subscribeToStateChange(listener, options);\n    }\n    canDrop() {\n        // Cut out early if the target id has not been set. This should prevent errors\n        // where the user has an older version of dnd-core like in\n        // https://github.com/react-dnd/react-dnd/issues/1310\n        if (!this.targetId) {\n            return false;\n        }\n        invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n        try {\n            isCallingCanDrop = true;\n            return this.internalMonitor.canDropOnTarget(this.targetId);\n        }\n        finally {\n            isCallingCanDrop = false;\n        }\n    }\n    isOver(options) {\n        if (!this.targetId) {\n            return false;\n        }\n        return this.internalMonitor.isOverTarget(this.targetId, options);\n    }\n    getItemType() {\n        return this.internalMonitor.getItemType();\n    }\n    getItem() {\n        return this.internalMonitor.getItem();\n    }\n    getDropResult() {\n        return this.internalMonitor.getDropResult();\n    }\n    didDrop() {\n        return this.internalMonitor.didDrop();\n    }\n    getInitialClientOffset() {\n        return this.internalMonitor.getInitialClientOffset();\n    }\n    getInitialSourceClientOffset() {\n        return this.internalMonitor.getInitialSourceClientOffset();\n    }\n    getSourceClientOffset() {\n        return this.internalMonitor.getSourceClientOffset();\n    }\n    getClientOffset() {\n        return this.internalMonitor.getClientOffset();\n    }\n    getDifferenceFromInitialOffset() {\n        return this.internalMonitor.getDifferenceFromInitialOffset();\n    }\n}\n","import { useMonitorOutput } from './internal/useMonitorOutput';\nimport { useDropHandler, useDropTargetMonitor } from './internal/drop';\nimport { useEffect, useRef, useMemo } from 'react';\n// @ts-ignore\nimport invariant from 'invariant';\n/**\n * useDropTarget Hook\n * @param spec The drop target specification\n */\nexport function useDrop(spec) {\n    const specRef = useRef(spec);\n    specRef.current = spec;\n    invariant(spec.accept != null, 'accept must be defined');\n    const [monitor, connector] = useDropTargetMonitor();\n    useDropHandler(specRef, monitor, connector);\n    const result = useMonitorOutput(monitor, specRef.current.collect || (() => ({})), () => connector.reconnect());\n    const connectDropTarget = useMemo(() => connector.hooks.dropTarget(), [\n        connector,\n    ]);\n    useEffect(() => {\n        connector.dropTargetOptions = spec.options || null;\n        connector.reconnect();\n    }, [spec.options]);\n    return [result, connectDropTarget];\n}\n","import { useEffect, useMemo } from 'react';\nimport { registerTarget } from '../../common/registration';\nimport { useDragDropManager } from './useDragDropManager';\nimport { TargetConnector } from '../../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../../common/DropTargetMonitorImpl';\nexport function useDropTargetMonitor() {\n    const manager = useDragDropManager();\n    const monitor = useMemo(() => new DropTargetMonitorImpl(manager), [manager]);\n    const connector = useMemo(() => new TargetConnector(manager.getBackend()), [\n        manager,\n    ]);\n    return [monitor, connector];\n}\nexport function useDropHandler(spec, monitor, connector) {\n    const manager = useDragDropManager();\n    const handler = useMemo(() => {\n        return {\n            canDrop() {\n                const { canDrop } = spec.current;\n                return canDrop ? canDrop(monitor.getItem(), monitor) : true;\n            },\n            hover() {\n                const { hover } = spec.current;\n                if (hover) {\n                    hover(monitor.getItem(), monitor);\n                }\n            },\n            drop() {\n                const { drop } = spec.current;\n                if (drop) {\n                    return drop(monitor.getItem(), monitor);\n                }\n            },\n        };\n    }, [monitor]);\n    useEffect(function registerHandler() {\n        const [handlerId, unregister] = registerTarget(spec.current.accept, handler, manager);\n        monitor.receiveHandlerId(handlerId);\n        connector.receiveHandlerId(handlerId);\n        return unregister;\n    }, [monitor, connector]);\n}\n","import { useEffect } from 'react';\nimport { useDragDropManager } from './internal/useDragDropManager';\nimport { useCollector } from './internal/useCollector';\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer(collect) {\n    const dragDropManager = useDragDropManager();\n    const monitor = dragDropManager.getMonitor();\n    const [collected, updateCollected] = useCollector(monitor, collect);\n    useEffect(() => monitor.subscribeToOffsetChange(updateCollected));\n    useEffect(() => monitor.subscribeToStateChange(updateCollected));\n    return collected;\n}\n","export function isFunction(input) {\n    return typeof input === 'function';\n}\nexport function noop() {\n    // noop\n}\nfunction isObjectLike(input) {\n    return typeof input === 'object' && input !== null;\n}\nexport function isPlainObject(input) {\n    if (!isObjectLike(input)) {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","export function getDecoratedComponent(instanceRef) {\n    const currentRef = instanceRef.current;\n    if (currentRef == null) {\n        return null;\n    }\n    else if (currentRef.decoratedRef) {\n        // go through the private field in decorateHandler to avoid the invariant hit\n        return currentRef.decoratedRef.current;\n    }\n    else {\n        return currentRef;\n    }\n}\nexport function isClassComponent(Component) {\n    return (Component &&\n        Component.prototype &&\n        typeof Component.prototype.render === 'function');\n}\nexport function isRefForwardingComponent(C) {\n    return (C && C.$$typeof && C.$$typeof.toString() === 'Symbol(react.forward_ref)');\n}\nexport function isRefable(C) {\n    return isClassComponent(C) || isRefForwardingComponent(C);\n}\nexport function checkDecoratorArguments(functionName, signature, ...args) {\n    if (process.env.NODE_ENV !== 'production') {\n        for (const arg of args) {\n            if (arg && arg.prototype && arg.prototype.render) {\n                // eslint-disable-next-line no-console\n                console.error('You seem to be applying the arguments in the wrong order. ' +\n                    `It should be ${functionName}(${signature})(Component), not the other way around. ` +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#you-seem-to-be-applying-the-arguments-in-the-wrong-order');\n                return;\n            }\n        }\n    }\n}\n","import { isFunction, noop } from '../utils/discount_lodash';\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\nexport class Disposable {\n    constructor(action) {\n        this.isDisposed = false;\n        this.action = isFunction(action) ? action : noop;\n    }\n    /**\n     * Validates whether the given object is a disposable\n     * @param {Object} Object to test whether it has a dispose method\n     * @returns {Boolean} true if a disposable object, else false.\n     */\n    static isDisposable(d) {\n        return d && isFunction(d.dispose);\n    }\n    static _fixup(result) {\n        return Disposable.isDisposable(result) ? result : Disposable.empty;\n    }\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n    static create(action) {\n        return new Disposable(action);\n    }\n    /** Performs the task of cleaning up resources. */\n    dispose() {\n        if (!this.isDisposed) {\n            this.action();\n            this.isDisposed = true;\n        }\n    }\n}\n/**\n * Gets the disposable that does nothing when disposed.\n */\nDisposable.empty = { dispose: noop };\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\nexport class CompositeDisposable {\n    constructor(...disposables) {\n        this.isDisposed = false;\n        this.disposables = disposables;\n    }\n    /**\n     * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n     * @param {Any} item Disposable to add.\n     */\n    add(item) {\n        if (this.isDisposed) {\n            item.dispose();\n        }\n        else {\n            this.disposables.push(item);\n        }\n    }\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n    remove(item) {\n        let shouldDispose = false;\n        if (!this.isDisposed) {\n            const idx = this.disposables.indexOf(item);\n            if (idx !== -1) {\n                shouldDispose = true;\n                this.disposables.splice(idx, 1);\n                item.dispose();\n            }\n        }\n        return shouldDispose;\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n    clear() {\n        if (!this.isDisposed) {\n            const len = this.disposables.length;\n            const currentDisposables = new Array(len);\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i] = this.disposables[i];\n            }\n            this.disposables = [];\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i].dispose();\n            }\n        }\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n    dispose() {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            const len = this.disposables.length;\n            const currentDisposables = new Array(len);\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i] = this.disposables[i];\n            }\n            this.disposables = [];\n            for (let i = 0; i < len; i++) {\n                currentDisposables[i].dispose();\n            }\n        }\n    }\n}\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\nexport class SerialDisposable {\n    constructor() {\n        this.isDisposed = false;\n    }\n    /**\n     * Gets the underlying disposable.\n     * @returns {Any} the underlying disposable.\n     */\n    getDisposable() {\n        return this.current;\n    }\n    setDisposable(value) {\n        const shouldDispose = this.isDisposed;\n        if (!shouldDispose) {\n            const old = this.current;\n            this.current = value;\n            if (old) {\n                old.dispose();\n            }\n        }\n        if (shouldDispose && value) {\n            value.dispose();\n        }\n    }\n    /** Performs the task of cleaning up resources. */\n    dispose() {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            const old = this.current;\n            this.current = undefined;\n            if (old) {\n                old.dispose();\n            }\n        }\n    }\n}\n","import * as React from 'react';\nimport { DndContext } from '../index';\nimport { isPlainObject } from '../utils/discount_lodash';\nimport { Disposable, CompositeDisposable, SerialDisposable, } from './disposables';\nimport { isRefable } from './utils';\n// @ts-ignore\nimport invariant from 'invariant';\n// @ts-ignore\nimport hoistStatics from 'hoist-non-react-statics';\n// @ts-ignore\nimport shallowEqual from 'shallowequal';\nexport default function decorateHandler({ DecoratedComponent, createHandler, createMonitor, createConnector, registerHandler, containerDisplayName, getType, collect, options, }) {\n    const { arePropsEqual = shallowEqual } = options;\n    const Decorated = DecoratedComponent;\n    const displayName = DecoratedComponent.displayName || DecoratedComponent.name || 'Component';\n    class DragDropContainer extends React.Component {\n        constructor(props) {\n            super(props);\n            this.decoratedRef = React.createRef();\n            this.handleChange = () => {\n                const nextState = this.getCurrentState();\n                if (!shallowEqual(nextState, this.state)) {\n                    this.setState(nextState);\n                }\n            };\n            this.disposable = new SerialDisposable();\n            this.receiveProps(props);\n            this.dispose();\n        }\n        getHandlerId() {\n            return this.handlerId;\n        }\n        getDecoratedComponentInstance() {\n            invariant(this.decoratedRef.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n            return this.decoratedRef.current;\n        }\n        shouldComponentUpdate(nextProps, nextState) {\n            return (!arePropsEqual(nextProps, this.props) ||\n                !shallowEqual(nextState, this.state));\n        }\n        componentDidMount() {\n            this.disposable = new SerialDisposable();\n            this.currentType = undefined;\n            this.receiveProps(this.props);\n            this.handleChange();\n        }\n        componentDidUpdate(prevProps) {\n            if (!arePropsEqual(this.props, prevProps)) {\n                this.receiveProps(this.props);\n                this.handleChange();\n            }\n        }\n        componentWillUnmount() {\n            this.dispose();\n        }\n        receiveProps(props) {\n            if (!this.handler) {\n                return;\n            }\n            this.handler.receiveProps(props);\n            this.receiveType(getType(props));\n        }\n        receiveType(type) {\n            if (!this.handlerMonitor || !this.manager || !this.handlerConnector) {\n                return;\n            }\n            if (type === this.currentType) {\n                return;\n            }\n            this.currentType = type;\n            const [handlerId, unregister] = registerHandler(type, this.handler, this.manager);\n            this.handlerId = handlerId;\n            this.handlerMonitor.receiveHandlerId(handlerId);\n            this.handlerConnector.receiveHandlerId(handlerId);\n            const globalMonitor = this.manager.getMonitor();\n            const unsubscribe = globalMonitor.subscribeToStateChange(this.handleChange, { handlerIds: [handlerId] });\n            this.disposable.setDisposable(new CompositeDisposable(new Disposable(unsubscribe), new Disposable(unregister)));\n        }\n        dispose() {\n            this.disposable.dispose();\n            if (this.handlerConnector) {\n                this.handlerConnector.receiveHandlerId(null);\n            }\n        }\n        getCurrentState() {\n            if (!this.handlerConnector) {\n                return {};\n            }\n            const nextState = collect(this.handlerConnector.hooks, this.handlerMonitor, this.props);\n            if (process.env.NODE_ENV !== 'production') {\n                invariant(isPlainObject(nextState), 'Expected `collect` specified as the second argument to ' +\n                    '%s for %s to return a plain object of props to inject. ' +\n                    'Instead, received %s.', containerDisplayName, displayName, nextState);\n            }\n            return nextState;\n        }\n        render() {\n            return (React.createElement(DndContext.Consumer, null, ({ dragDropManager }) => {\n                this.receiveDragDropManager(dragDropManager);\n                if (typeof requestAnimationFrame !== 'undefined') {\n                    requestAnimationFrame(() => this.handlerConnector.reconnect());\n                }\n                return (React.createElement(Decorated, Object.assign({}, this.props, this.getCurrentState(), { \n                    // NOTE: if Decorated is a Function Component, decoratedRef will not be populated unless it's a refforwarding component.\n                    ref: isRefable(Decorated) ? this.decoratedRef : null })));\n            }));\n        }\n        receiveDragDropManager(dragDropManager) {\n            if (this.manager !== undefined) {\n                return;\n            }\n            invariant(dragDropManager !== undefined, 'Could not find the drag and drop manager in the context of %s. ' +\n                'Make sure to wrap the top-level component of your app with DragDropContext. ' +\n                'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n            if (dragDropManager === undefined) {\n                return;\n            }\n            this.manager = dragDropManager;\n            this.handlerMonitor = createMonitor(dragDropManager);\n            this.handlerConnector = createConnector(dragDropManager.getBackend());\n            this.handler = createHandler(this.handlerMonitor, this.decoratedRef);\n        }\n    }\n    DragDropContainer.DecoratedComponent = DecoratedComponent;\n    DragDropContainer.displayName = `${containerDisplayName}(${displayName})`;\n    return hoistStatics(DragDropContainer, DecoratedComponent);\n}\n","export function isValidType(type, allowArray) {\n    return (typeof type === 'string' ||\n        typeof type === 'symbol' ||\n        (!!allowArray &&\n            Array.isArray(type) &&\n            type.every(t => isValidType(t, false))));\n}\n","import { isPlainObject } from '../utils/discount_lodash';\nimport { getDecoratedComponent } from './utils';\n// @ts-ignore\nimport invariant from 'invariant';\nconst ALLOWED_SPEC_METHODS = ['canDrag', 'beginDrag', 'isDragging', 'endDrag'];\nconst REQUIRED_SPEC_METHODS = ['beginDrag'];\nclass SourceImpl {\n    constructor(spec, monitor, ref) {\n        this.spec = spec;\n        this.monitor = monitor;\n        this.ref = ref;\n        this.props = null;\n        this.beginDrag = () => {\n            if (!this.props) {\n                return;\n            }\n            const item = this.spec.beginDrag(this.props, this.monitor, this.ref.current);\n            if (process.env.NODE_ENV !== 'production') {\n                invariant(isPlainObject(item), 'beginDrag() must return a plain object that represents the dragged item. ' +\n                    'Instead received %s. ' +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', item);\n            }\n            return item;\n        };\n    }\n    receiveProps(props) {\n        this.props = props;\n    }\n    canDrag() {\n        if (!this.props) {\n            return false;\n        }\n        if (!this.spec.canDrag) {\n            return true;\n        }\n        return this.spec.canDrag(this.props, this.monitor);\n    }\n    isDragging(globalMonitor, sourceId) {\n        if (!this.props) {\n            return false;\n        }\n        if (!this.spec.isDragging) {\n            return sourceId === globalMonitor.getSourceId();\n        }\n        return this.spec.isDragging(this.props, this.monitor);\n    }\n    endDrag() {\n        if (!this.props) {\n            return;\n        }\n        if (!this.spec.endDrag) {\n            return;\n        }\n        this.spec.endDrag(this.props, this.monitor, getDecoratedComponent(this.ref));\n    }\n}\nexport default function createSourceFactory(spec) {\n    Object.keys(spec).forEach(key => {\n        invariant(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drag source specification to only have ' +\n            'some of the following keys: %s. ' +\n            'Instead received a specification with an unexpected \"%s\" key. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', ALLOWED_SPEC_METHODS.join(', '), key);\n        invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' +\n            'Instead received a specification with %s: %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n    });\n    REQUIRED_SPEC_METHODS.forEach(key => {\n        invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' +\n            'Instead received a specification with %s: %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n    });\n    return function createSource(monitor, ref) {\n        return new SourceImpl(spec, monitor, ref);\n    };\n}\n","import { isPlainObject } from '../utils/discount_lodash';\nimport { checkDecoratorArguments } from './utils';\nimport decorateHandler from './decorateHandler';\nimport { registerSource } from '../common/registration';\nimport { DragSourceMonitorImpl } from '../common/DragSourceMonitorImpl';\nimport { SourceConnector } from '../common/SourceConnector';\nimport { isValidType } from '../utils/isValidType';\nimport createSourceFactory from './createSourceFactory';\n// @ts-ignore\nimport invariant from 'invariant';\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\nexport function DragSource(type, spec, collect, options = {}) {\n    checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n    let getType = type;\n    if (typeof type !== 'function') {\n        invariant(isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' +\n            'a string, or a function that returns a string given the current props. ' +\n            'Instead, received %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n        getType = () => type;\n    }\n    invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' +\n        'a plain object. Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n    const createSource = createSourceFactory(spec);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' +\n        'a function that returns a plain object of props to inject. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' +\n        'a plain object when specified. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n    return function decorateSource(DecoratedComponent) {\n        return decorateHandler({\n            containerDisplayName: 'DragSource',\n            createHandler: createSource,\n            registerHandler: registerSource,\n            createConnector: (backend) => new SourceConnector(backend),\n            createMonitor: (manager) => new DragSourceMonitorImpl(manager),\n            DecoratedComponent,\n            getType,\n            collect,\n            options,\n        });\n    };\n}\n","import { isPlainObject } from '../utils/discount_lodash';\nimport { getDecoratedComponent } from './utils';\n// @ts-ignore\nimport invariant from 'invariant';\nconst ALLOWED_SPEC_METHODS = ['canDrop', 'hover', 'drop'];\nclass TargetImpl {\n    constructor(spec, monitor, ref) {\n        this.spec = spec;\n        this.monitor = monitor;\n        this.ref = ref;\n        this.props = null;\n    }\n    receiveProps(props) {\n        this.props = props;\n    }\n    receiveMonitor(monitor) {\n        this.monitor = monitor;\n    }\n    canDrop() {\n        if (!this.spec.canDrop) {\n            return true;\n        }\n        return this.spec.canDrop(this.props, this.monitor);\n    }\n    hover() {\n        if (!this.spec.hover) {\n            return;\n        }\n        this.spec.hover(this.props, this.monitor, getDecoratedComponent(this.ref));\n    }\n    drop() {\n        if (!this.spec.drop) {\n            return undefined;\n        }\n        const dropResult = this.spec.drop(this.props, this.monitor, this.ref.current);\n        if (process.env.NODE_ENV !== 'production') {\n            invariant(typeof dropResult === 'undefined' || isPlainObject(dropResult), 'drop() must either return undefined, or an object that represents the drop result. ' +\n                'Instead received %s. ' +\n                'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', dropResult);\n        }\n        return dropResult;\n    }\n}\nexport default function createTargetFactory(spec) {\n    Object.keys(spec).forEach(key => {\n        invariant(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drop target specification to only have ' +\n            'some of the following keys: %s. ' +\n            'Instead received a specification with an unexpected \"%s\" key. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', ALLOWED_SPEC_METHODS.join(', '), key);\n        invariant(typeof spec[key] === 'function', 'Expected %s in the drop target specification to be a function. ' +\n            'Instead received a specification with %s: %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', key, key, spec[key]);\n    });\n    return function createTarget(monitor, ref) {\n        return new TargetImpl(spec, monitor, ref);\n    };\n}\n","import { isPlainObject } from '../utils/discount_lodash';\nimport { registerTarget } from '../common/registration';\nimport { isValidType } from '../utils/isValidType';\nimport { TargetConnector } from '../common/TargetConnector';\nimport { DropTargetMonitorImpl } from '../common/DropTargetMonitorImpl';\nimport { checkDecoratorArguments } from './utils';\nimport decorateHandler from './decorateHandler';\nimport createTargetFactory from './createTargetFactory';\n// @ts-ignore\nimport invariant from 'invariant';\nexport function DropTarget(type, spec, collect, options = {}) {\n    checkDecoratorArguments('DropTarget', 'type, spec, collect[, options]', type, spec, collect, options);\n    let getType = type;\n    if (typeof type !== 'function') {\n        invariant(isValidType(type, true), 'Expected \"type\" provided as the first argument to DropTarget to be ' +\n            'a string, an array of strings, or a function that returns either given ' +\n            'the current props. Instead, received %s. ' +\n            'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', type);\n        getType = () => type;\n    }\n    invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DropTarget to be ' +\n        'a plain object. Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', spec);\n    const createTarget = createTargetFactory(spec);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DropTarget to be ' +\n        'a function that returns a plain object of props to inject. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DropTarget to be ' +\n        'a plain object when specified. ' +\n        'Instead, received %s. ' +\n        'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target', collect);\n    return function decorateTarget(DecoratedComponent) {\n        return decorateHandler({\n            containerDisplayName: 'DropTarget',\n            createHandler: createTarget,\n            registerHandler: registerTarget,\n            createMonitor: (manager) => new DropTargetMonitorImpl(manager),\n            createConnector: (backend) => new TargetConnector(backend),\n            DecoratedComponent,\n            getType,\n            collect,\n            options,\n        });\n    };\n}\n","import * as React from 'react';\nimport { DndContext } from '../index';\nimport { isPlainObject } from '../utils/discount_lodash';\nimport { isRefable, checkDecoratorArguments } from './utils';\n// @ts-ignore\nimport hoistStatics from 'hoist-non-react-statics';\n// @ts-ignore\nimport invariant from 'invariant';\n// @ts-ignore\nimport shallowEqual from 'shallowequal';\nexport function DragLayer(collect, options = {}) {\n    checkDecoratorArguments('DragLayer', 'collect[, options]', collect, options);\n    invariant(typeof collect === 'function', 'Expected \"collect\" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ', 'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', collect);\n    invariant(isPlainObject(options), 'Expected \"options\" provided as the second argument to DragLayer to be a plain object when specified. ' +\n        'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer', options);\n    return function decorateLayer(DecoratedComponent) {\n        const Decorated = DecoratedComponent;\n        const { arePropsEqual = shallowEqual } = options;\n        const displayName = Decorated.displayName || Decorated.name || 'Component';\n        class DragLayerContainer extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.isCurrentlyMounted = false;\n                this.ref = React.createRef();\n                this.handleChange = () => {\n                    if (!this.isCurrentlyMounted) {\n                        return;\n                    }\n                    const nextState = this.getCurrentState();\n                    if (!shallowEqual(nextState, this.state)) {\n                        this.setState(nextState);\n                    }\n                };\n            }\n            getDecoratedComponentInstance() {\n                invariant(this.ref.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n                return this.ref.current;\n            }\n            shouldComponentUpdate(nextProps, nextState) {\n                return (!arePropsEqual(nextProps, this.props) ||\n                    !shallowEqual(nextState, this.state));\n            }\n            componentDidMount() {\n                this.isCurrentlyMounted = true;\n                this.handleChange();\n            }\n            componentWillUnmount() {\n                this.isCurrentlyMounted = false;\n                if (this.unsubscribeFromOffsetChange) {\n                    this.unsubscribeFromOffsetChange();\n                    this.unsubscribeFromOffsetChange = undefined;\n                }\n                if (this.unsubscribeFromStateChange) {\n                    this.unsubscribeFromStateChange();\n                    this.unsubscribeFromStateChange = undefined;\n                }\n            }\n            render() {\n                return (React.createElement(DndContext.Consumer, null, ({ dragDropManager }) => {\n                    if (dragDropManager === undefined) {\n                        return null;\n                    }\n                    this.receiveDragDropManager(dragDropManager);\n                    // Let componentDidMount fire to initialize the collected state\n                    if (!this.isCurrentlyMounted) {\n                        return null;\n                    }\n                    return (React.createElement(Decorated, Object.assign({}, this.props, this.state, { ref: isRefable(Decorated) ? this.ref : null })));\n                }));\n            }\n            receiveDragDropManager(dragDropManager) {\n                if (this.manager !== undefined) {\n                    return;\n                }\n                this.manager = dragDropManager;\n                invariant(typeof dragDropManager === 'object', 'Could not find the drag and drop manager in the context of %s. ' +\n                    'Make sure to wrap the top-level component of your app with DragDropContext. ' +\n                    'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n                const monitor = this.manager.getMonitor();\n                this.unsubscribeFromOffsetChange = monitor.subscribeToOffsetChange(this.handleChange);\n                this.unsubscribeFromStateChange = monitor.subscribeToStateChange(this.handleChange);\n            }\n            getCurrentState() {\n                if (!this.manager) {\n                    return {};\n                }\n                const monitor = this.manager.getMonitor();\n                return collect(monitor, this.props);\n            }\n        }\n        DragLayerContainer.displayName = `DragLayer(${displayName})`;\n        DragLayerContainer.DecoratedComponent = DecoratedComponent;\n        return hoistStatics(DragLayerContainer, DecoratedComponent);\n    };\n}\n","import * as React from 'react';\nimport { DndContext, createDndContext } from '../common/DndContext';\nimport { checkDecoratorArguments, isRefable } from './utils';\n// @ts-ignore\nimport invariant from 'invariant';\n// @ts-ignore\nimport hoistStatics from 'hoist-non-react-statics';\n/**\n * Wrap the root component of your application with DragDropContext decorator to set up React DnD.\n * This lets you specify the backend, and sets up the shared DnD state behind the scenes.\n * @param backendFactory The DnD backend factory\n * @param backendContext The backend context\n */\nexport function DragDropContext(backendFactory, backendContext, debugMode) {\n    checkDecoratorArguments('DragDropContext', 'backend', backendFactory);\n    const childContext = createDndContext(backendFactory, backendContext, debugMode);\n    return function decorateContext(DecoratedComponent) {\n        const Decorated = DecoratedComponent;\n        const displayName = Decorated.displayName || Decorated.name || 'Component';\n        class DragDropContextContainer extends React.Component {\n            constructor() {\n                super(...arguments);\n                this.ref = React.createRef();\n                this.getManager = () => childContext.dragDropManager;\n            }\n            getDecoratedComponentInstance() {\n                invariant(this.ref.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n                return this.ref.current;\n            }\n            render() {\n                return (React.createElement(DndContext.Provider, { value: childContext },\n                    React.createElement(Decorated, Object.assign({}, this.props, { ref: isRefable(Decorated) ? this.ref : null }))));\n            }\n        }\n        DragDropContextContainer.DecoratedComponent = DecoratedComponent;\n        DragDropContextContainer.displayName = `DragDropContext(${displayName})`;\n        return hoistStatics(DragDropContextContainer, DecoratedComponent);\n    };\n}\n"],"sourceRoot":""}