{
  "@ally-doc-inert": "Considering the `<html>` and `<body>` element focusable should have no benefit to a website (unless explicitly made focusable by adding the `tabindex` attribute), which is why ally.js considers the `<html>` and `<body>` element inert.",
  "html": {
    "alias": [
      "iframe -> html",
      "iframe{focusable} -> html",
      "iframe[tabindex=-1] -> html",
      "iframe{focusable}[tabindex=-1] -> html",
      "iframe{hidden} -> html",
      "iframe{none} -> html",
      "details iframe -> html"
    ],
    "ally": "@ally-doc-inert",
    "general": "The `<html>` element itself is not considered focusable, but some browsers may give it focus when focus is passed from browser UI to the document."
  },

  "body": {
    "alias": [
      "iframe -> body",
      "iframe{focusable} -> body",
      "iframe[tabindex=-1] -> body",
      "iframe{focusable}[tabindex=-1] -> body",
      "iframe{hidden} -> body",
      "iframe{none} -> body",
      "details iframe -> body"
    ],
    "ally": "@ally-doc-inert",
    "general": "The `<body>` element itself is not considered focusable, but it is has focus (i.e. is `document.activeElement`) if no other element has focus."
  },

  "form[disabled]": {
    "alias": [
      "form[disabled][tabindex=-1]",
      "form[disabled][tabindex=0]",
      "form[disabled] input",
      "form[disabled][tabindex=-1] input",
      "form[disabled][tabindex=0] input"
    ],
    "general": "HTML5 does *not* specify that the [`<form>` element](https://www.w3.org/TR/html5/forms.html#the-form-element) knows the [`disabled` attribute](https://www.w3.org/TR/html5/forms.html#attr-fe-disabled)."
  },

  "@fieldset-disabled-input": "should not be focusable as per [disabled elements](https://www.w3.org/TR/html5/disabled-elements.html#concept-element-disabled). [Blink 453847](https://code.google.com/p/chromium/issues/detail?id=453847), [Webkit 141086](https://bugs.webkit.org/show_bug.cgi?id=141086)",
  "fieldset[disabled][tabindex=0]": {
    "alias": [
      "fieldset[disabled][tabindex=-1]"
    ],
    "browsers": {
      "chrome-stable": "@fieldset-disabled-input",
      "chrome-nightly": "@fieldset-disabled-input",
      "safari-9": "@fieldset-disabled-input",
      "webkit-nightly": "@fieldset-disabled-input",
      "chrome-mobile": "@fieldset-disabled-input",
      "ios-9": "@fieldset-disabled-input"
    }
  },

  "label[for=label-target][tabindex=-1]": {
    "alias": [
      "label[for=label-target]",
      "label[tabindex=-1]",
      "label[tabindex=0]",
      "label:has(input)"
    ],
    "general": "The activation behavior of the [`<label>`](https://www.w3.org/TR/html5/forms.html#the-label-element) element is not defined beyond »… should match the platform's label behavior.«"
  },

  "@ie-label-click-script": "Internet Explorer redirects focus from `<label>` to the referenced form control element upon mouse click, but *not* on script focus via `element.focus()`.",
  "label[for=label-target]": {
    "alias": [
      "label[for=label-target-focusable]",
      "label:has(input)"
    ],
    "browsers": {
      "ie-9": "@ie-label-click-script",
      "ie-10": "@ie-label-click-script",
      "ie-11": "@ie-label-click-script",
      "ie-12": "@ie-label-click-script",
      "ie-13": "@ie-label-click-script"
    }
  },

  "span{user-modify}": "The CSS property [`user-modify`](https://www.w3.org/TR/2000/WD-css3-userint-20000216#user-modify) was proposed and dropped from [CSS UI Level 3](https://www.w3.org/TR/css3-ui/) and has thus not become a standard yet.",

  "@invalid-tabindex-value": "The value is invalid according to [rules for parsing integers](https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers) required by [HTML5 tabindex](https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",
  "@empty-tabindex-ie11": "`tabindex=\"\"` is parsed to the value `-32768`. [Trident 1072965](https://connect.microsoft.com/IE/feedback/details/1072965)",
  "[tabindex=3 ]": "The value's trailing spaces are considered invalid according to [rules for parsing integers](https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers) required by [HTML5 tabindex](https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",
  "[tabindex=3x]": "The value's trailing non-numeric characters are considered invalid according to [rules for parsing integers](https://www.w3.org/TR/html5/infrastructure.html#rules-for-parsing-integers) required by [HTML5 tabindex](https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",
  "[tabindex=hello]": "@invalid-tabindex-value",
  "input[tabindex=hello]": "@invalid-tabindex-value",
  "[tabindex=]": {
    "general": "@invalid-tabindex-value",
    "browsers": {
      "ie-9": "@empty-tabindex-ie11",
      "ie-10": "@empty-tabindex-ie11",
      "ie-11": "@empty-tabindex-ie11",
      "ie-12": "@empty-tabindex-ie11",
      "ie-13": "@empty-tabindex-ie11"
    }
  },

  "@image-map-firefox-loading": "The `<map>`'s `<area>`s are inert (not focusable) as long as the image is still loading.",
  "img[usemap] area[href].upper": {
    "browsers": {
      "firefox-stable": "@image-map-firefox-loading",
      "firefox-nightly": "@image-map-firefox-loading"
    }
  },

  "@image-map-area-no-href": "If an `<area>` element doesn't have an `href` attribute, it's not a link (and should therefore not be interactive).",
  "img[useman] area": {
    "alias": [
      "img[usemap] area[tabindex=-1]",
      "img[tabindex=-1] area"
    ],
    "browsers": {
      "firefox-stable": "@image-map-area-no-href",
      "firefox-nightly": "@image-map-area-no-href"
    }
  },

  "map.invalid-image area[href].lower": "Some browsers will not make an image map focusable, if it is associated with an `<img>` that does have a proper image loaded.",

  "audio": "`<audio>` is considered [interactive content](https://www.w3.org/TR/html5/dom.html#interactive-content) only with the <code>controls</code> attribute present",
  "video": "`<video>` is considered [interactive content](https://www.w3.org/TR/html5/dom.html#interactive-content) only with the <code>controls</code> attribute present",

  "@shadow-dom-support": "[Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) is currently only \"properly\" supported in Blink based browsers (Chrome, Opera). Firefox exposes the (considerably buggy) development state behind flags.\n\nSee [Can I Use](http://caniuse.com/#feat=shadowdom).",
  "-shadow-dom-support": {
    "alias": [
      "shadow-host",
      "shadow-host inner-host",
      "shadow-host[tabindex=-1]",
      "shadow-host[tabindex=-1] inner-host",
      "shadow-host[tabindex=0]",
      "shadow-host[tabindex=0] inner-host",
      "shadow-host input[tabindex=-1]",
      "shadow-host input[tabindex=0]",
      "shadow-host input[tabindex=2]",
      "shadow-host inner-host input[tabindex=-1]",
      "shadow-host inner-host input[tabindex=0]",
      "shadow-host inner-host input[tabindex=1]",
      "shadow-host[tabindex=-1] input[tabindex=-1]",
      "shadow-host[tabindex=-1] input[tabindex=0]",
      "shadow-host[tabindex=-1] input[tabindex=2]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=-1]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=0]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=1]",
      "shadow-host[tabindex=0] input[tabindex=-1]",
      "shadow-host[tabindex=0] input[tabindex=0]",
      "shadow-host[tabindex=0] input[tabindex=2]",
      "shadow-host[tabindex=0] inner-host input[tabindex=-1]",
      "shadow-host[tabindex=0] inner-host input[tabindex=0]",
      "shadow-host[tabindex=0] inner-host input[tabindex=1]"
    ],
    "general": "@shadow-dom-support"
  },

  "@shadow-host-target": "Regardless of its own focusable state, an element hosting a Shadow DOM can become the `activeElement` if an element inside the `ShadowRoot` has focus. See [Shadow DOM - Active Element](https://w3c.github.io/webcomponents/spec/shadow/#active-element)",
  "-shadow-host-target": {
    "alias": [
      "shadow-host",
      "shadow-host inner-host",
      "shadow-host[tabindex=-1]",
      "shadow-host[tabindex=-1] inner-host",
      "shadow-host[tabindex=0]",
      "shadow-host[tabindex=0] inner-host"
    ],
    "general": "@shadow-host-target"
  },

  "@shadow-host-content": "The `activeElement` is scoped within the Shadow DOM, meaning the master documet does not know which shadowed content currently has focus. To indicate that a shadowed element has focus, the element hosting the shadowed content is made the `activeElement` regardless of its ability to receive focus otherwise.",
  "-shadow-host-content": {
    "alias": [
      "shadow-host input[tabindex=-1]",
      "shadow-host input[tabindex=0]",
      "shadow-host input[tabindex=2]",
      "shadow-host inner-host input[tabindex=-1]",
      "shadow-host inner-host input[tabindex=0]",
      "shadow-host inner-host input[tabindex=1]",
      "shadow-host[tabindex=-1] input[tabindex=-1]",
      "shadow-host[tabindex=-1] input[tabindex=0]",
      "shadow-host[tabindex=-1] input[tabindex=2]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=-1]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=0]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=1]",
      "shadow-host[tabindex=0] input[tabindex=-1]",
      "shadow-host[tabindex=0] input[tabindex=0]",
      "shadow-host[tabindex=0] input[tabindex=2]",
      "shadow-host[tabindex=0] inner-host input[tabindex=-1]",
      "shadow-host[tabindex=0] inner-host input[tabindex=0]",
      "shadow-host[tabindex=0] inner-host input[tabindex=1]"
    ],
    "general": "@shadow-host-content"
  },

  "@sop-iframe": "Technically the content of an iframe [can be accessible to script](https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#Scripting).",
  "iframe{focusable} -> input": {
    "alias": [
      "iframe",
      "iframe -> html",
      "iframe -> body",

      "iframe[tabindex=-1]",
      "iframe[tabindex=-1] -> html",
      "iframe[tabindex=-1] -> body",

      "iframe{focusable}",
      "iframe{focusable} -> html",
      "iframe{focusable} -> body",
      "iframe{focusable} -> input",
      "iframe{focusable} -> input[tabindex=1]",

      "iframe{focusable}[tabindex=-1]",
      "iframe{focusable}[tabindex=-1] -> html",
      "iframe{focusable}[tabindex=-1] -> body",
      "iframe{focusable}[tabindex=-1] -> input",
      "iframe{focusable}[tabindex=-1] -> input[tabindex=1]",

      "iframe[src=svg]",
      "iframe[src=svg][tabindex=-1]",

      "inert-in-ally-query{iframe content}",
      "inert-in-ally-is{iframe content}",
      "inert-in-ally-query{iframe svg:file}",
      "inert-in-ally-is{iframe svg:file}"
    ],
    "ally": "Because of the [Same Origin Policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy) we can't reliably look inside `<iframe>`s to determine their content, which is why ally.js considers all `<iframe>` content inert",
    "general": "@sop-iframe"
  },

  "iframe[src=svg] -> file:svg": {
    "alias": [
      "iframe[src=svg] -> file:svg a[xlink|href]",
      "iframe[src=svg] -> file:svg a[xlink|href][tabindex=1]",
      "iframe[src=svg] -> file:svg a[xlink|href][tabindex=-1]",
      "iframe[src=svg] -> file:svg a[focusable=false]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[focusable=false]"
    ],
    "general": "@sop-iframe"
  },

  "embed[type=svg] -> file:svg": {
    "alias": [
      "embed[type=svg] -> file:svg a[xlink|href]",
      "embed[type=svg] -> file:svg a[xlink|href][tabindex=1]",
      "embed[type=svg] -> file:svg a[xlink|href][tabindex=-1]",
      "embed[type=svg] -> file:svg a[focusable=false]",
      "embed[type=svg][tabindex=0] -> file:svg",
      "embed[type=svg][tabindex=0] -> file:svg a[xlink|href]",
      "embed[type=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=1]",
      "embed[type=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=-1]",
      "embed[type=svg][tabindex=0] -> file:svg a[focusable=false]",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href]",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1]",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1]",
      "embed[type=svg][tabindex=-1] -> file:svg a[focusable=false]",
      "inert-in-ally-query{embed svg:file}",
      "inert-in-ally-is{embed svg:file}"
    ],
    "ally": "Because there is no API to dive into the content document of an `<embed>` element, ally.js considers all `<embed>` content inert.",
    "general": "There is no API to interact with the content document of an `<embed>` element"
  },

  "@object-hidden": "`<object>` with visibility:hidden should not be focusable - [Blink 586191](https://code.google.com/p/chromium/issues/detail?id=586191)",
  "object[src=svg]{hidden}": {
    "alias": [
      "object[src=swf]{hidden}"
    ],
    "browsers": {
      "chrome-mobile": "@object-hidden",
      "chrome-stable": "@object-hidden",
      "chrome-nightly": "@object-hidden"
    }
  },

  "object[src=svg] -> file:svg": {
    "alias": [
      "object[src=svg] -> file:svg a[xlink|href]",
      "object[src=svg] -> file:svg a[xlink|href][tabindex=1]",
      "object[src=svg] -> file:svg a[xlink|href][tabindex=-1]",
      "object[src=svg] -> file:svg a[focusable=false]",
      "object[src=svg][tabindex=0] -> file:svg",
      "object[src=svg][tabindex=0] -> file:svg a[xlink|href]",
      "object[src=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=1]",
      "object[src=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=-1]",
      "object[src=svg][tabindex=0] -> file:svg a[focusable=false]",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href]",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1]",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1]",
      "object[src=svg][tabindex=-1] -> file:svg a[focusable=false]",
      "object[src=svg][height=0] -> file:svg",
      "object[src=svg][height=0] -> file:svg a[xlink|href]",
      "object[src=svg][height=0] -> file:svg a[xlink|href][tabindex=1]",
      "object[src=svg][height=0] -> file:svg a[xlink|href][tabindex=-1]",
      "object[src=svg][height=0] -> file:svg a[focusable=false]",
      "inert-in-ally-query{object svg:file}",
      "inert-in-ally-is{object svg:file}"
    ],
    "ally": "Because of the [Same Origin Policy](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy) we can't reliably look inside `<object>`s to determine their content, which is why ally.js considers all `<object>` content inert.",
    "general": "Technically the content of an `<object>` element [can be accessible to script](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement)."
  },

  "embed": {
    "alias": [
      "embed[tabindex=-1]",
      "embed[type=mp4]",
      "embed[type=mp4][tabindex=-1]",
      "embed[type=ogv]",
      "embed[type=ogv][tabindex=-1]",
      "embed[type=svg]",
      "embed[type=svg][tabindex=-1]",
      "embed[type=svg][tabindex=0]"
    ],
    "ally": "Because the behavior of the `<embed>` element depends on the content type and browser plugin, ally considers all `<embed>` elements focus-relevant but *not* focusable.",
    "general": "The behavior of the `<embed>` element depends on the content type and browser plugin."
  },

  "-embed-video": {
    "alias": [
      "embed",
      "embed[tabindex=-1]",
      "embed[type=mp4]",
      "embed[type=mp4][tabindex=-1]",
      "embed[type=ogv]",
      "embed[type=ogv][tabindex=-1]"
    ],
    "general": "The [`<video>` element](https://developer.mozilla.org/en/docs/Web/HTML/Element/video) should be used for embedding video content instead of [`<embed>` element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed). The HTML5 `<video>` element is supported [virtually everywhere](http://caniuse.com/#feat=video)."
  },

  "-embed-svg": {
    "alias": [
      "embed[type=svg]",
      "embed[type=svg][tabindex=-1]",
      "embed[type=svg][tabindex=0]"
    ],
    "general": "It is *highly* recommended to [embed `<svg>`](https://developer.mozilla.org/en/docs/SVG_In_HTML_Introduction) directly into the document or use the [`<object>` element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object) instead."
  },

  "object": {
    "alias": [
      "object[src=swf]",
      "object[src=swf][tabindex=-1]",
      "object[src=swf][tabindex=0]",
      "object[src=swf][height=0]",
      "object[src=svg]",
      "object[src=svg][tabindex=-1]",
      "object[src=svg][tabindex=0]",
      "object[src=svg][height=0]"
    ],
    "general": "The behavior of the `<object>` element depends on the content it presents. The most common content types used with `<object>` are `SVG` and `SWF`."
  },

  "object[src=swf]": {
    "alias": [
      "object[src=swf][height=0]",
      "object[src=swf][tabindex=0]"
    ],
    "browsers": {
      "ie-10": "This element is actually **tabbable** (keyboard focusable).\n\nBut when tabbing to it, the <kbd>Tab</kbd> behavior for the entire document **breaks**, as focus remains stuck on the browser UI.\n\nThis might be related to [Trident 1109008](https://connect.microsoft.com/IE/feedback/details/1109008)."
    }
  },

  "svg": {
    "alias": [
      "svg[tabindex=-1]",
      "svg[focusable=false]",
      "svg:has(a[tabindex=-1])",
      "svg:has(a[tabindex=0])",

      "svg a[xlink|href]",
      "svg a[xlink|href] text",
      "svg[tabindex=-1] a[xlink|href]",
      "svg[tabindex=-1] a[xlink|href] text",
      "svg a[focusable=false]",

      "svg a[xlink|href][tabindex=-1]",
      "svg a[xlink|href][tabindex=-1] text",
      "svg a[xlink|href][tabindex=0]",
      "svg a[xlink|href][tabindex=0] text",
      "svg a[xlink|href][tabindex=1]",
      "svg a[xlink|href][tabindex=1] text",

      "svg rect",
      "svg text",
      "svg rect[tabindex=0]",
      "svg rect[tabindex=-1]",
      "svg rect[focusable=true]",

      "svg[focusable=false] a[xlink|href]",

      "svg{viewbox}",
      "svg rect[tabindex=0]{viewbox}",
      "svg rect[tabindex=-1]{viewbox}",
      "svg rect[focusable=true]{viewbox}",

      "svg{tiny}",
      "svg{tiny} rect[focusable=true]",
      "svg{tiny} rect[tabindex=0]",
      "svg{tiny} a[focusable=false]",
      "svg{tiny} a[tabindex=-1]",
      "svg{tiny} rect[focusable=true][tabindex=-1]",
      "svg{tiny} rect[focusable=false][tabindex=0]",
      "svg{tiny}[focusable=false]",
      "svg{tiny}[focusable=false] a",

      "svg rect[onfocus]"
    ],
    "general": "[SVG 1.1](https://www.w3.org/TR/SVG/access.html) does not specify much in respect to accessibility. [SVG 2](https://svgwg.org/svg2-draft/access.html#AccessibilityAndSVG) will bring the `tabindex` attribute. [SVG Tiny 1.2](https://www.w3.org/TR/SVGTiny12/interact.html#focusable-attr) knows the `focusable` attribute."
  },

  "@svg-onfocus": "By registering a `focus` event listener the element becomes focusable. [Blink 445798](https://code.google.com/p/chromium/issues/detail?id=445798), [WebKit 140024](https://bugs.webkit.org/show_bug.cgi?id=140024).\n\nThis is **undetectable** because elements don't provide a list of their registered event handlers.",
  "svg rect[onfocus]": {
    "ally": "Elements made focusable by way of adding a `focus` event listener cannot be identified by ally.js",
    "browsers": {
      "chrome-stable": "@svg-onfocus",
      "chrome-nightly": "@svg-onfocus",
      "chrome-mobile": "@svg-onfocus",
      "opera-stable":  "@svg-onfocus",
      "safari-6": "@svg-onfocus",
      "safari-8": "@svg-onfocus",
      "safari-9": "@svg-onfocus",
      "webkit-nightly": "@svg-onfocus",
      "ios-9": "@svg-onfocus"
    }
  },

  "@old-ie-hidden": "IE9 and IE10 do not support the [`hidden` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden).",
  "[hidden] input": {
    "alias": [
      "[hidden][tabindex=-1]",
      "[hidden][tabindex=-1] input",
      "[hidden][tabindex=0]",
      "[hidden][tabindex=0] input"
    ],
    "browsers": {
      "ie-9": "@old-ie-hidden",
      "ie-10": "@old-ie-hidden"
    }
  },

  "[hidden]{displayed} input": {
    "general": "The `hidden` attribute itself has no effect on whether an element is focusable or not. It's the CSS style `disaply: none` that is set by the `hidden` attribute that counts."
  },

  "details": {
    "alias": [
      "details[tabindex=-1]",
      "details a[href]",
      "details summary",
      "details summary[tabindex=-1]",
      "details:has(summary[tabindex=-1]) a[href]",
      "details[tabindex=-1] a[href]",
      "details[tabindex=-1] summary",
      "details[open] a[href]",
      "details[open] summary"
    ],
    "general": "The [`<details>`](https://www.w3.org/TR/html51/semantics.html#the-details-element) element is specified in HTML 5.1, but [not implemented everywhere](http://caniuse.com/#feat=details)."
  },

  "-details-webkit-151767": {
    "alias": [
      "details object[src=svg]",
      "details a[href]",
      "details[tabindex=-1] a[href]",
      "details:has(summary[tabindex=-1]) a[href]"
    ],
    "browsers": {
      "webkit-nightly": "This element should be keyboard focusable (tabbable), but is currently only focusable because of [WebKit 151767](https://bugs.webkit.org/show_bug.cgi?id=151767)"
    }
  },

  "-details-closed-webkit-151767": {
    "alias": [
      "details summary",
      "details[tabindex=-1] summary",
      "details[open] summary",
      "details[open] a[href]"
    ],
    "browsers": {
      "webkit-nightly": "This element should *not* be focusable (tabbable), but is currently only focusable because of [WebKit 151767](https://bugs.webkit.org/show_bug.cgi?id=151767)"
    }
  },

  "@ie-scroll-div": "Internet Explorer turns `<div>` and `<span>` elements focusable when they're scrollable, but does *not* do the same for other sectioning or block-level elements",
  "section{scroll-container-overflow-scroll}": {
    "browsers": {
      "ie-10": "@ie-scroll-div",
      "ie-11": "@ie-scroll-div"
    }
  },

  "@ismap-ie-bug": "The [`ismap` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-ismap) makes the `<img>` focusable (in addition to the parent `<a>`)",
  "a > img[ismap]": {
    "alias": [
      "a[tabindex=-1] > img[ismap]"
    ],
    "browsers": {
      "ie-9": "@ismap-ie-bug",
      "ie-10": "@ismap-ie-bug",
      "ie-11": "@ismap-ie-bug",
      "ie-12": "@ismap-ie-bug",
      "ie-13": "@ismap-ie-bug"
    }
  },

  "@flexbox-ie-bug": "There is no indication that the focusability of an element can be inherited by its children, let alone triggered by flexbox layout.",
  "a{flexbox} > span": {
    "alias": [
      "[tabindex=-1]{flexbox} > span",
      "span{flexbox}",
      "span{flexbox}:empty",
      "span{flexbox} > span",
      "div{flexbox}",
      "div{flexbox} > span{order:1}",
      "div{flexbox} > span{order:2}"
    ],
    "browsers": {
      "ie-10": "@flexbox-ie-bug",
      "ie-11": "@flexbox-ie-bug"
    }
  },

  "link[itemprop][href]": "naturally focusable according to [HTML5 tabindex](https://www.w3.org/TR/html5/editing.html#sequential-focus-navigation-and-the-tabindex-attribute)",

  "@firefox-bug-1116126-message": "Firefox may hide elements from the document's tabbing sequence if they're enclosed by two images referencing the same image map - [Gecko 1116126](https://bugzilla.mozilla.org/show_bug.cgi?id=1116126).",
  "firefox-bug-1116126": {
    "general": "This test is not about an element's focusable state, but about potentially content that's potentially hidden from the tabbing sequence.",
    "browsers": {
      "firefox-stable": "@firefox-bug-1116126-message",
      "firefox-nightly": "@firefox-bug-1116126-message"
    }
  },

  "@firefox-keygen-select": "Firefox transforms `<keygen>` to `<select _moz-type=\"-mozilla-keygen\">` while parsing HTML.",
  "keygen": {
    "alias": [
      "keygen[tabindex=-1]",
      "inert-in-ally-query{keygen}",
      "inert-in-ally-is{keygen}"
    ],
    "browsers": {
      "firefox-stable": "@firefox-keygen-select",
      "firefox-nightly": "@firefox-keygen-select"
    },
    "ally": "Because the `<keygen>` element is poorly supported, ally considers all `<keygen>` elements focus-relevant but *not* focusable.",
    "general": "The `<keygen>` element is poorly supported, practically never used and has seen [intent to deprecate](https://groups.google.com/a/chromium.org/forum/m/#!msg/blink-dev/pX5NbX0Xack/kmHsyMGJZAMJ)"
  },

  "@negative-tabindex-browsing-context": "Keyboard focusable (tabbable) content in nested [browsing contexts](https://www.w3.org/TR/html51/browsers.html) (`<iframe>`, `<object>`, `<element>`) is demoted to script and mouse focusable if the browsing context container has `tabindex=\"-1\"`.",
  "-negative-tabindex-browsing-context": {
    "alias": [
      "iframe[tabindex=-1] -> body",
      "iframe{focusable}[tabindex=-1] -> body",
      "iframe{focusable}[tabindex=-1] -> input",
      "iframe{focusable}[tabindex=-1] -> input[tabindex=1]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1]",
      "iframe[src=svg][tabindex=-1] -> file:svg a[focusable=false]",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href]",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1]",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1]",
      "embed[type=svg][tabindex=-1] -> file:svg a[focusable=false]",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href]",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1]",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1]",
      "object[src=svg][tabindex=-1] -> file:svg a[focusable=false]"
    ],
    "general": "@negative-tabindex-browsing-context"
  },

  "@negative-tabindex-svg": "The focusable state of descendant elements of an `<svg>` element are not affected by `tabindex=\"-1\"` on the `<svg>` element, contrary to the behavior of [browsing contexts](https://www.w3.org/TR/html51/browsers.html) (`<iframe>`, `<object>`, `<element>`).",
  "-negative-tabindex-svg": {
    "alias": [
      "svg[tabindex=-1] a[xlink|href]",
      "svg[tabindex=-1] a[xlink|href] text"
    ],
    "general": "@negative-tabindex-svg"
  },

  "@negative-tabindex-shadow-dom": "The focusable state of content elements in Shadow DOM are not affected by `tabindex=\"-1\"` on the shadow host, contrary to the behavior of [browsing contexts](https://www.w3.org/TR/html51/browsers.html) (`<iframe>`, `<object>`, `<element>`).",
  "-negative-tabindex-shadow-dom": {
    "alias": [
      "shadow-host[tabindex=-1] input[tabindex=0]",
      "shadow-host[tabindex=-1] input[tabindex=-1]",
      "shadow-host[tabindex=-1] input[tabindex=2]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=-1]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=0]",
      "shadow-host[tabindex=-1] inner-host input[tabindex=1]"
    ],
    "general": "@negative-tabindex-shadow-dom"
  },

  "@redirect-referenced-input": "Focus is redirected to the [labeled control](https://www.w3.org/TR/html5/forms.html#labeled-control).",
  "@redirect-nested-input": "Focus is redirected to the nested [labeled control](https://www.w3.org/TR/html5/forms.html#labeled-control).",

  "@redirect-legend-next-tabbable": "Focus is redirected to the the next keyboard focusable (tabbable) element after the `<legend>` in DOM order (not in order of the document's tab sequence). Note that this does not necessarily have to be a descendant of the same `<fieldset>` element.",
  "@redirect-legend-input": "Focus is redirected to the the first focusable form control element (`<input>`, `<select>`, `<textarea>`, `<button>`) of the `<fieldset>` the `<legend>` is the child of.",

  "@redirect-image-area": "Focus is redirected to the the first `<area>` element of the referenced image map.",
  "-redirections": {
    "redirect": {
      "label[for=label-target] --- input[type=text]": "@redirect-referenced-input",
      "label[for=label-target-focusable] --- input[type=text][tabindex=-1]": "@redirect-referenced-input",
      "label[for=label-target][tabindex=-1] --- input[type=text]": "@redirect-referenced-input",
      "label:has(input) --- label:has(input) input": "@redirect-nested-input",

      "fieldset legend --- fieldset input[tabindex=-1]": "@redirect-legend-input",
      "fieldset:has(input[tabindex=-1]) legend --- fieldset:has(input[tabindex=-1]) input[tabindex=-1]": "@redirect-legend-input",
      "fieldset:has(textarea) legend --- fieldset:has(textarea) textarea": "@redirect-legend-input",
      "fieldset:has(select) legend --- fieldset:has(select) select": "@redirect-legend-input",
      "fieldset:has(button) legend --- fieldset:has(button) button": "@redirect-legend-input",

      "fieldset legend --- fieldset input": "@redirect-legend-next-tabbable",
      "fieldset:has(a) legend --- fieldset:has(a) a": "@redirect-legend-next-tabbable",
      "fieldset:has(input[tabindex=-1]) legend --- fieldset{no-tabbable} a[tabindex=1]": "@redirect-legend-next-tabbable",

      "img[usemap] --- img[usemap] area[href].upper": "@redirect-image-area",
      "img[usemap].duplicate.first --- img[usemap].duplicate area[href]": "@redirect-image-area",
      "img[usemap].duplicate.second --- img[usemap].duplicate area[href]": "@redirect-image-area",
      "img[usemap].focusable --- area[href][tabindex=-1].upper": "@redirect-image-area",
      "img[usemap][tabindex=-1] --- img[tabindex=-1] area[href].upper": "@redirect-image-area",
      "img[usemap].invalid --- map.invalid-image area[href].upper": "@redirect-image-area"
    }
  },

  "@encapsulated-iframe": "The `<iframe>`'s document manages its own focus. Any time the `<iframe>` or its content has focus, the master document's `activeElement` points to the `<iframe>`.\n\nNote that `<iframe>`s are only [accessible to script](https://developer.mozilla.org/en/docs/Web/HTML/Element/iframe#Scripting) when they share [the same origin](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy).",
  "-encapsulated-iframe": {
    "redirect": {
      "iframe -> html --- iframe": "@encapsulated-iframe",
      "iframe -> body --- iframe": "@encapsulated-iframe",
      "iframe[tabindex=-1] -> html --- iframe[tabindex=-1]": "@encapsulated-iframe",
      "iframe[tabindex=-1] -> body --- iframe[tabindex=-1]": "@encapsulated-iframe",
      "iframe{focusable} -> html --- iframe{focusable}": "@encapsulated-iframe",
      "iframe{focusable} -> body --- iframe{focusable}": "@encapsulated-iframe",
      "iframe{focusable} -> input --- iframe{focusable}": "@encapsulated-iframe",
      "iframe{focusable} -> input[tabindex=1] --- iframe{focusable}": "@encapsulated-iframe",
      "iframe{focusable}[tabindex=-1] -> html --- iframe{focusable}[tabindex=-1]": "@encapsulated-iframe",
      "iframe{focusable}[tabindex=-1] -> body --- iframe{focusable}[tabindex=-1]": "@encapsulated-iframe",
      "iframe{focusable}[tabindex=-1] -> input --- iframe{focusable}[tabindex=-1]": "@encapsulated-iframe",
      "iframe{focusable}[tabindex=-1] -> input[tabindex=1] --- iframe{focusable}[tabindex=-1]": "@encapsulated-iframe",
      "iframe[src=svg] -> file:svg a[xlink|href] --- iframe[src=svg]": "@encapsulated-iframe",
      "iframe[src=svg] -> file:svg a[xlink|href][tabindex=1] --- iframe[src=svg]": "@encapsulated-iframe",
      "iframe[src=svg] -> file:svg a[xlink|href][tabindex=-1] --- iframe[src=svg]": "@encapsulated-iframe",
      "iframe[src=svg] -> file:svg a[focusable=false] --- iframe[src=svg]": "@encapsulated-iframe",
      "iframe[src=svg][tabindex=-1] -> file:svg --- iframe[src=svg][tabindex=-1]": "@encapsulated-iframe",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href] --- iframe[src=svg][tabindex=-1]": "@encapsulated-iframe",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1] --- iframe[src=svg][tabindex=-1]": "@encapsulated-iframe",
      "iframe[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1] --- iframe[src=svg][tabindex=-1]": "@encapsulated-iframe",
      "iframe[src=svg][tabindex=-1] -> file:svg a[focusable=false] --- iframe[src=svg][tabindex=-1]": "@encapsulated-iframe",
      "iframe{hidden} -> input --- iframe{hidden}": "@encapsulated-iframe",
      "iframe{hidden} -> input[tabindex=1] --- iframe{hidden}": "@encapsulated-iframe",
      "iframe{hidden} -> html --- iframe{hidden}": "@encapsulated-iframe",
      "iframe{none} -> input --- iframe{none}": "@encapsulated-iframe",
      "iframe{none} -> input[tabindex=1] --- iframe{none}": "@encapsulated-iframe",
      "details iframe -> html --- details iframe": "@encapsulated-iframe",
      "details iframe -> body --- details iframe": "@encapsulated-iframe",
      "details iframe -> input --- details iframe": "@encapsulated-iframe",
      "details iframe -> input[tabindex=1] --- details iframe": "@encapsulated-iframe",
      "svg a[xlink|href] --- iframe[src=svg]": "@encapsulated-iframe",
      "svg a[xlink|href] --- iframe[src=svg][tabindex=-1]": "@encapsulated-iframe"
    }
  },

  "@encapsulated-embed": "Browser plugins running the `<embed>` can manage their own focus. Any time the `<embed>` or its content has focus, the master document's `activeElement` points to the `<embed>`.\n\nNote that the content of `<embed>` elements is not accessible to scripting from the outside, but from within the `<embed>`'s document JavaScript can interact with [`window.parent`](https://developer.mozilla.org/en-US/docs/Web/API/Window/parent).",
  "-encapsulated-embed": {
    "redirect": {
      "embed[type=svg] -> file:svg --- embed[type=svg]": "@encapsulated-embed",
      "embed[type=svg] -> file:svg a[xlink|href] --- embed[type=svg]": "@encapsulated-embed",
      "embed[type=svg] -> file:svg a[xlink|href][tabindex=1] --- embed[type=svg]": "@encapsulated-embed",
      "embed[type=svg] -> file:svg a[xlink|href][tabindex=-1] --- embed[type=svg]": "@encapsulated-embed",
      "embed[type=svg] -> file:svg a[focusable=false] --- embed[type=svg]": "@encapsulated-embed",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href] --- embed[type=svg][tabindex=-1]": "@encapsulated-embed",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1] --- embed[type=svg][tabindex=-1]": "@encapsulated-embed",
      "embed[type=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1] --- embed[type=svg][tabindex=-1]": "@encapsulated-embed",
      "embed[type=svg][tabindex=-1] -> file:svg a[focusable=false] --- embed[type=svg][tabindex=-1]": "@encapsulated-embed",
      "embed[type=svg][tabindex=0] -> file:svg --- embed[type=svg][tabindex=0]": "@encapsulated-embed",
      "embed[type=svg][tabindex=0] -> file:svg a[xlink|href] --- embed[type=svg][tabindex=0]": "@encapsulated-embed",
      "embed[type=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=1] --- embed[type=svg][tabindex=0]": "@encapsulated-embed",
      "embed[type=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=-1] --- embed[type=svg][tabindex=0]": "@encapsulated-embed",
      "embed[type=svg][tabindex=0] -> file:svg a[focusable=false] --- embed[type=svg][tabindex=0]": "@encapsulated-embed",
      "svg a[xlink|href] --- embed[type=svg]": "@encapsulated-embed",
      "svg a[xlink|href] --- embed[type=svg][tabindex=-1]": "@encapsulated-embed",
      "svg a[xlink|href] --- embed[type=svg][tabindex=0]": "@encapsulated-embed"
    }
  },

  "@encapsulated-object": "The `<object>`'s document manages its own focus. Any time the `<object>` or its content has focus, the master document's `activeElement` points to the `<object>`.\n\nNote that `<object>`s are only [accessible to script](https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement) via `element.contentWindow` when they share [the same origin](https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy).",
  "-encapsulated-object": {
    "redirect": {
      "object[src=svg] -> file:svg --- object[src=svg]": "@encapsulated-object",
      "object[src=svg] -> file:svg a[xlink|href] --- object[src=svg]": "@encapsulated-object",
      "object[src=svg] -> file:svg a[xlink|href][tabindex=1] --- object[src=svg]": "@encapsulated-object",
      "object[src=svg] -> file:svg a[xlink|href][tabindex=-1] --- object[src=svg]": "@encapsulated-object",
      "object[src=svg] -> file:svg a[focusable=false] --- object[src=svg]": "@encapsulated-object",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href] --- object[src=svg][tabindex=-1]": "@encapsulated-object",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=1] --- object[src=svg][tabindex=-1]": "@encapsulated-object",
      "object[src=svg][tabindex=-1] -> file:svg a[xlink|href][tabindex=-1] --- object[src=svg][tabindex=-1]": "@encapsulated-object",
      "object[src=svg][tabindex=-1] -> file:svg a[focusable=false] --- object[src=svg][tabindex=-1]": "@encapsulated-object",
      "object[src=svg][tabindex=0] -> file:svg --- object[src=svg][tabindex=0]": "@encapsulated-object",
      "object[src=svg][tabindex=0] -> file:svg a[xlink|href] --- object[src=svg][tabindex=0]": "@encapsulated-object",
      "object[src=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=1] --- object[src=svg][tabindex=0]": "@encapsulated-object",
      "object[src=svg][tabindex=0] -> file:svg a[xlink|href][tabindex=-1] --- object[src=svg][tabindex=0]": "@encapsulated-object",
      "object[src=svg][tabindex=0] -> file:svg a[focusable=false] --- object[src=svg][tabindex=0]": "@encapsulated-object",
      "object[src=svg][height=0] -> file:svg --- object[src=svg][height=0]": "@encapsulated-object",
      "object[src=svg][height=0] -> file:svg a[xlink|href] --- object[src=svg][height=0]": "@encapsulated-object",
      "object[src=svg][height=0] -> file:svg a[xlink|href][tabindex=1] --- object[src=svg][height=0]": "@encapsulated-object",
      "object[src=svg][height=0] -> file:svg a[xlink|href][tabindex=-1] --- object[src=svg][height=0]": "@encapsulated-object",
      "object[src=svg][height=0] -> file:svg a[focusable=false] --- object[src=svg][height=0]": "@encapsulated-object",
      "object[src=svg]{hidden} -> file:svg a[focusable=false] --- object[src=svg]{hidden}": "@encapsulated-object",
      "object[src=svg]{hidden} -> file:svg a[xlink|href] --- object[src=svg]{hidden}": "@encapsulated-object",
      "object[src=svg]{hidden} -> file:svg a[xlink|href][tabindex=-1] --- object[src=svg]{hidden}": "@encapsulated-object",
      "object[src=svg]{hidden} -> file:svg a[xlink|href][tabindex=1] --- object[src=svg]{hidden}": "@encapsulated-object",
      "svg a[xlink|href] --- object[src=svg]": "@encapsulated-object",
      "svg a[xlink|href] --- object[src=svg][tabindex=-1]": "@encapsulated-object",
      "svg a[xlink|href] --- object[src=svg][tabindex=0]": "@encapsulated-object",
      "svg a[xlink|href] --- object[src=svg][height=0]": "@encapsulated-object"
    }
  },

  "@encapsulated-shadow-dom": "Whenever an element within a ShadowRoot has focus, the element hosting the [`ShadowRoot`](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot) is considered the `activeElement` of the document, as per the [active element adjustment algorithm](https://w3c.github.io/webcomponents/spec/shadow/#active-element).\n\nFirefox' Shadow DOM implementation still has a few problems: [Gecko 1117535](https://bugzilla.mozilla.org/show_bug.cgi?id=1117535), [Gecko 1117544](https://bugzilla.mozilla.org/show_bug.cgi?id=1117544), [Gecko 1117552](https://bugzilla.mozilla.org/show_bug.cgi?id=1117552).",
  "-encapsulated-shadow-dom": {
    "redirect": {
      "shadow-host input[tabindex=0] --- shadow-host": "@encapsulated-shadow-dom",
      "shadow-host input[tabindex=-1] --- shadow-host": "@encapsulated-shadow-dom",
      "shadow-host input[tabindex=2] --- shadow-host": "@encapsulated-shadow-dom",
      "shadow-host inner-host input[tabindex=-1] --- shadow-host": "@encapsulated-shadow-dom",
      "shadow-host inner-host input[tabindex=0] --- shadow-host": "@encapsulated-shadow-dom",
      "shadow-host inner-host input[tabindex=1] --- shadow-host": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=-1] input[tabindex=0] --- shadow-host[tabindex=-1]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=-1] input[tabindex=-1] --- shadow-host[tabindex=-1]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=-1] input[tabindex=2] --- shadow-host[tabindex=-1]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=-1] inner-host input[tabindex=-1] --- shadow-host[tabindex=-1]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=-1] inner-host input[tabindex=0] --- shadow-host[tabindex=-1]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=-1] inner-host input[tabindex=1] --- shadow-host[tabindex=-1]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=0] input[tabindex=0] --- shadow-host[tabindex=0]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=0] input[tabindex=-1] --- shadow-host[tabindex=0]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=0] input[tabindex=2] --- shadow-host[tabindex=0]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=0] inner-host input[tabindex=-1] --- shadow-host[tabindex=0]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=0] inner-host input[tabindex=0] --- shadow-host[tabindex=0]": "@encapsulated-shadow-dom",
      "shadow-host[tabindex=0] inner-host input[tabindex=1] --- shadow-host[tabindex=0]": "@encapsulated-shadow-dom"
    }
  },

  "related:iframe": "<iframe>",
  "related:iframe[src=svg]": "<iframe>",
  "related:iframe[src=svg][tabindex=-1]": "<iframe>",
  "related:iframe[tabindex=-1]": "<iframe>",
  "related:iframe{focusable}": "<iframe>",
  "related:iframe{focusable}[tabindex=-1]": "<iframe>",
  "related:iframe{hidden}": "<iframe>",
  "related:iframe{none}": "<iframe>",
  "related:details iframe": "<iframe>",

  "related:img[usemap]": "<img usemap=\"…\">",
  "related:img[usemap][tabindex=-1]": "<img usemap=\"…\">",
  "related:img[usemap].focusable": "<img usemap=\"…\">",
  "related:img[usemap].duplicate.second": "<img usemap=\"…\">",
  "related:img[usemap].invalid": "<img usemap=\"…\">",

  "related:embed[type=svg]": "<embed type=\"image/svg+xml\">",
  "related:embed[type=svg][tabindex=-1]": "<embed type=\"image/svg+xml\">",
  "related:embed[type=svg][tabindex=0]": "<embed type=\"image/svg+xml\">",

  "related:object[usemap]": "<object usemap=\"…\">",
  "related:object[src=svg]": "<object type=\"image/svg+xml\">",
  "related:object[src=svg][height=0]": "<object type=\"image/svg+xml\">",
  "related:object[src=svg][tabindex=-1]": "<object type=\"image/svg+xml\">",
  "related:object[src=svg][tabindex=0]": "<object type=\"image/svg+xml\">",
  "related:object[src=svg]{hidden}": "<object type=\"image/svg+xml\">",
  "related:object[src=svg]{none}": "<object type=\"image/svg+xml\">",

  "related:shadow-host": "ShadowHost",
  "related:shadow-host inner-host": "ShadowHost",
  "related:shadow-host[tabindex=-1]": "ShadowHost",
  "related:shadow-host[tabindex=-1] inner-host": "ShadowHost",
  "related:shadow-host[tabindex=0]": "ShadowHost",
  "related:shadow-host[tabindex=0] inner-host": "ShadowHost",
  "related:shadow-host{hidden}": "ShadowHost",
  "related:shadow-host{hidden} inner-host": "ShadowHost",
  "related:shadow-host{none} inner-host": "ShadowHost",

  "@element-not-tested": "This element could not be tested in this browser."
}