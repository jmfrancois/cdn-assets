{"version":3,"sources":["webpack://PathToRegexp/webpack/universalModuleDefinition","webpack://PathToRegexp/webpack/bootstrap","webpack://PathToRegexp/./talend-umds/path-to-regexp/2.2.1/node_modules/path-to-regexp/index.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pathToRegexp","parse","compile","str","options","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","join","res","tokens","index","path","defaultDelimiter","delimiter","delimiters","pathEscaped","exec","escaped","offset","slice","length","prev","next","capture","group","modifier","k","indexOf","push","partial","undefined","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","matches","Array","data","encode","encodeURIComponent","token","segment","isArray","TypeError","j","test","String","replace","flags","sensitive","keys","strict","end","endsWith","concat","map","route","isEndDelimited","groups","source","match","regexpToRegexp","parts","arrayToRegexp","stringToRegexp"],"mappings":"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","file":"PathToRegexp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PathToRegexp\"] = factory();\n\telse\n\t\troot[\"PathToRegexp\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n  var isEndDelimited = tokens.length === 0\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?'\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?'\n        }\n      } else {\n        route += prefix + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n"],"sourceRoot":""}